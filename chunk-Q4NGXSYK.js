import{a as r}from"./chunk-G45ERDUB.js";import{a as g}from"./chunk-R2FYFHTZ.js";import"./chunk-FGWLUFMG.js";import{a}from"./chunk-JLOZFYHF.js";import{Ba as d,R as c,Ta as i,pb as l,qb as p,wc as w}from"./chunk-VFFNGGE6.js";import{a as t,b as o,g as u}from"./chunk-ODLL2QMY.js";var y=u(w());var v={title:"Dynamic vs Static nodes",mdFile:"./index.md",category:r,order:2},s=v;var h=[];var x={},m=x;var j=`<h1 id="dynamic-vs-static-nodes" class="ngde">Dynamic vs Static nodes<a title="Link to heading" class="ng-doc-header-link ngde" href="/getting-started/dynamic-vs-static-nodes#dynamic-vs-static-nodes"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1><ng-doc-blockquote type="info" class="ngde"><p class="ngde">You can't mix <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/ngx-vflow/type-aliases/Node" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">Node</a></code> and <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/ngx-vflow/type-aliases/DynamicNode" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">DynamicNode</a></code> in a single array so you have to choose what you want to use</p></ng-doc-blockquote><p class="ngde">For more complex scenarios, you might need to have a fine-grained control on specific nodes.</p><p class="ngde">In such cases, you can use <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/ngx-vflow/type-aliases/DynamicNode" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">DynamicNode</a></code>, which is essentially a <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/ngx-vflow/type-aliases/Node" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">Node</a></code> with properties with same names but with a <code class="ngde">WritableSignal</code> type. This offers the following benefits:</p><ul class="ngde"><li class="ngde">Granular updates to specific nodes with efficient rendering (only the affected node is re-rendered).</li><li class="ngde">Access to the updated state of a node directly (without listening events). For instance, if a point changes due to drag-and-drop, the node's <code class="ngde">point()</code> signal will reflect the new position.</li><li class="ngde">Additional benefits of signals, such as executing actions within an effect when a dynamic property changes.</li></ul><ng-doc-blockquote type="info" class="ngde"><p class="ngde">Not all properties of <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/ngx-vflow/type-aliases/DynamicNode" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">DynamicNode</a></code> are <code class="ngde">WritableSignal</code>, for instance an <code class="ngde">id</code> must be static, so it remains of a regular <code class="ngde">string</code> type</p></ng-doc-blockquote><h2 id="code-example" class="ngde">Code example<a title="Link to heading" class="ng-doc-header-link ngde" href="/getting-started/dynamic-vs-static-nodes#code-example"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h2><p class="ngde">If you want to change a node's position programmatically, you would:</p><pre class="ngde hljs"><code class="hljs language-ts code-lines ngde" lang="ts" name="" icon="" highlightedlines="[]"><span class="line ngde">...
</span><span class="line ngde">
</span><span class="line ngde"><span class="hljs-keyword ngde">public</span> <span class="hljs-attr ngde">nodes</span>: <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/type-aliases/DynamicNode" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">DynamicNode</a></span>[] = [
</span><span class="line ngde">  {
</span><span class="line ngde">    <span class="hljs-attr ngde">type</span>: <span class="hljs-string ngde">'default'</span>
</span><span class="line ngde">    <span class="hljs-attr ngde">id</span>: <span class="hljs-string ngde">'1'</span>,
</span><span class="line ngde">    <span class="hljs-attr ngde">point</span>: <span class="hljs-title function_ ngde">signal</span>({ <span class="hljs-attr ngde">x</span>: <span class="hljs-number ngde">100</span>, <span class="hljs-attr ngde">y</span>: <span class="hljs-number ngde">100</span> })
</span><span class="line ngde">  }
</span><span class="line ngde">]
</span><span class="line ngde">
</span><span class="line ngde"><span class="hljs-title function_ ngde">updatePosition</span>(<span class="hljs-params ngde"></span>) {
</span><span class="line ngde">  <span class="hljs-keyword ngde">const</span> [node] = <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">nodes</span>
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-comment ngde">// The first node will move to new position</span>
</span><span class="line ngde">  node.<span class="hljs-property ngde">point</span>.<span class="hljs-title function_ ngde">set</span>({ <span class="hljs-attr ngde">x</span>: <span class="hljs-number ngde">150</span>, <span class="hljs-attr ngde">y</span>: <span class="hljs-number ngde">150</span> })
</span><span class="line ngde">}
</span><span class="line ngde">
</span><span class="line ngde">...
</span><span class="line ngde">
</span></code></pre><h2 id="see-also" class="ngde">See also<a title="Link to heading" class="ng-doc-header-link ngde" href="/getting-started/dynamic-vs-static-nodes#see-also"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h2><ul class="ngde"><li class="ngde"><a href="/workshops/layout/force" class="ngde">D3 Force</a></li></ul>`,k=(()=>{class e extends a{constructor(){super(),this.routePrefix="",this.pageType="guide",this.pageContent=j,this.editSourceFileUrl="https://github.com/artem-mangilev/ngx-vflow/edit/main/projects/ngx-vflow-demo/src/app/categories/getting-started/pages/dynamic-vs-static-nodes/index.md?message=docs(dynamic-vs-static-nodes): describe your changes here...",this.page=s,this.demoAssets=m}static{this.\u0275fac=function(n){return new(n||e)}}static{this.\u0275cmp=c({type:e,selectors:[["ng-doc-page-getting-started-dynamic-vs-static-nodes"]],standalone:!0,features:[l([{provide:a,useExisting:e},h,s.providers??[]]),d,p],decls:1,vars:0,template:function(n,N){n&1&&i(0,"ng-doc-page")},dependencies:[g],encapsulation:2,changeDetection:0})}}return e})(),D=[o(t({},(0,y.isRoute)(s.route)?s.route:{}),{path:"",component:k,title:"Dynamic vs Static nodes"})],L=D;export{k as DynamicComponent,L as default};
