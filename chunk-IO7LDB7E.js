import{Db as d,Ea as a,Ma as g,Oa as i,bd as v,c as h,cd as b,da as p,dd as m,ga as l,h as f,ra as c}from"./chunk-WSOERDLG.js";function w(n){n||(a(w),n=c(i));let e=new h(t=>n.onDestroy(t.next.bind(t)));return t=>t.pipe(p(e))}var y=class{constructor(e){this.source=e,this.destroyed=!1,this.destroyRef=c(i),this.destroyRef.onDestroy(()=>{this.destroyed=!0})}subscribe(e){if(this.destroyed)throw new l(953,!1);let t=this.source.pipe(w(this.destroyRef)).subscribe({next:r=>e(r)});return{unsubscribe:()=>t.unsubscribe()}}};function I(n,e){return new y(n)}function k(n,e){!e?.injector&&a(k);let t=e?.injector??c(g),r=new f(1),s=m(()=>{let u;try{u=n()}catch(o){b(()=>r.error(o));return}b(()=>r.next(u))},{injector:t,manualCleanup:!0});return t.get(i).onDestroy(()=>{s.destroy(),r.complete()}),r.asObservable()}function x(n,e){let t=!e?.manualCleanup;t&&!e?.injector&&a(x);let r=t?e?.injector?.get(i)??c(i):null,s;e?.requireSync?s=d({kind:0}):s=d({kind:1,value:e?.initialValue});let u=n.subscribe({next:o=>s.set({kind:1,value:o}),error:o=>{if(e?.rejectErrors)throw o;s.set({kind:2,error:o})}});return r?.onDestroy(u.unsubscribe.bind(u)),v(()=>{let o=s();switch(o.kind){case 1:return o.value;case 2:throw o.error;case 0:throw new l(601,"`toSignal()` called with `requireSync` but `Observable` did not emit synchronously.")}})}function M(n,e,t){let r=t.value;return t.value=function(...s){queueMicrotask(()=>{r?.apply(this,s)})},t}export{w as a,I as b,k as c,x as d,M as e};
