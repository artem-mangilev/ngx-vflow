"use strict";(self.webpackChunkngx_vflow_demo=self.webpackChunkngx_vflow_demo||[]).push([[5619],{4554:(m,o,s)=>{s.r(o),s.d(o,{DynamicComponent:()=>c,default:()=>h});var l=s(6286),p=s(7134),d=s(9143);const a={title:"Unit testing component nodes",mdFile:"./index.md",category:{title:"Testing",order:2},order:2},i=[],g={};var n=s(5879);let c=(()=>{class e extends l.a{constructor(){super(),this.routePrefix="",this.pageType="guide",this.pageContent='<h1 id="unit-testing-component-nodes" class="ngde">Unit testing component nodes<a title="Link to heading" class="ng-doc-header-link ngde" href="/testing/unit-testing-component-nodes#unit-testing-component-nodes"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1><p class="ngde">To simplify writing isolated tests for component nodes, you can use the <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/ngx-vflow/functions/provideCustomNodeMocks" class="ng-doc-code-anchor ngde" data-link-type="Function" class="ngde">provideCustomNodeMocks</a></code> function. This helps prevent dependency injection (DI) errors that occur when a node is used outside the scope of the <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/ngx-vflow/classes/VflowComponent" class="ng-doc-code-anchor ngde" data-link-type="Component" class="ngde">VflowComponent</a></code>.</p><pre class="ngde hljs"><code class="hljs language-ts code-lines ngde" lang="ts" name="" icon="" highlightedlines="[]"><span class="line ngde"><span class="hljs-meta ngde">@Component</span>({\n</span><span class="line ngde">  <span class="hljs-attr ngde">standalone</span>: <span class="hljs-literal ngde">true</span>,\n</span><span class="line ngde">  <span class="hljs-attr ngde">template</span>: <span class="hljs-string ngde">`&#x3C;div resizable>&#x3C;handle />&#x3C;/div>`</span>,\n</span><span class="line ngde">  <span class="hljs-attr ngde">imports</span>: [<span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/classes/VflowModule" class="ng-doc-code-anchor ngde" data-link-type="NgModule" class="ngde">VflowModule</a></span>]\n</span><span class="line ngde">})\n</span><span class="line ngde"><span class="hljs-keyword ngde">class</span> <span class="hljs-title class_ ngde">TestCustomNodeComponent</span> <span class="hljs-keyword ngde">extends</span> <span class="hljs-title class_ inherited__ ngde"><a href="/api/ngx-vflow/classes/CustomNodeComponent" class="ng-doc-code-anchor ngde" data-link-type="Directive" class="ngde">CustomNodeComponent</a></span> { }\n</span><span class="line ngde">\n</span><span class="line ngde"><span class="hljs-title function_ ngde">describe</span>((<span class="hljs-string ngde">\'TestCustomNodeComponent\'</span>), <span class="hljs-function ngde">() =></span> {\n</span><span class="line ngde">  <span class="hljs-keyword ngde">let</span> <span class="hljs-attr ngde">component</span>: <span class="hljs-title class_ ngde">TestCustomNodeComponent</span>;\n</span><span class="line ngde">  <span class="hljs-keyword ngde">let</span> <span class="hljs-attr ngde">fixture</span>: <span class="hljs-title class_ ngde">ComponentFixture</span>&#x3C;<span class="hljs-title class_ ngde">TestCustomNodeComponent</span>>;\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-title function_ ngde">beforeEach</span>(<span class="hljs-function ngde">() =></span> {\n</span><span class="line ngde">    <span class="hljs-title class_ ngde">TestBed</span>.<span class="hljs-title function_ ngde">configureTestingModule</span>({\n</span><span class="line ngde">      <span class="hljs-attr ngde">imports</span>: [<span class="hljs-title class_ ngde">TestCustomNodeComponent</span>],\n</span><span class="line ngde">      <span class="hljs-attr ngde">providers</span>: [<span class="hljs-title function_ ngde"><a href="/api/ngx-vflow/functions/provideCustomNodeMocks" class="ng-doc-code-anchor ngde" data-link-type="Function" class="ngde">provideCustomNodeMocks</a></span>()]\n</span><span class="line ngde">    });\n</span><span class="line ngde">\n</span><span class="line ngde">    fixture = <span class="hljs-title class_ ngde">TestBed</span>.<span class="hljs-title function_ ngde">createComponent</span>(<span class="hljs-title class_ ngde">TestCustomNodeComponent</span>);\n</span><span class="line ngde">    component = fixture.<span class="hljs-property ngde">componentInstance</span>;\n</span><span class="line ngde">  });\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-title function_ ngde">it</span>(<span class="hljs-string ngde">\'should create\'</span>, <span class="hljs-function ngde">() =></span> {\n</span><span class="line ngde">    <span class="hljs-comment ngde">// should create without DI errors</span>\n</span><span class="line ngde">    <span class="hljs-title function_ ngde">expect</span>(component).<span class="hljs-title function_ ngde">toBeTruthy</span>();\n</span><span class="line ngde">  });\n</span><span class="line ngde">})\n</span></code></pre>',this.editSourceFileUrl="https://github.com/artem-mangilev/ngx-vflow/edit/main/projects/ngx-vflow-demo/src/app/categories/testing/pages/unit-testing-component-nodes/index.md?message=docs(unit-testing-component-nodes): describe your changes here...",this.page=a,this.demoAssets=g}static#s=this.\u0275fac=function(t){return new(t||e)};static#n=this.\u0275cmp=n.Xpm({type:e,selectors:[["ng-doc-page-testing-unit-testing-component-nodes"]],standalone:!0,features:[n._Bn([{provide:l.a,useExisting:e},i,a.providers??[]]),n.qOj,n.jDz],decls:1,vars:0,template:function(t,_){1&t&&n._UZ(0,"ng-doc-page")},dependencies:[p.z],encapsulation:2,changeDetection:0})}return e})();const h=[{...(0,d.isRoute)(a.route)?a.route:{},path:"",component:c,title:"Unit testing component nodes"}]}}]);