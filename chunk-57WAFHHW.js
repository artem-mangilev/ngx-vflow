import{a as hn}from"./chunk-NGK3AQVU.js";import{a as gn}from"./chunk-2F4TYFA7.js";import{a as cn}from"./chunk-BE4CNY5N.js";import{B as rn,D as j,j as ln,l as dn,r as z,s as pn,t as U,w as on}from"./chunk-J54HWDMQ.js";import{a as tn}from"./chunk-XEAWODMG.js";import"./chunk-5DYL7VP6.js";import{a as F}from"./chunk-PKRD3RVL.js";import{Ba as q,Ea as H,Fa as k,Ga as J,Ia as W,L as Y,Ma as O,O as _,R as w,Ra as c,S as $,Sa as o,T as C,Ta as u,Xa as M,Y as R,Z as P,Za as g,_ as Q,_a as m,bb as K,db as X,eb as nn,ga as h,gb as sn,ha as i,hb as en,jb as D,na as x,oa as f,pb as an,qb as I,sa as E,ua as N,wc as Tn,ya as r,za as Z}from"./chunk-CG7QMWE5.js";import{a as y,b as v,g as In}from"./chunk-ODLL2QMY.js";var Nn=In(Tn());var jn=["move","copy","link"],A="application/x-dnd",G="application/json",S="Text";function bn(e){return e.substr(0,A.length)===A}function yn(e){if(e.dataTransfer){let t=e.dataTransfer.types;if(!t)return S;for(let n=0;n<t.length;n++)if(t[n]===S||t[n]===G||bn(t[n]))return t[n]}return null}function An(e,t,n){let s=A+(t.type?"-"+t.type:""),a=JSON.stringify(t);try{e.dataTransfer?.setData(s,a)}catch{try{e.dataTransfer?.setData(G,a)}catch{let kn=T(jn,n);e.dataTransfer&&(e.dataTransfer.effectAllowed=kn[0]),e.dataTransfer?.setData(S,a)}}}function Sn(e,t){let n=yn(e);return t===!0?n!==null&&bn(n)?JSON.parse(e.dataTransfer?.getData(n)??"{}"):{}:n!==null?JSON.parse(e.dataTransfer?.getData(n)??"{}"):{}}function T(e,t){return t==="all"||t==="uninitialized"?e:e.filter(function(n){return t.toLowerCase().indexOf(n)!==-1})}function Rn(e,t){let n=t;for(;n.parentNode!==e;){if(!n.parentNode)return null;n=n.parentNode}return n}function Pn(e,t,n){let s=t.getBoundingClientRect();return n?e.clientX<s.left+s.width/2:e.clientY<s.top+s.height/2}function Hn(e,t){let n=window.getComputedStyle(t),s=parseFloat(n.paddingTop)||0,a=parseFloat(n.paddingLeft)||0,l=parseFloat(n.borderTopWidth)||0,d=parseFloat(n.borderLeftWidth)||0;return{x:e.offsetX+a+d,y:e.offsetY+s+l}}function On(e,t,n){let s=n(e,t)||{x:0,y:0};e.dataTransfer.setDragImage(t,s.x,s.y)}var p={isDragging:!1,dropEffect:"none",effectAllowed:"all",type:void 0};function Mn(e,t,n){p.isDragging=!0,p.dropEffect="none",p.effectAllowed=t,p.type=n,e.dataTransfer&&(e.dataTransfer.effectAllowed=t)}function fn(){p.isDragging=!1,p.dropEffect=void 0,p.effectAllowed=void 0,p.type=void 0}function L(e,t){p.isDragging===!0&&(p.dropEffect=t),e.dataTransfer&&(e.dataTransfer.dropEffect=t)}function un(e,t){let n=e.dataTransfer?e.dataTransfer.effectAllowed:"uninitialized",s=T(jn,n);return p.isDragging===!0&&(s=T(s,p.effectAllowed)),t&&(s=T(s,t)),s.length===0?"none":e.ctrlKey&&s.indexOf("copy")!==-1?"copy":e.altKey&&s.indexOf("link")!==-1?"link":s[0]}function V(e){if(p.isDragging===!0)return p.type;let t=yn(e);if(t!==null&&!(t===S||t===G))return t.substr(A.length+1)||void 0}function B(){return p.isDragging===!1}var mn=p;var vn=(()=>{class e{dndDraggable;dndEffectAllowed="copy";dndType;dndDraggingClass="dndDragging";dndDraggingSourceClass="dndDraggingSource";dndDraggableDisabledClass="dndDraggableDisabled";dndDragImageOffsetFunction=Hn;dndStart=new i;dndDrag=new i;dndEnd=new i;dndMoved=new i;dndCopied=new i;dndLinked=new i;dndCanceled=new i;draggable=!0;dndHandle;dndDragImageElementRef;dragImage;isDragStarted=!1;elementRef=_(h);renderer=_(E);ngZone=_(N);set dndDisableIf(n){this.draggable=!n,this.draggable?this.renderer.removeClass(this.elementRef.nativeElement,this.dndDraggableDisabledClass):this.renderer.addClass(this.elementRef.nativeElement,this.dndDraggableDisabledClass)}set dndDisableDragIf(n){this.dndDisableIf=n}ngAfterViewInit(){this.ngZone.runOutsideAngular(()=>{this.elementRef.nativeElement.addEventListener("drag",this.dragEventHandler)})}ngOnDestroy(){this.elementRef.nativeElement.removeEventListener("drag",this.dragEventHandler),this.isDragStarted&&fn()}onDragStart(n){if(!this.draggable)return!1;if(this.dndHandle!=null&&n._dndUsingHandle==null)return n.stopPropagation(),!1;Mn(n,this.dndEffectAllowed,this.dndType),this.isDragStarted=!0,An(n,{data:this.dndDraggable,type:this.dndType},mn.effectAllowed),this.dragImage=this.determineDragImage(),this.renderer.addClass(this.dragImage,this.dndDraggingClass),(this.dndDragImageElementRef!=null||n._dndUsingHandle!=null)&&On(n,this.dragImage,this.dndDragImageOffsetFunction);let s=this.renderer.listen(this.elementRef.nativeElement,"drag",()=>{this.renderer.addClass(this.elementRef.nativeElement,this.dndDraggingSourceClass),s()});return this.dndStart.emit(n),n.stopPropagation(),setTimeout(()=>{this.renderer.setStyle(this.dragImage,"pointer-events","none")},100),!0}onDrag(n){this.dndDrag.emit(n)}onDragEnd(n){if(!this.draggable||!this.isDragStarted)return;let s=mn.dropEffect;this.renderer.setStyle(this.dragImage,"pointer-events","unset");let a;switch(s){case"copy":a=this.dndCopied;break;case"link":a=this.dndLinked;break;case"move":a=this.dndMoved;break;default:a=this.dndCanceled;break}a.emit(n),this.dndEnd.emit(n),fn(),this.isDragStarted=!1,this.renderer.removeClass(this.dragImage,this.dndDraggingClass),window.setTimeout(()=>{this.renderer.removeClass(this.elementRef.nativeElement,this.dndDraggingSourceClass)},0),n.stopPropagation()}registerDragHandle(n){this.dndHandle=n}registerDragImage(n){this.dndDragImageElementRef=n}dragEventHandler=n=>this.onDrag(n);determineDragImage(){return typeof this.dndDragImageElementRef<"u"?this.dndDragImageElementRef.nativeElement:this.elementRef.nativeElement}static \u0275fac=function(s){return new(s||e)};static \u0275dir=C({type:e,selectors:[["","dndDraggable",""]],hostVars:1,hostBindings:function(s,a){s&1&&g("dragstart",function(d){return a.onDragStart(d)})("dragend",function(d){return a.onDragEnd(d)}),s&2&&k("draggable",a.draggable)},inputs:{dndDraggable:"dndDraggable",dndEffectAllowed:"dndEffectAllowed",dndType:"dndType",dndDraggingClass:"dndDraggingClass",dndDraggingSourceClass:"dndDraggingSourceClass",dndDraggableDisabledClass:"dndDraggableDisabledClass",dndDragImageOffsetFunction:"dndDragImageOffsetFunction",dndDisableIf:"dndDisableIf",dndDisableDragIf:"dndDisableDragIf"},outputs:{dndStart:"dndStart",dndDrag:"dndDrag",dndEnd:"dndEnd",dndMoved:"dndMoved",dndCopied:"dndCopied",dndLinked:"dndLinked",dndCanceled:"dndCanceled"},standalone:!0})}return e})(),Fn=(()=>{class e{elementRef;constructor(n){this.elementRef=n}ngOnInit(){this.elementRef.nativeElement.style.pointerEvents="none"}static \u0275fac=function(s){return new(s||e)(f(h))};static \u0275dir=C({type:e,selectors:[["","dndPlaceholderRef",""]],standalone:!0})}return e})(),_n=(()=>{class e{ngZone;elementRef;renderer;dndDropzone="";dndEffectAllowed="uninitialized";dndAllowExternal=!1;dndHorizontal=!1;dndDragoverClass="dndDragover";dndDropzoneDisabledClass="dndDropzoneDisabled";dndDragover=new i;dndDrop=new i;dndPlaceholderRef;placeholder=null;disabled=!1;constructor(n,s,a){this.ngZone=n,this.elementRef=s,this.renderer=a}set dndDisableIf(n){this.disabled=n,this.disabled?this.renderer.addClass(this.elementRef.nativeElement,this.dndDropzoneDisabledClass):this.renderer.removeClass(this.elementRef.nativeElement,this.dndDropzoneDisabledClass)}set dndDisableDropIf(n){this.dndDisableIf=n}ngAfterViewInit(){this.placeholder=this.tryGetPlaceholder(),this.removePlaceholderFromDOM(),this.ngZone.runOutsideAngular(()=>{this.elementRef.nativeElement.addEventListener("dragenter",this.dragEnterEventHandler),this.elementRef.nativeElement.addEventListener("dragover",this.dragOverEventHandler),this.elementRef.nativeElement.addEventListener("dragleave",this.dragLeaveEventHandler)})}ngOnDestroy(){this.elementRef.nativeElement.removeEventListener("dragenter",this.dragEnterEventHandler),this.elementRef.nativeElement.removeEventListener("dragover",this.dragOverEventHandler),this.elementRef.nativeElement.removeEventListener("dragleave",this.dragLeaveEventHandler)}onDragEnter(n){if(n._dndDropzoneActive===!0){this.cleanupDragoverState();return}if(n._dndDropzoneActive==null){let a=document.elementFromPoint(n.clientX,n.clientY);this.elementRef.nativeElement.contains(a)&&(n._dndDropzoneActive=!0)}let s=V(n);this.isDropAllowed(s)&&n.preventDefault()}onDragOver(n){if(n.defaultPrevented)return;let s=V(n);if(!this.isDropAllowed(s))return;this.checkAndUpdatePlaceholderPosition(n);let a=un(n,this.dndEffectAllowed);if(a==="none"){this.cleanupDragoverState();return}n.preventDefault(),L(n,a),this.dndDragover.emit(n),this.renderer.addClass(this.elementRef.nativeElement,this.dndDragoverClass)}onDrop(n){try{let s=V(n);if(!this.isDropAllowed(s))return;let a=Sn(n,B());if(!this.isDropAllowed(a.type))return;n.preventDefault();let l=un(n);if(L(n,l),l==="none")return;let d=this.getPlaceholderIndex();if(d===-1)return;this.dndDrop.emit({event:n,dropEffect:l,isExternal:B(),data:a.data,index:d,type:s}),n.stopPropagation()}finally{this.cleanupDragoverState()}}onDragLeave(n){if(n.preventDefault(),n.stopPropagation(),n._dndDropzoneActive==null&&this.elementRef.nativeElement.contains(n.relatedTarget)){n._dndDropzoneActive=!0;return}this.cleanupDragoverState(),L(n,"none")}dragEnterEventHandler=n=>this.onDragEnter(n);dragOverEventHandler=n=>this.onDragOver(n);dragLeaveEventHandler=n=>this.onDragLeave(n);isDropAllowed(n){if(this.disabled||B()&&!this.dndAllowExternal)return!1;if(!this.dndDropzone||!n)return!0;if(!Array.isArray(this.dndDropzone))throw new Error("dndDropzone: bound value to [dndDropzone] must be an array!");return this.dndDropzone.indexOf(n)!==-1}tryGetPlaceholder(){return typeof this.dndPlaceholderRef<"u"?this.dndPlaceholderRef.elementRef.nativeElement:this.elementRef.nativeElement.querySelector("[dndPlaceholderRef]")}removePlaceholderFromDOM(){this.placeholder!==null&&this.placeholder.parentNode!==null&&this.placeholder.parentNode.removeChild(this.placeholder)}checkAndUpdatePlaceholderPosition(n){if(this.placeholder===null)return;this.placeholder.parentNode!==this.elementRef.nativeElement&&this.renderer.appendChild(this.elementRef.nativeElement,this.placeholder);let s=Rn(this.elementRef.nativeElement,n.target);if(s===null||s===this.placeholder)return;Pn(n,s,this.dndHorizontal)?s.previousSibling!==this.placeholder&&this.renderer.insertBefore(this.elementRef.nativeElement,this.placeholder,s):s.nextSibling!==this.placeholder&&this.renderer.insertBefore(this.elementRef.nativeElement,this.placeholder,s.nextSibling)}getPlaceholderIndex(){if(this.placeholder===null)return;let n=this.elementRef.nativeElement;return Array.prototype.indexOf.call(n.children,this.placeholder)}cleanupDragoverState(){this.renderer.removeClass(this.elementRef.nativeElement,this.dndDragoverClass),this.removePlaceholderFromDOM()}static \u0275fac=function(s){return new(s||e)(f(N),f(h),f(E))};static \u0275dir=C({type:e,selectors:[["","dndDropzone",""]],contentQueries:function(s,a,l){if(s&1&&K(l,Fn,5),s&2){let d;X(d=nn())&&(a.dndPlaceholderRef=d.first)}},hostBindings:function(s,a){s&1&&g("drop",function(d){return a.onDrop(d)})},inputs:{dndDropzone:"dndDropzone",dndEffectAllowed:"dndEffectAllowed",dndAllowExternal:"dndAllowExternal",dndHorizontal:"dndHorizontal",dndDragoverClass:"dndDragoverClass",dndDropzoneDisabledClass:"dndDropzoneDisabledClass",dndDisableIf:"dndDisableIf",dndDisableDropIf:"dndDisableDropIf"},outputs:{dndDragover:"dndDragover",dndDrop:"dndDrop"},standalone:!0})}return e})();var wn=(()=>{class e{static \u0275fac=function(s){return new(s||e)};static \u0275mod=$({type:e});static \u0275inj=Y({})}return e})();function Un(e,t){if(e&1){let n=M();c(0,"button",10),g("click",function(){R(n);let a=m().$implicit,l=m();return P(l.detachNode(a.node.id))}),D(1,"Detach"),o()}}function Ln(e,t){if(e&1){let n=M();c(0,"button",10),g("click",function(){R(n);let a=m().$implicit,l=m();return P(l.attachNode(a.node.id))}),D(1,"Attach"),o()}}function Vn(e,t){if(e&1&&(c(0,"div",6)(1,"button",7),D(2,"Select here"),o(),u(3,"handle",8)(4,"handle",9),o(),c(5,"node-toolbar"),H(6,Un,2,0,"button")(7,Ln,2,0,"button"),o()),e&2){let n=t.$implicit;W("custom-node_selected",n.selected()),x(6),O(6,n.node.data().canDetach?6:-1),x(),O(7,n.node.data().canAttach?7:-1)}}function Bn(e,t){if(e&1&&(Q(),u(0,"path",11)),e&2){let n=t.$implicit;k("d",n.path())("stroke",n.selected()?"#0f4c75":"#bbe1fa")}}var Cn=(()=>{class e{constructor(){this.vflow=Z.required(j),this.nodes=[{id:"1",point:r({x:10,y:10}),type:"default-group",width:r(250),height:r(250)}],this.edges=[]}createNode({event:n}){let s=this.vflow().documentPointToFlowPoint({x:n.x,y:n.y},{spaces:!0}),[a]=s;this.nodes=[...this.nodes,{id:crypto.randomUUID(),point:r(a),type:"html-template",parentId:r(a.spaceNodeId),data:r({canDetach:s.length>1})}]}connect({source:n,target:s}){this.edges=[...this.edges,{id:`${n} -> ${s}`,source:n,target:s}]}detachNode(n){let s=this.nodes.find(a=>a.id===n);s&&s.type==="html-template"&&(s.point.set(this.vflow().toNodeSpace(n,null)),s.parentId?.set(null),s.data?.set({canDetach:!1}))}onPositionChange(){this.nodes.filter(pn).forEach(n=>{let a=this.vflow().getIntesectingNodes(n.id).filter(z).filter(U).length>0&&!n.parentId?.();n.data?.update(l=>v(y({},l),{canAttach:a}))})}attachNode(n){let[s]=this.vflow().getIntesectingNodes(n).filter(z).filter(U),a=this.nodes.find(l=>l.id===n);a&&a.type==="html-template"&&(a.point.set(this.vflow().toNodeSpace(n,s.id)),a.parentId?.set(s.id),a.data?.set({canDetach:!0}))}static{this.\u0275fac=function(s){return new(s||e)}}static{this.\u0275cmp=w({type:e,selectors:[["ng-component"]],viewQuery:function(s,a){s&1&&sn(a.vflow,j,5),s&2&&en()},standalone:!0,features:[I],decls:7,vars:2,consts:[[1,"sidebar"],["dndDraggable","",1,"custom-node","custom-node_draggable"],[1,"custom-node__button"],["view","auto","dndDropzone","",3,"dndDrop","onConnect","onNodesChange.position","nodes","edges"],["nodeHtml",""],["edge",""],[1,"custom-node"],["selectable","",1,"custom-node__button"],["type","source","position","right"],["type","target","position","left"],[3,"click"],["selectable","","fill","none","stroke-width","2"]],template:function(s,a){s&1&&(c(0,"div",0)(1,"div",1)(2,"button",2),D(3,"Drag here"),o()()(),c(4,"vflow",3),g("dndDrop",function(d){return a.createNode(d)})("onConnect",function(d){return a.connect(d)})("onNodesChange.position",function(){return a.onPositionChange()}),H(5,Vn,8,4,"ng-template",4)(6,Bn,1,2,"ng-template",5),o()),s&2&&(x(4),J("nodes",a.nodes)("edges",a.edges))},dependencies:[j,rn,cn,gn,on,dn,ln,wn,vn,_n],styles:["[_nghost-%COMP%]{display:flex;width:100%;height:100%}.sidebar[_ngcontent-%COMP%]{padding:10px;height:100%;background-color:#3282b8}.custom-node[_ngcontent-%COMP%]{width:150px;height:100px;background:#bbe1fa;border:1px solid gray;border-radius:5px;display:flex;align-items:center;justify-content:center}.custom-node__button[_ngcontent-%COMP%]{border:0;outline:0;cursor:pointer;color:#fff;background-color:#1b262c;border-radius:4px;font-size:14px;font-weight:500;padding:4px 8px;display:inline-block;min-height:28px}.custom-node_draggable[_ngcontent-%COMP%]{width:100px;height:75px}.custom-node_selected[_ngcontent-%COMP%]{border-color:#1b262c}"],changeDetection:0})}}return e})();var Gn={title:"Drag and drop nodes",mdFile:"./index.md",category:hn,demos:{DragAndDropNodesDemoComponent:Cn},order:2},b=Gn;var xn=[];var Yn={DragAndDropNodesDemoComponent:[{title:"TypeScript",code:`<pre class="ngde hljs"><code lang="typescript" class="hljs language-typescript code-lines ngde"><span class="line ngde"><span class="hljs-keyword ngde">import</span> { <span class="hljs-title class_ ngde">ChangeDetectionStrategy</span>, <span class="hljs-title class_ ngde">Component</span>, signal, viewChild } <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">'@angular/core'</span>;
</span><span class="line ngde"><span class="hljs-keyword ngde">import</span> { <span class="hljs-title class_ ngde">DndDropEvent</span>, <span class="hljs-title class_ ngde">DndModule</span> } <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">'ngx-drag-drop'</span>;
</span><span class="line ngde"><span class="hljs-keyword ngde">import</span> {
</span><span class="line ngde">  <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/interfaces/Connection" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Connection</a></span>,
</span><span class="line ngde">  <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/interfaces/Edge" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Edge</a></span>,
</span><span class="line ngde">  <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/classes/VflowComponent" class="ng-doc-code-anchor ngde" data-link-type="Component" class="ngde">VflowComponent</a></span>,
</span><span class="line ngde">  <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/variables/Vflow" class="ng-doc-code-anchor ngde" data-link-type="Variable" class="ngde">Vflow</a></span>,
</span><span class="line ngde">  <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/type-aliases/DynamicNode" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">DynamicNode</a></span>,
</span><span class="line ngde">  <a href="/api/ngx-vflow/functions/isDynamicNode" class="ng-doc-code-anchor ngde" data-link-type="Function" class="ngde">isDynamicNode</a>,
</span><span class="line ngde">  <a href="/api/ngx-vflow/functions/isDefaultDynamicGroupNode" class="ng-doc-code-anchor ngde" data-link-type="Function" class="ngde">isDefaultDynamicGroupNode</a>,
</span><span class="line ngde">  <a href="/api/ngx-vflow/functions/isTemplateDynamicNode" class="ng-doc-code-anchor ngde" data-link-type="Function" class="ngde">isTemplateDynamicNode</a>,
</span><span class="line ngde">} <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">'ngx-vflow'</span>;
</span><span class="line ngde">
</span><span class="line ngde"><span class="hljs-meta ngde">@Component</span>({
</span><span class="line ngde">  <span class="hljs-attr ngde">templateUrl</span>: <span class="hljs-string ngde">'./drag-and-drop-nodes-demo.component.html'</span>,
</span><span class="line ngde">  <span class="hljs-attr ngde">styleUrls</span>: [<span class="hljs-string ngde">'./drag-and-drop-nodes-demo.component.scss'</span>],
</span><span class="line ngde">  <span class="hljs-attr ngde">changeDetection</span>: <span class="hljs-title class_ ngde">ChangeDetectionStrategy</span>.<span class="hljs-property ngde">OnPush</span>,
</span><span class="line ngde">  <span class="hljs-attr ngde">standalone</span>: <span class="hljs-literal ngde">true</span>,
</span><span class="line ngde">  <span class="hljs-attr ngde">imports</span>: [<span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/variables/Vflow" class="ng-doc-code-anchor ngde" data-link-type="Variable" class="ngde">Vflow</a></span>, <span class="hljs-title class_ ngde">DndModule</span>],
</span><span class="line ngde">})
</span><span class="line ngde"><span class="hljs-keyword ngde">export</span> <span class="hljs-keyword ngde">class</span> <span class="hljs-title class_ ngde">DragAndDropNodesDemoComponent</span> {
</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> vflow = viewChild.required(<span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/classes/VflowComponent" class="ng-doc-code-anchor ngde" data-link-type="Component" class="ngde">VflowComponent</a></span>);
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-attr ngde">nodes</span>: <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/type-aliases/DynamicNode" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">DynamicNode</a></span>[] = [
</span><span class="line ngde">    {
</span><span class="line ngde">      <span class="hljs-attr ngde">id</span>: <span class="hljs-string ngde">'1'</span>,
</span><span class="line ngde">      <span class="hljs-attr ngde">point</span>: <span class="hljs-title function_ ngde">signal</span>({ <span class="hljs-attr ngde">x</span>: <span class="hljs-number ngde">10</span>, <span class="hljs-attr ngde">y</span>: <span class="hljs-number ngde">10</span> }),
</span><span class="line ngde">      <span class="hljs-attr ngde">type</span>: <span class="hljs-string ngde">'default-group'</span>,
</span><span class="line ngde">      <span class="hljs-attr ngde">width</span>: <span class="hljs-title function_ ngde">signal</span>(<span class="hljs-number ngde">250</span>),
</span><span class="line ngde">      <span class="hljs-attr ngde">height</span>: <span class="hljs-title function_ ngde">signal</span>(<span class="hljs-number ngde">250</span>),
</span><span class="line ngde">    },
</span><span class="line ngde">  ];
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-attr ngde">edges</span>: <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/interfaces/Edge" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Edge</a></span>[] = [];
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-title function_ ngde">createNode</span>(<span class="hljs-params ngde">{ event }: DndDropEvent</span>) {
</span><span class="line ngde">    <span class="hljs-keyword ngde">const</span> spaces = <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-title function_ ngde">vflow</span>().<span class="hljs-title function_ ngde">documentPointToFlowPoint</span>(
</span><span class="line ngde">      {
</span><span class="line ngde">        <span class="hljs-attr ngde">x</span>: event.<span class="hljs-property ngde">x</span>,
</span><span class="line ngde">        <span class="hljs-attr ngde">y</span>: event.<span class="hljs-property ngde">y</span>,
</span><span class="line ngde">      },
</span><span class="line ngde">      { <span class="hljs-attr ngde">spaces</span>: <span class="hljs-literal ngde">true</span> },
</span><span class="line ngde">    );
</span><span class="line ngde">    <span class="hljs-keyword ngde">const</span> [point] = spaces;
</span><span class="line ngde">
</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">nodes</span> = [
</span><span class="line ngde">      ...<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">nodes</span>,
</span><span class="line ngde">      {
</span><span class="line ngde">        <span class="hljs-attr ngde">id</span>: crypto.<span class="hljs-title function_ ngde">randomUUID</span>(),
</span><span class="line ngde">        <span class="hljs-attr ngde">point</span>: <span class="hljs-title function_ ngde">signal</span>(point),
</span><span class="line ngde">        <span class="hljs-attr ngde">type</span>: <span class="hljs-string ngde">'html-template'</span>,
</span><span class="line ngde">        <span class="hljs-attr ngde">parentId</span>: <span class="hljs-title function_ ngde">signal</span>(point.<span class="hljs-property ngde">spaceNodeId</span>),
</span><span class="line ngde">        <span class="hljs-attr ngde">data</span>: <span class="hljs-title function_ ngde">signal</span>({
</span><span class="line ngde">          <span class="hljs-attr ngde">canDetach</span>: spaces.<span class="hljs-property ngde">length</span> > <span class="hljs-number ngde">1</span>,
</span><span class="line ngde">        }),
</span><span class="line ngde">      },
</span><span class="line ngde">    ];
</span><span class="line ngde">  }
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-title function_ ngde">connect</span>(<span class="hljs-params ngde">{ source, target }: <a href="/api/ngx-vflow/interfaces/Connection" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Connection</a></span>) {
</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">edges</span> = [
</span><span class="line ngde">      ...<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">edges</span>,
</span><span class="line ngde">      {
</span><span class="line ngde">        <span class="hljs-attr ngde">id</span>: <span class="hljs-string ngde">\`<span class="hljs-subst ngde">\${source}</span> -> <span class="hljs-subst ngde">\${target}</span>\`</span>,
</span><span class="line ngde">        source,
</span><span class="line ngde">        target,
</span><span class="line ngde">      },
</span><span class="line ngde">    ];
</span><span class="line ngde">  }
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-title function_ ngde">detachNode</span>(<span class="hljs-params ngde">nodeId: <span class="hljs-built_in ngde">string</span></span>) {
</span><span class="line ngde">    <span class="hljs-keyword ngde">const</span> nodeToUpdate = <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">nodes</span>.<span class="hljs-title function_ ngde">find</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">node</span>) =></span> node.<span class="hljs-property ngde">id</span> === nodeId);
</span><span class="line ngde">    <span class="hljs-keyword ngde">if</span> (!nodeToUpdate) <span class="hljs-keyword ngde">return</span>;
</span><span class="line ngde">
</span><span class="line ngde">    <span class="hljs-keyword ngde">if</span> (nodeToUpdate.<span class="hljs-property ngde">type</span> === <span class="hljs-string ngde">'html-template'</span>) {
</span><span class="line ngde">      nodeToUpdate.<span class="hljs-property ngde">point</span>.<span class="hljs-title function_ ngde">set</span>(<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-title function_ ngde">vflow</span>().<span class="hljs-title function_ ngde">toNodeSpace</span>(nodeId, <span class="hljs-literal ngde">null</span>));
</span><span class="line ngde">      nodeToUpdate.<span class="hljs-property ngde">parentId</span>?.<span class="hljs-title function_ ngde">set</span>(<span class="hljs-literal ngde">null</span>);
</span><span class="line ngde">      nodeToUpdate.<span class="hljs-property ngde">data</span>?.<span class="hljs-title function_ ngde">set</span>({ <span class="hljs-attr ngde">canDetach</span>: <span class="hljs-literal ngde">false</span> });
</span><span class="line ngde">    }
</span><span class="line ngde">  }
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-title function_ ngde">onPositionChange</span>(<span class="hljs-params ngde"></span>) {
</span><span class="line ngde">    <span class="hljs-comment ngde">// Update all template nodes' canAttach state</span>
</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">nodes</span>.<span class="hljs-title function_ ngde">filter</span>(<a href="/api/ngx-vflow/functions/isTemplateDynamicNode" class="ng-doc-code-anchor ngde" data-link-type="Function" class="ngde">isTemplateDynamicNode</a>).<span class="hljs-title function_ ngde">forEach</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">node</span>) =></span> {
</span><span class="line ngde">      <span class="hljs-keyword ngde">const</span> intersectingNodes = <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-title function_ ngde">vflow</span>()
</span><span class="line ngde">        .<span class="hljs-title function_ ngde">getIntesectingNodes</span>(node.<span class="hljs-property ngde">id</span>)
</span><span class="line ngde">        .<span class="hljs-title function_ ngde">filter</span>(<a href="/api/ngx-vflow/functions/isDynamicNode" class="ng-doc-code-anchor ngde" data-link-type="Function" class="ngde">isDynamicNode</a>)
</span><span class="line ngde">        .<span class="hljs-title function_ ngde">filter</span>(<a href="/api/ngx-vflow/functions/isDefaultDynamicGroupNode" class="ng-doc-code-anchor ngde" data-link-type="Function" class="ngde">isDefaultDynamicGroupNode</a>);
</span><span class="line ngde">
</span><span class="line ngde">      <span class="hljs-keyword ngde">const</span> canAttach = intersectingNodes.<span class="hljs-property ngde">length</span> > <span class="hljs-number ngde">0</span> &#x26;&#x26; !node.<span class="hljs-property ngde">parentId</span>?.();
</span><span class="line ngde">      node.<span class="hljs-property ngde">data</span>?.<span class="hljs-title function_ ngde">update</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">state</span>) =></span> ({ ...state, canAttach }));
</span><span class="line ngde">    });
</span><span class="line ngde">  }
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-title function_ ngde">attachNode</span>(<span class="hljs-params ngde">nodeId: <span class="hljs-built_in ngde">string</span></span>) {
</span><span class="line ngde">    <span class="hljs-keyword ngde">const</span> [intersectionNode] = <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-title function_ ngde">vflow</span>()
</span><span class="line ngde">      .<span class="hljs-title function_ ngde">getIntesectingNodes</span>(nodeId)
</span><span class="line ngde">      .<span class="hljs-title function_ ngde">filter</span>(<a href="/api/ngx-vflow/functions/isDynamicNode" class="ng-doc-code-anchor ngde" data-link-type="Function" class="ngde">isDynamicNode</a>)
</span><span class="line ngde">      .<span class="hljs-title function_ ngde">filter</span>(<a href="/api/ngx-vflow/functions/isDefaultDynamicGroupNode" class="ng-doc-code-anchor ngde" data-link-type="Function" class="ngde">isDefaultDynamicGroupNode</a>);
</span><span class="line ngde">
</span><span class="line ngde">    <span class="hljs-keyword ngde">const</span> nodeToUpdate = <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">nodes</span>.<span class="hljs-title function_ ngde">find</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">node</span>) =></span> node.<span class="hljs-property ngde">id</span> === nodeId);
</span><span class="line ngde">    <span class="hljs-keyword ngde">if</span> (!nodeToUpdate) <span class="hljs-keyword ngde">return</span>;
</span><span class="line ngde">
</span><span class="line ngde">    <span class="hljs-keyword ngde">if</span> (nodeToUpdate.<span class="hljs-property ngde">type</span> === <span class="hljs-string ngde">'html-template'</span>) {
</span><span class="line ngde">      nodeToUpdate.<span class="hljs-property ngde">point</span>.<span class="hljs-title function_ ngde">set</span>(<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-title function_ ngde">vflow</span>().<span class="hljs-title function_ ngde">toNodeSpace</span>(nodeId, intersectionNode.<span class="hljs-property ngde">id</span>));
</span><span class="line ngde">      nodeToUpdate.<span class="hljs-property ngde">parentId</span>?.<span class="hljs-title function_ ngde">set</span>(intersectionNode.<span class="hljs-property ngde">id</span>);
</span><span class="line ngde">      nodeToUpdate.<span class="hljs-property ngde">data</span>?.<span class="hljs-title function_ ngde">set</span>({ <span class="hljs-attr ngde">canDetach</span>: <span class="hljs-literal ngde">true</span> });
</span><span class="line ngde">    }
</span><span class="line ngde">  }
</span><span class="line ngde">}
</span></code></pre>`},{title:"HTML",code:`<pre class="ngde hljs"><code lang="html" class="hljs language-html code-lines ngde"><span class="line ngde"><span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">div</span> <span class="hljs-attr ngde">class</span>=<span class="hljs-string ngde">"sidebar"</span>></span>
</span><span class="line ngde">  <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">div</span> <span class="hljs-attr ngde">dndDraggable</span> <span class="hljs-attr ngde">class</span>=<span class="hljs-string ngde">"custom-node custom-node_draggable"</span>></span>
</span><span class="line ngde">    <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">button</span> <span class="hljs-attr ngde">class</span>=<span class="hljs-string ngde">"custom-node__button"</span>></span>Drag here<span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">button</span>></span>
</span><span class="line ngde">  <span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">div</span>></span>
</span><span class="line ngde"><span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">div</span>></span>
</span><span class="line ngde">
</span><span class="line ngde">&#x3C;<span class="hljs-name ngde">vflow</span><span class="hljs-tag ngde"></span>
</span><span class="line ngde"><span class="hljs-tag ngde">  </span><span class="hljs-attr ngde">view</span>=<span class="hljs-string ngde">"auto"</span><span class="hljs-tag ngde"></span>
</span><span class="line ngde"><span class="hljs-tag ngde">  </span><span class="hljs-attr ngde">dndDropzone</span><span class="hljs-tag ngde"></span>
</span><span class="line ngde"><span class="hljs-tag ngde">  [</span><span class="hljs-attr ngde">nodes</span>]=<span class="hljs-string ngde">"nodes"</span><span class="hljs-tag ngde"></span>
</span><span class="line ngde"><span class="hljs-tag ngde">  [</span><span class="hljs-attr ngde">edges</span>]=<span class="hljs-string ngde">"edges"</span><span class="hljs-tag ngde"></span>
</span><span class="line ngde"><span class="hljs-tag ngde">  (</span><span class="hljs-attr ngde">dndDrop</span>)=<span class="hljs-string ngde">"createNode($event)"</span><span class="hljs-tag ngde"></span>
</span><span class="line ngde"><span class="hljs-tag ngde">  (</span><span class="hljs-attr ngde">onConnect</span>)=<span class="hljs-string ngde">"connect($event)"</span><span class="hljs-tag ngde"></span>
</span><span class="line ngde"><span class="hljs-tag ngde">  (</span><span class="hljs-attr ngde">onNodesChange.position</span>)=<span class="hljs-string ngde">"onPositionChange()"</span>>
</span><span class="line ngde">  <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">ng-template</span> <span class="hljs-attr ngde">let-ctx</span> <span class="hljs-attr ngde">nodeHtml</span>></span>
</span><span class="line ngde">    <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">div</span> <span class="hljs-attr ngde">class</span>=<span class="hljs-string ngde">"custom-node"</span> [<span class="hljs-attr ngde">class.custom-node_selected</span>]=<span class="hljs-string ngde">"ctx.selected()"</span>></span>
</span><span class="line ngde">      <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">button</span> <span class="hljs-attr ngde">class</span>=<span class="hljs-string ngde">"custom-node__button"</span> <span class="hljs-attr ngde">selectable</span>></span>Select here<span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">button</span>></span>
</span><span class="line ngde">
</span><span class="line ngde">      <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">handle</span> <span class="hljs-attr ngde">type</span>=<span class="hljs-string ngde">"source"</span> <span class="hljs-attr ngde">position</span>=<span class="hljs-string ngde">"right"</span> /></span>
</span><span class="line ngde">      <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">handle</span> <span class="hljs-attr ngde">type</span>=<span class="hljs-string ngde">"target"</span> <span class="hljs-attr ngde">position</span>=<span class="hljs-string ngde">"left"</span> /></span>
</span><span class="line ngde">    <span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">div</span>></span>
</span><span class="line ngde">
</span><span class="line ngde">    <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">node-toolbar</span>></span>
</span><span class="line ngde">      @if (ctx.node.data().canDetach) {
</span><span class="line ngde">        <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">button</span> (<span class="hljs-attr ngde">click</span>)=<span class="hljs-string ngde">"detachNode(ctx.node.id)"</span>></span>Detach<span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">button</span>></span>
</span><span class="line ngde">      }
</span><span class="line ngde">
</span><span class="line ngde">      @if (ctx.node.data().canAttach) {
</span><span class="line ngde">        <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">button</span> (<span class="hljs-attr ngde">click</span>)=<span class="hljs-string ngde">"attachNode(ctx.node.id)"</span>></span>Attach<span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">button</span>></span>
</span><span class="line ngde">      }
</span><span class="line ngde">    <span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">node-toolbar</span>></span>
</span><span class="line ngde">  <span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">ng-template</span>></span>
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">ng-template</span> <span class="hljs-attr ngde">let-ctx</span> <span class="hljs-attr ngde">edge</span>></span>
</span><span class="line ngde">    &#x3C;<span class="hljs-name ngde">svg:path</span><span class="hljs-tag ngde"></span>
</span><span class="line ngde"><span class="hljs-tag ngde">      </span><span class="hljs-attr ngde">selectable</span><span class="hljs-tag ngde"></span>
</span><span class="line ngde"><span class="hljs-tag ngde">      </span><span class="hljs-attr ngde">fill</span>=<span class="hljs-string ngde">"none"</span><span class="hljs-tag ngde"></span>
</span><span class="line ngde"><span class="hljs-tag ngde">      </span><span class="hljs-attr ngde">stroke-width</span>=<span class="hljs-string ngde">"2"</span><span class="hljs-tag ngde"></span>
</span><span class="line ngde"><span class="hljs-tag ngde">      [</span><span class="hljs-attr ngde">attr.d</span>]=<span class="hljs-string ngde">"ctx.path()"</span><span class="hljs-tag ngde"></span>
</span><span class="line ngde"><span class="hljs-tag ngde">      [</span><span class="hljs-attr ngde">attr.stroke</span>]=<span class="hljs-string ngde">"ctx.selected() ? '#0f4c75' : '#bbe1fa'"</span> />
</span><span class="line ngde">  <span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">ng-template</span>></span>
</span><span class="line ngde"><span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">vflow</span>></span>
</span></code></pre>`},{title:"SCSS",code:`<pre class="ngde hljs"><code lang="scss" class="hljs language-scss code-lines ngde"><span class="line ngde"><span class="hljs-selector-pseudo ngde">:host</span> {
</span><span class="line ngde">  <span class="hljs-attribute ngde">display</span>: flex;
</span><span class="line ngde">  <span class="hljs-attribute ngde">width</span>: <span class="hljs-number ngde">100%</span>;
</span><span class="line ngde">  <span class="hljs-attribute ngde">height</span>: <span class="hljs-number ngde">100%</span>;
</span><span class="line ngde">}
</span><span class="line ngde">
</span><span class="line ngde"><span class="hljs-selector-class ngde">.sidebar</span> {
</span><span class="line ngde">  <span class="hljs-attribute ngde">padding</span>: <span class="hljs-number ngde">10px</span>;
</span><span class="line ngde">  <span class="hljs-attribute ngde">height</span>: <span class="hljs-number ngde">100%</span>;
</span><span class="line ngde">  <span class="hljs-attribute ngde">background-color</span>: <span class="hljs-number ngde">#3282b8</span>;
</span><span class="line ngde">}
</span><span class="line ngde">
</span><span class="line ngde"><span class="hljs-selector-class ngde">.custom-node</span> {
</span><span class="line ngde">  <span class="hljs-attribute ngde">width</span>: <span class="hljs-number ngde">150px</span>;
</span><span class="line ngde">  <span class="hljs-attribute ngde">height</span>: <span class="hljs-number ngde">100px</span>;
</span><span class="line ngde">  <span class="hljs-attribute ngde">background</span>: <span class="hljs-number ngde">#bbe1fa</span>;
</span><span class="line ngde">  <span class="hljs-attribute ngde">border</span>: <span class="hljs-number ngde">1px</span> solid gray;
</span><span class="line ngde">  <span class="hljs-attribute ngde">border-radius</span>: <span class="hljs-number ngde">5px</span>;
</span><span class="line ngde">  <span class="hljs-attribute ngde">display</span>: flex;
</span><span class="line ngde">  <span class="hljs-attribute ngde">align-items</span>: center;
</span><span class="line ngde">  <span class="hljs-attribute ngde">justify-content</span>: center;
</span><span class="line ngde">
</span><span class="line ngde">  &#x26;__button {
</span><span class="line ngde">    <span class="hljs-attribute ngde">border</span>: <span class="hljs-number ngde">0</span>;
</span><span class="line ngde">    <span class="hljs-attribute ngde">outline</span>: <span class="hljs-number ngde">0</span>;
</span><span class="line ngde">    <span class="hljs-attribute ngde">cursor</span>: pointer;
</span><span class="line ngde">    <span class="hljs-attribute ngde">color</span>: white;
</span><span class="line ngde">    <span class="hljs-attribute ngde">background-color</span>: <span class="hljs-number ngde">#1b262c</span>;
</span><span class="line ngde">    <span class="hljs-attribute ngde">border-radius</span>: <span class="hljs-number ngde">4px</span>;
</span><span class="line ngde">    <span class="hljs-attribute ngde">font-size</span>: <span class="hljs-number ngde">14px</span>;
</span><span class="line ngde">    <span class="hljs-attribute ngde">font-weight</span>: <span class="hljs-number ngde">500</span>;
</span><span class="line ngde">    <span class="hljs-attribute ngde">padding</span>: <span class="hljs-number ngde">4px</span> <span class="hljs-number ngde">8px</span>;
</span><span class="line ngde">    <span class="hljs-attribute ngde">display</span>: inline-block;
</span><span class="line ngde">    <span class="hljs-attribute ngde">min-height</span>: <span class="hljs-number ngde">28px</span>;
</span><span class="line ngde">  }
</span><span class="line ngde">
</span><span class="line ngde">  &#x26;_draggable {
</span><span class="line ngde">    <span class="hljs-attribute ngde">width</span>: <span class="hljs-number ngde">100px</span>;
</span><span class="line ngde">    <span class="hljs-attribute ngde">height</span>: <span class="hljs-number ngde">75px</span>;
</span><span class="line ngde">  }
</span><span class="line ngde">
</span><span class="line ngde">  &#x26;_selected {
</span><span class="line ngde">    <span class="hljs-attribute ngde">border-color</span>: <span class="hljs-number ngde">#1b262c</span>;
</span><span class="line ngde">  }
</span><span class="line ngde">}
</span></code></pre>`}]},En=Yn;var $n=`<h1 id="drag-and-drop-nodes" class="ngde">Drag and drop nodes<a title="Link to heading" class="ng-doc-header-link ngde" href="/workshops/drag-and-drop-nodes#drag-and-drop-nodes"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1><p class="ngde">This workshop will show you how to implement dynamic node creation with basic drag and drop functionality. It also demonstrates how to attach nodes to groups or detach them from groups.</p><p class="ngde">This implementation uses the following APIs from <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/ngx-vflow/classes/VflowComponent" class="ng-doc-code-anchor ngde" data-link-type="Component" class="ngde">VflowComponent</a></code>:</p><ul class="ngde"><li class="ngde"><code class="ngde">documentPointToFlowPoint()</code> to get a stack of <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/ngx-vflow/interfaces/SpacePoint" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">SpacePoint</a></code>s</li><li class="ngde"><code class="ngde">getIntersectingNodes()</code> to get intersections between nodes during drag operations</li><li class="ngde"><code class="ngde">toNodeSpace()</code> to get a node's position in the coordinate system of another node</li></ul><ng-doc-demo-pane componentname="DragAndDropNodesDemoComponent" indexable="false" class="ngde"><div id="options" class="ngde">{}</div></ng-doc-demo-pane>`,Qn=(()=>{class e extends F{constructor(){super(),this.routePrefix="",this.pageType="guide",this.pageContent=$n,this.editSourceFileUrl="https://github.com/artem-mangilev/ngx-vflow/edit/main/projects/ngx-vflow-demo/src/app/categories/workshops/pages/drag-and-drop-nodes/index.md?message=docs(drag-and-drop-nodes): describe your changes here...",this.page=b,this.demoAssets=En}static{this.\u0275fac=function(s){return new(s||e)}}static{this.\u0275cmp=w({type:e,selectors:[["ng-doc-page-workshops-drag-and-drop-nodes"]],standalone:!0,features:[an([{provide:F,useExisting:e},xn,b.providers??[]]),q,I],decls:1,vars:0,template:function(s,a){s&1&&u(0,"ng-doc-page")},dependencies:[tn],encapsulation:2,changeDetection:0})}}return e})(),Zn=[v(y({},(0,Nn.isRoute)(b.route)?b.route:{}),{path:"",component:Qn,title:"Drag and drop nodes"})],ws=Zn;export{Qn as DynamicComponent,ws as default};
