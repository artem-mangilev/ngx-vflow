"use strict";(self.webpackChunkngx_vflow_demo=self.webpackChunkngx_vflow_demo||[]).push([[5984],{5984:(E,c,g)=>{g.r(c),g.d(c,{DynamicComponent:()=>j,default:()=>D});var i=g(6286),f=g(7134),m=g(9143),u=g(8341),s=g(5879),o=g(8413),h=g(2898),r=g(7146);const y=["toast"];function C(e,T){if(1&e&&(s.TgZ(0,"h3"),s._uU(1),s.qZA(),s.TgZ(2,"pre"),s._uU(3),s.qZA()),2&e){const n=s.oxw();s.xp6(1),s.Oqu(null==n.toastData?null:n.toastData.title),s.xp6(2),s.Oqu(null==n.toastData?null:n.toastData.json)}}const v=["toast"];function w(e,T){if(1&e&&(s.TgZ(0,"h3"),s._uU(1),s.qZA(),s.TgZ(2,"pre"),s._uU(3),s.qZA()),2&e){const n=s.oxw();s.xp6(1),s.Oqu(null==n.toastData?null:n.toastData.title),s.xp6(2),s.Oqu(null==n.toastData?null:n.toastData.json)}}const t={title:"Handling changes",mdFile:"./index.md",category:u.Z,demos:{HandlingChangesDemoComponent:(()=>{class e{constructor(){this.notifyService=(0,s.f3M)(o.Z),this.nodes=[{id:"1",point:{x:100,y:100},type:"default",text:"1"},{id:"2",point:{x:200,y:200},type:"default",text:"2"}],this.edges=[],this.toastData={}}createEdge({source:n,target:a}){this.edges=[...this.edges,{id:`${n} -> ${a}`,source:n,target:a}]}handleNodeChanges(n){this.toastData={title:"(onNodesChange)",json:JSON.stringify(n,null,2)},this.notifyService.notify(this.toastTemplate)}handleEdgeChanges(n){this.toastData={title:"(onEdgesChange)",json:JSON.stringify(n,null,2)},this.notifyService.notify(this.toastTemplate)}static#s=this.\u0275fac=function(a){return new(a||e)};static#n=this.\u0275cmp=s.Xpm({type:e,selectors:[["ng-component"]],viewQuery:function(a,l){if(1&a&&s.Gf(y,5),2&a){let d;s.iGM(d=s.CRH())&&(l.toastTemplate=d.first)}},standalone:!0,features:[s.jDz],decls:3,vars:2,consts:[[3,"nodes","edges","onConnect","onNodesChange","onEdgesChange"],["toast",""]],template:function(a,l){1&a&&(s.TgZ(0,"vflow",0),s.NdJ("onConnect",function(p){return l.createEdge(p)})("onNodesChange",function(p){return l.handleNodeChanges(p)})("onEdgesChange",function(p){return l.handleEdgeChanges(p)}),s.qZA(),s.YNc(1,C,4,2,"ng-template",null,1,s.W1O)),2&a&&s.Q6J("nodes",l.nodes)("edges",l.edges)},dependencies:[h.p,r.t],encapsulation:2,changeDetection:0})}return e})(),HandlingChangesFilteredDemoComponent:(()=>{class e{constructor(){this.notifyService=(0,s.f3M)(o.Z),this.nodes=[{id:"1",point:{x:100,y:100},type:"default",text:"1"},{id:"2",point:{x:200,y:200},type:"default",text:"2"}],this.edges=[],this.toastData={}}createEdge({source:n,target:a}){this.edges=[...this.edges,{id:`${n} -> ${a}`,source:n,target:a}]}handleNodePositionChange(n){this.toastData={title:"(onNodesChange.position.single)",json:JSON.stringify(n,null,2)},this.notifyService.notify(this.toastTemplate)}handleNodeSelectChange(n){this.toastData={title:"(onNodesChange.select.single)",json:JSON.stringify(n,null,2)},this.notifyService.notify(this.toastTemplate)}handleNodesAddChange(n){this.toastData={title:"(onNodesChange.add.many)",json:JSON.stringify(n,null,2)},this.notifyService.notify(this.toastTemplate)}handleEdgesAddChange(n){this.toastData={title:"(onEdgesChange.add)",json:JSON.stringify(n,null,2)},this.notifyService.notify(this.toastTemplate)}addNodes(){this.nodes=[...this.nodes,{id:crypto.randomUUID(),point:{x:0,y:0},type:"default",text:"random"},{id:crypto.randomUUID(),point:{x:300,y:300},type:"default",text:"random"}]}static#s=this.\u0275fac=function(a){return new(a||e)};static#n=this.\u0275cmp=s.Xpm({type:e,selectors:[["ng-component"]],viewQuery:function(a,l){if(1&a&&s.Gf(v,5),2&a){let d;s.iGM(d=s.CRH())&&(l.toastTemplate=d.first)}},standalone:!0,features:[s.jDz],decls:5,vars:2,consts:[[3,"click"],[3,"nodes","edges","onConnect","onNodesChange.position.single","onNodesChange.select.single","onNodesChange.add.many","onEdgesChange.add"],["toast",""]],template:function(a,l){1&a&&(s.TgZ(0,"button",0),s.NdJ("click",function(){return l.addNodes()}),s._uU(1,"Add nodes"),s.qZA(),s.TgZ(2,"vflow",1),s.NdJ("onConnect",function(p){return l.createEdge(p)})("onNodesChange.position.single",function(p){return l.handleNodePositionChange(p)})("onNodesChange.select.single",function(p){return l.handleNodeSelectChange(p)})("onNodesChange.add.many",function(p){return l.handleNodesAddChange(p)})("onEdgesChange.add",function(p){return l.handleEdgesAddChange(p)}),s.qZA(),s.YNc(3,w,4,2,"ng-template",null,2,s.W1O)),2&a&&(s.xp6(2),s.Q6J("nodes",l.nodes)("edges",l.edges))},dependencies:[h.p,r.t],encapsulation:2,changeDetection:0})}return e})()},order:3},x=[],k={HandlingChangesDemoComponent:[{title:"TypeScript",code:'<pre class="ngde hljs"><code lang="typescript" class="hljs language-typescript code-lines ngde"><span class="line ngde"><span class="hljs-keyword ngde">import</span> { <span class="hljs-title class_ ngde">ChangeDetectionStrategy</span>, <span class="hljs-title class_ ngde">Component</span>, <span class="hljs-title class_ ngde">TemplateRef</span>, <span class="hljs-title class_ ngde">ViewChild</span>, inject } <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">\'@angular/core\'</span>;\n</span><span class="line ngde"><span class="hljs-keyword ngde">import</span> { <span class="hljs-title class_ ngde">NgDocNotifyService</span> } <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">\'@ng-doc/ui-kit\'</span>;\n</span><span class="line ngde"><span class="hljs-keyword ngde">import</span> { <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/interfaces/Connection" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Connection</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/interfaces/Edge" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Edge</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/type-aliases/EdgeChange" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">EdgeChange</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/type-aliases/Node" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">Node</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/type-aliases/NodeChange" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">NodeChange</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/classes/VflowModule" class="ng-doc-code-anchor ngde" data-link-type="NgModule" class="ngde">VflowModule</a></span> } <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">\'projects/ngx-vflow-lib/src/public-api\'</span>;\n</span><span class="line ngde">\n</span><span class="line ngde"><span class="hljs-meta ngde">@Component</span>({\n</span><span class="line ngde">  <span class="hljs-attr ngde">templateUrl</span>: <span class="hljs-string ngde">\'./handling-changes-demo.component.html\'</span>,\n</span><span class="line ngde">  <span class="hljs-attr ngde">changeDetection</span>: <span class="hljs-title class_ ngde">ChangeDetectionStrategy</span>.<span class="hljs-property ngde">OnPush</span>,\n</span><span class="line ngde">  <span class="hljs-attr ngde">standalone</span>: <span class="hljs-literal ngde">true</span>,\n</span><span class="line ngde">  <span class="hljs-attr ngde">imports</span>: [<span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/classes/VflowModule" class="ng-doc-code-anchor ngde" data-link-type="NgModule" class="ngde">VflowModule</a></span>],\n</span><span class="line ngde">})\n</span><span class="line ngde"><span class="hljs-keyword ngde">export</span> <span class="hljs-keyword ngde">class</span> <span class="hljs-title class_ ngde">HandlingChangesDemoComponent</span> {\n</span><span class="line ngde">  <span class="hljs-keyword ngde">private</span> notifyService = <span class="hljs-title function_ ngde">inject</span>(<span class="hljs-title class_ ngde">NgDocNotifyService</span>)\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-meta ngde">@ViewChild</span>(<span class="hljs-string ngde">\'toast\'</span>)\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> toastTemplate!: <span class="hljs-title class_ ngde">TemplateRef</span>&#x3C;{}>;\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-attr ngde">nodes</span>: <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/type-aliases/Node" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">Node</a></span>[] = [\n</span><span class="line ngde">    {\n</span><span class="line ngde">      <span class="hljs-attr ngde">id</span>: <span class="hljs-string ngde">\'1\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">point</span>: { <span class="hljs-attr ngde">x</span>: <span class="hljs-number ngde">100</span>, <span class="hljs-attr ngde">y</span>: <span class="hljs-number ngde">100</span> },\n</span><span class="line ngde">      <span class="hljs-attr ngde">type</span>: <span class="hljs-string ngde">\'default\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">text</span>: <span class="hljs-string ngde">`1`</span>,\n</span><span class="line ngde">    },\n</span><span class="line ngde">    {\n</span><span class="line ngde">      <span class="hljs-attr ngde">id</span>: <span class="hljs-string ngde">\'2\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">point</span>: { <span class="hljs-attr ngde">x</span>: <span class="hljs-number ngde">200</span>, <span class="hljs-attr ngde">y</span>: <span class="hljs-number ngde">200</span> },\n</span><span class="line ngde">      <span class="hljs-attr ngde">type</span>: <span class="hljs-string ngde">\'default\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">text</span>: <span class="hljs-string ngde">`2`</span>\n</span><span class="line ngde">    },\n</span><span class="line ngde">  ]\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-attr ngde">edges</span>: <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/interfaces/Edge" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Edge</a></span>[] = []\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-attr ngde">toastData</span>: <span class="hljs-built_in ngde">any</span> = {}\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-title function_ ngde">createEdge</span>(<span class="hljs-params ngde">{ source, target }: <a href="/api/ngx-vflow/interfaces/Connection" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Connection</a></span>) {\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">edges</span> = [...<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">edges</span>, {\n</span><span class="line ngde">      <span class="hljs-attr ngde">id</span>: <span class="hljs-string ngde">`<span class="hljs-subst ngde">${source}</span> -> <span class="hljs-subst ngde">${target}</span>`</span>,\n</span><span class="line ngde">      source,\n</span><span class="line ngde">      target\n</span><span class="line ngde">    }]\n</span><span class="line ngde">  }\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-title function_ ngde">handleNodeChanges</span>(<span class="hljs-params ngde">changes: <a href="/api/ngx-vflow/type-aliases/NodeChange" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">NodeChange</a>[]</span>) {\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">toastData</span> = {\n</span><span class="line ngde">      <span class="hljs-attr ngde">title</span>: <span class="hljs-string ngde">\'(onNodesChange)\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">json</span>: <span class="hljs-title class_ ngde">JSON</span>.<span class="hljs-title function_ ngde">stringify</span>(changes, <span class="hljs-literal ngde">null</span>, <span class="hljs-number ngde">2</span>)\n</span><span class="line ngde">    }\n</span><span class="line ngde">\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">notifyService</span>.<span class="hljs-title function_ ngde">notify</span>(<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">toastTemplate</span>)\n</span><span class="line ngde">  }\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-title function_ ngde">handleEdgeChanges</span>(<span class="hljs-params ngde">changes: <a href="/api/ngx-vflow/type-aliases/EdgeChange" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">EdgeChange</a>[]</span>) {\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">toastData</span> = {\n</span><span class="line ngde">      <span class="hljs-attr ngde">title</span>: <span class="hljs-string ngde">\'(onEdgesChange)\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">json</span>: <span class="hljs-title class_ ngde">JSON</span>.<span class="hljs-title function_ ngde">stringify</span>(changes, <span class="hljs-literal ngde">null</span>, <span class="hljs-number ngde">2</span>)\n</span><span class="line ngde">    }\n</span><span class="line ngde">\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">notifyService</span>.<span class="hljs-title function_ ngde">notify</span>(<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">toastTemplate</span>)\n</span><span class="line ngde">  }\n</span><span class="line ngde">}\n</span></code></pre>'},{title:"HTML",code:'<pre class="ngde hljs"><code lang="html" class="hljs language-html code-lines ngde"><span class="line ngde">&#x3C;<span class="hljs-name ngde">vflow</span><span class="hljs-tag ngde"></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">  [</span><span class="hljs-attr ngde">nodes</span>]=<span class="hljs-string ngde">"nodes"</span><span class="hljs-tag ngde"></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">  [</span><span class="hljs-attr ngde">edges</span>]=<span class="hljs-string ngde">"edges"</span><span class="hljs-tag ngde"></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">  (</span><span class="hljs-attr ngde">onConnect</span>)=<span class="hljs-string ngde">"createEdge($event)"</span><span class="hljs-tag ngde"></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">  (</span><span class="hljs-attr ngde">onNodesChange</span>)=<span class="hljs-string ngde">"handleNodeChanges($event)"</span><span class="hljs-tag ngde"></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">  (</span><span class="hljs-attr ngde">onEdgesChange</span>)=<span class="hljs-string ngde">"handleEdgeChanges($event)"</span><span class="hljs-tag ngde"></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">/></span>\n</span><span class="line ngde">\n</span><span class="line ngde"><span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">ng-template</span> #<span class="hljs-attr ngde">toast</span>></span>\n</span><span class="line ngde">  <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">h3</span>></span>{{ toastData?.title }}<span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">h3</span>></span>\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">pre</span>></span>{{ toastData?.json }}<span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">pre</span>></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">ng-template</span>></span>\n</span></code></pre>'}],HandlingChangesFilteredDemoComponent:[{title:"TypeScript",code:'<pre class="ngde hljs"><code lang="typescript" class="hljs language-typescript code-lines ngde"><span class="line ngde"><span class="hljs-keyword ngde">import</span> { <span class="hljs-title class_ ngde">ChangeDetectionStrategy</span>, <span class="hljs-title class_ ngde">Component</span>, <span class="hljs-title class_ ngde">TemplateRef</span>, <span class="hljs-title class_ ngde">ViewChild</span>, inject } <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">\'@angular/core\'</span>;\n</span><span class="line ngde"><span class="hljs-keyword ngde">import</span> { <span class="hljs-title class_ ngde">NgDocNotifyService</span> } <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">\'@ng-doc/ui-kit\'</span>;\n</span><span class="line ngde"><span class="hljs-keyword ngde">import</span> { <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/interfaces/Connection" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Connection</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/interfaces/Edge" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Edge</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/type-aliases/EdgeChange" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">EdgeChange</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/type-aliases/Node" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">Node</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/interfaces/NodeAddChange" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">NodeAddChange</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/type-aliases/NodeChange" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">NodeChange</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/interfaces/NodePositionChange" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">NodePositionChange</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/interfaces/NodeSelectedChange" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">NodeSelectedChange</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/classes/VflowModule" class="ng-doc-code-anchor ngde" data-link-type="NgModule" class="ngde">VflowModule</a></span> } <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">\'projects/ngx-vflow-lib/src/public-api\'</span>;\n</span><span class="line ngde">\n</span><span class="line ngde"><span class="hljs-meta ngde">@Component</span>({\n</span><span class="line ngde">  <span class="hljs-attr ngde">templateUrl</span>: <span class="hljs-string ngde">\'./handling-changes-filtered-demo.component.html\'</span>,\n</span><span class="line ngde">  <span class="hljs-attr ngde">changeDetection</span>: <span class="hljs-title class_ ngde">ChangeDetectionStrategy</span>.<span class="hljs-property ngde">OnPush</span>,\n</span><span class="line ngde">  <span class="hljs-attr ngde">standalone</span>: <span class="hljs-literal ngde">true</span>,\n</span><span class="line ngde">  <span class="hljs-attr ngde">imports</span>: [<span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/classes/VflowModule" class="ng-doc-code-anchor ngde" data-link-type="NgModule" class="ngde">VflowModule</a></span>],\n</span><span class="line ngde">})\n</span><span class="line ngde"><span class="hljs-keyword ngde">export</span> <span class="hljs-keyword ngde">class</span> <span class="hljs-title class_ ngde">HandlingChangesFilteredDemoComponent</span> {\n</span><span class="line ngde">  <span class="hljs-keyword ngde">private</span> notifyService = <span class="hljs-title function_ ngde">inject</span>(<span class="hljs-title class_ ngde">NgDocNotifyService</span>)\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-meta ngde">@ViewChild</span>(<span class="hljs-string ngde">\'toast\'</span>)\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> toastTemplate!: <span class="hljs-title class_ ngde">TemplateRef</span>&#x3C;{}>;\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-attr ngde">nodes</span>: <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/type-aliases/Node" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">Node</a></span>[] = [\n</span><span class="line ngde">    {\n</span><span class="line ngde">      <span class="hljs-attr ngde">id</span>: <span class="hljs-string ngde">\'1\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">point</span>: { <span class="hljs-attr ngde">x</span>: <span class="hljs-number ngde">100</span>, <span class="hljs-attr ngde">y</span>: <span class="hljs-number ngde">100</span> },\n</span><span class="line ngde">      <span class="hljs-attr ngde">type</span>: <span class="hljs-string ngde">\'default\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">text</span>: <span class="hljs-string ngde">`1`</span>,\n</span><span class="line ngde">    },\n</span><span class="line ngde">    {\n</span><span class="line ngde">      <span class="hljs-attr ngde">id</span>: <span class="hljs-string ngde">\'2\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">point</span>: { <span class="hljs-attr ngde">x</span>: <span class="hljs-number ngde">200</span>, <span class="hljs-attr ngde">y</span>: <span class="hljs-number ngde">200</span> },\n</span><span class="line ngde">      <span class="hljs-attr ngde">type</span>: <span class="hljs-string ngde">\'default\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">text</span>: <span class="hljs-string ngde">`2`</span>\n</span><span class="line ngde">    },\n</span><span class="line ngde">  ]\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-attr ngde">edges</span>: <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/interfaces/Edge" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Edge</a></span>[] = []\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-attr ngde">toastData</span>: <span class="hljs-built_in ngde">any</span> = {}\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-title function_ ngde">createEdge</span>(<span class="hljs-params ngde">{ source, target }: <a href="/api/ngx-vflow/interfaces/Connection" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Connection</a></span>) {\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">edges</span> = [...<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">edges</span>, {\n</span><span class="line ngde">      <span class="hljs-attr ngde">id</span>: <span class="hljs-string ngde">`<span class="hljs-subst ngde">${source}</span> -> <span class="hljs-subst ngde">${target}</span>`</span>,\n</span><span class="line ngde">      source,\n</span><span class="line ngde">      target\n</span><span class="line ngde">    }]\n</span><span class="line ngde">  }\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-title function_ ngde">handleNodePositionChange</span>(<span class="hljs-params ngde">change: <a href="/api/ngx-vflow/interfaces/NodePositionChange" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">NodePositionChange</a></span>) {\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">toastData</span> = {\n</span><span class="line ngde">      <span class="hljs-attr ngde">title</span>: <span class="hljs-string ngde">\'(onNodesChange.position.single)\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">json</span>: <span class="hljs-title class_ ngde">JSON</span>.<span class="hljs-title function_ ngde">stringify</span>(change, <span class="hljs-literal ngde">null</span>, <span class="hljs-number ngde">2</span>)\n</span><span class="line ngde">    }\n</span><span class="line ngde">\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">notifyService</span>.<span class="hljs-title function_ ngde">notify</span>(<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">toastTemplate</span>)\n</span><span class="line ngde">  }\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-title function_ ngde">handleNodeSelectChange</span>(<span class="hljs-params ngde">change: <a href="/api/ngx-vflow/interfaces/NodeSelectedChange" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">NodeSelectedChange</a></span>) {\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">toastData</span> = {\n</span><span class="line ngde">      <span class="hljs-attr ngde">title</span>: <span class="hljs-string ngde">\'(onNodesChange.select.single)\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">json</span>: <span class="hljs-title class_ ngde">JSON</span>.<span class="hljs-title function_ ngde">stringify</span>(change, <span class="hljs-literal ngde">null</span>, <span class="hljs-number ngde">2</span>)\n</span><span class="line ngde">    }\n</span><span class="line ngde">\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">notifyService</span>.<span class="hljs-title function_ ngde">notify</span>(<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">toastTemplate</span>)\n</span><span class="line ngde">  }\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-title function_ ngde">handleNodesAddChange</span>(<span class="hljs-params ngde">changes: <a href="/api/ngx-vflow/interfaces/NodeAddChange" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">NodeAddChange</a>[]</span>) {\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">toastData</span> = {\n</span><span class="line ngde">      <span class="hljs-attr ngde">title</span>: <span class="hljs-string ngde">\'(onNodesChange.add.many)\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">json</span>: <span class="hljs-title class_ ngde">JSON</span>.<span class="hljs-title function_ ngde">stringify</span>(changes, <span class="hljs-literal ngde">null</span>, <span class="hljs-number ngde">2</span>)\n</span><span class="line ngde">    }\n</span><span class="line ngde">\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">notifyService</span>.<span class="hljs-title function_ ngde">notify</span>(<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">toastTemplate</span>)\n</span><span class="line ngde">  }\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-title function_ ngde">handleEdgesAddChange</span>(<span class="hljs-params ngde">changes: <a href="/api/ngx-vflow/type-aliases/EdgeChange" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">EdgeChange</a>[]</span>) {\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">toastData</span> = {\n</span><span class="line ngde">      <span class="hljs-attr ngde">title</span>: <span class="hljs-string ngde">\'(onEdgesChange.add)\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">json</span>: <span class="hljs-title class_ ngde">JSON</span>.<span class="hljs-title function_ ngde">stringify</span>(changes, <span class="hljs-literal ngde">null</span>, <span class="hljs-number ngde">2</span>)\n</span><span class="line ngde">    }\n</span><span class="line ngde">\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">notifyService</span>.<span class="hljs-title function_ ngde">notify</span>(<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">toastTemplate</span>)\n</span><span class="line ngde">  }\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-title function_ ngde">addNodes</span>(<span class="hljs-params ngde"></span>) {\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">nodes</span> = [...<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">nodes</span>,\n</span><span class="line ngde">    {\n</span><span class="line ngde">      <span class="hljs-attr ngde">id</span>: crypto.<span class="hljs-title function_ ngde">randomUUID</span>(),\n</span><span class="line ngde">      <span class="hljs-attr ngde">point</span>: { <span class="hljs-attr ngde">x</span>: <span class="hljs-number ngde">0</span>, <span class="hljs-attr ngde">y</span>: <span class="hljs-number ngde">0</span> },\n</span><span class="line ngde">      <span class="hljs-attr ngde">type</span>: <span class="hljs-string ngde">\'default\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">text</span>: <span class="hljs-string ngde">`random`</span>,\n</span><span class="line ngde">    },\n</span><span class="line ngde">    {\n</span><span class="line ngde">      <span class="hljs-attr ngde">id</span>: crypto.<span class="hljs-title function_ ngde">randomUUID</span>(),\n</span><span class="line ngde">      <span class="hljs-attr ngde">point</span>: { <span class="hljs-attr ngde">x</span>: <span class="hljs-number ngde">300</span>, <span class="hljs-attr ngde">y</span>: <span class="hljs-number ngde">300</span> },\n</span><span class="line ngde">      <span class="hljs-attr ngde">type</span>: <span class="hljs-string ngde">\'default\'</span>,\n</span><span class="line ngde">      <span class="hljs-attr ngde">text</span>: <span class="hljs-string ngde">`random`</span>\n</span><span class="line ngde">    },\n</span><span class="line ngde">    ]\n</span><span class="line ngde">  }\n</span><span class="line ngde">}\n</span></code></pre>'},{title:"HTML",code:'<pre class="ngde hljs"><code lang="html" class="hljs language-html code-lines ngde"><span class="line ngde"><span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">button</span> (<span class="hljs-attr ngde">click</span>)=<span class="hljs-string ngde">"addNodes()"</span>></span>Add nodes<span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">button</span>></span>\n</span><span class="line ngde">\n</span><span class="line ngde">&#x3C;<span class="hljs-name ngde">vflow</span><span class="hljs-tag ngde"></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">  [</span><span class="hljs-attr ngde">nodes</span>]=<span class="hljs-string ngde">"nodes"</span><span class="hljs-tag ngde"></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">  [</span><span class="hljs-attr ngde">edges</span>]=<span class="hljs-string ngde">"edges"</span><span class="hljs-tag ngde"></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">  (</span><span class="hljs-attr ngde">onConnect</span>)=<span class="hljs-string ngde">"createEdge($event)"</span><span class="hljs-tag ngde"></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">  (</span><span class="hljs-attr ngde">onNodesChange.position.single</span>)=<span class="hljs-string ngde">"handleNodePositionChange($event)"</span><span class="hljs-tag ngde"></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">  (</span><span class="hljs-attr ngde">onNodesChange.select.single</span>)=<span class="hljs-string ngde">"handleNodeSelectChange($event)"</span><span class="hljs-tag ngde"></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">  (</span><span class="hljs-attr ngde">onNodesChange.add.many</span>)=<span class="hljs-string ngde">"handleNodesAddChange($event)"</span><span class="hljs-tag ngde"></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">  (</span><span class="hljs-attr ngde">onEdgesChange.add</span>)=<span class="hljs-string ngde">"handleEdgesAddChange($event)"</span><span class="hljs-tag ngde"></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">/></span>\n</span><span class="line ngde">\n</span><span class="line ngde"><span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">ng-template</span> #<span class="hljs-attr ngde">toast</span> <span class="hljs-attr ngde">let-ctx</span>></span>\n</span><span class="line ngde">  <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">h3</span>></span>{{ toastData?.title }}<span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">h3</span>></span>\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">pre</span>></span>{{ toastData?.json }}<span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">pre</span>></span>\n</span><span class="line ngde"><span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">ng-template</span>></span>\n</span></code></pre>'}]};let j=(()=>{class e extends i.a{constructor(){super(),this.routePrefix="",this.pageType="guide",this.pageContent='<h1 id="handling-changes" class="ngde">Handling changes<a title="Link to heading" class="ng-doc-header-link ngde" href="/examples/handling-changes#handling-changes"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1><ng-doc-blockquote type="info" class="ngde"><p class="ngde">You can observe changes in the toasts.</p></ng-doc-blockquote><p class="ngde">You can observe various changes in nodes and edges.</p><p class="ngde">Types of <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/ngx-vflow/type-aliases/NodeChange" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">NodeChange</a></code>s:</p><ul class="ngde"><li class="ngde"><code class="ngde">position</code> - new node position after drag and drop</li><li class="ngde"><code class="ngde">add</code> - when node was created</li><li class="ngde"><code class="ngde">remove</code> - when node was removed</li><li class="ngde"><code class="ngde">select</code> - when node was selected (also triggers for unselected nodes)</li></ul><p class="ngde">Types of <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/ngx-vflow/type-aliases/EdgeChange" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">EdgeChange</a></code>s:</p><ul class="ngde"><li class="ngde"><code class="ngde">add</code> - when edge was created</li><li class="ngde"><code class="ngde">remove</code> - when edge was removed</li><li class="ngde"><code class="ngde">select</code> - when edge was selected (also triggers for unselected edges)</li><li class="ngde"><code class="ngde">detached</code> - when edge became invisible due to the absence of the source or target node. Use this to delete such edges from the edges list</li></ul><p class="ngde">There are a several ways to receive these changes:</p><h2 id="from-onnodeschange-and-onedgeschange-outputs" class="ngde">From (onNodesChange) and (onEdgesChange) outputs<a title="Link to heading" class="ng-doc-header-link ngde" href="/examples/handling-changes#from-onnodeschange-and-onedgeschange-outputs"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h2><p class="ngde">This is a way to get every possible change. Changes came as non empty arrays:</p><ul class="ngde"><li class="ngde"><code class="ngde">(onNodesChange)</code> emits <code class="ngde">NodeChange[]</code></li><li class="ngde"><code class="ngde">(onEdgesChange)</code> emits <code class="ngde">EdgeChange[]</code></li></ul><ng-doc-demo componentname="HandlingChangesDemoComponent" indexable="false" class="ngde"><div id="options" class="ngde">{"expanded":false}</div></ng-doc-demo><h2 id="from-filtered-outputs" class="ngde">From filtered outputs<a title="Link to heading" class="ng-doc-header-link ngde" href="/examples/handling-changes#from-filtered-outputs"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h2><p class="ngde">For your convenience, here is the filtering scheme for changes based on the <code class="ngde">(onNodesChange)</code> and <code class="ngde">(onEdgesChange)</code> events:</p><ul class="ngde"><li class="ngde"><code class="ngde">(onNodesChange.[NodeChangeType])</code> - a list of node changes of a certain type</li><li class="ngde"><code class="ngde">(onNodesChange.[EdgeChangeType])</code> - a list of edge changes of a certain type</li><li class="ngde"><code class="ngde">(onNodesChange.[NodeChangeType].[Count])</code> - a list (<code class="ngde">many</code>) or single (<code class="ngde">single</code>) node change of a certain type</li><li class="ngde"><code class="ngde">(onEdgesChange.[EdgeChangeType].[Count])</code> - a list (<code class="ngde">many</code>) or single (<code class="ngde">single</code>) edge change of a certain type</li></ul><p class="ngde">Where:</p><pre class="ngde hljs"><code class="hljs language-ts code-lines ngde" lang="ts" name="" icon="" highlightedlines="[]"><span class="line ngde"><span class="hljs-keyword ngde">type</span> <span class="hljs-title class_ ngde">NodeChangeType</span> = <span class="hljs-string ngde">\'position\'</span> | <span class="hljs-string ngde">\'add\'</span> | <span class="hljs-string ngde">\'remove\'</span> | <span class="hljs-string ngde">\'select\'</span>\n</span><span class="line ngde">\n</span><span class="line ngde"><span class="hljs-keyword ngde">type</span> <span class="hljs-title class_ ngde">EdgeChangeType</span> = <span class="hljs-string ngde">\'detached\'</span> | <span class="hljs-string ngde">\'add\'</span> | <span class="hljs-string ngde">\'remove\'</span> | <span class="hljs-string ngde">\'select\'</span>\n</span><span class="line ngde">\n</span><span class="line ngde"><span class="hljs-comment ngde">// single - when there is only one change of this type (for example if you drag and drop some node, it\'s consireder as single change)</span>\n</span><span class="line ngde"><span class="hljs-comment ngde">// many - when there is more than one change of this type (for example if you deleted several nodes at the same time)</span>\n</span><span class="line ngde"><span class="hljs-keyword ngde">type</span> <span class="hljs-title class_ ngde">Count</span> = <span class="hljs-string ngde">\'single\'</span> | <span class="hljs-string ngde">\'many\'</span>\n</span></code></pre><ng-doc-demo componentname="HandlingChangesFilteredDemoComponent" indexable="false" class="ngde"><div id="options" class="ngde">{"expanded":false}</div></ng-doc-demo><p class="ngde">List of all possible filter outputs:</p><pre class="ngde hljs"><code class="hljs language-ts code-lines ngde" lang="undefined" name="" icon="" highlightedlines="[]"><span class="line ngde"><span class="hljs-string ngde">\'onNodesChange.position\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onNodesChange.position.single\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onNodesChange.position.many\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onNodesChange.add\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onNodesChange.add.single\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onNodesChange.add.many\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onNodesChange.remove\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onNodesChange.remove.single\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onNodesChange.remove.many\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onNodesChange.select\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onNodesChange.select.single\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onNodesChange.select.many\'</span>,\n</span><span class="line ngde">\n</span><span class="line ngde"><span class="hljs-string ngde">\'onEdgesChange.detached\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onEdgesChange.detached.single\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onEdgesChange.detached.many\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onEdgesChange.add\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onEdgesChange.add.single\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onEdgesChange.add.many\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onEdgesChange.remove\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onEdgesChange.remove.single\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onEdgesChange.remove.many\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onEdgesChange.select\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onEdgesChange.select.single\'</span>,\n</span><span class="line ngde"><span class="hljs-string ngde">\'onEdgesChange.select.many\'</span>,\n</span></code></pre><h2 id="from-componenet-itself" class="ngde">From componenet itself<a title="Link to heading" class="ng-doc-header-link ngde" href="/examples/handling-changes#from-componenet-itself"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h2><pre class="ngde hljs"><code class="hljs language-ts code-lines ngde" lang="ts" name="" icon="" highlightedlines="[]"><span class="line ngde">{\n</span><span class="line ngde">  ...\n</span><span class="line ngde">  <span class="hljs-meta ngde">@ViewChild</span>(<span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/classes/VflowComponent" class="ng-doc-code-anchor ngde" data-link-type="Component" class="ngde">VflowComponent</a></span>)\n</span><span class="line ngde">  <span class="hljs-attr ngde">vflow</span>: <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/classes/VflowComponent" class="ng-doc-code-anchor ngde" data-link-type="Component" class="ngde">VflowComponent</a></span>\n</span><span class="line ngde">\n</span><span class="line ngde">  <span class="hljs-title function_ ngde">ngAfterViewInit</span>(<span class="hljs-params ngde"></span>) {\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">vflow</span>.<span class="hljs-property ngde">nodesChange$</span>.<span class="hljs-title function_ ngde">subscribe</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">changes</span>) =></span> {\n</span><span class="line ngde">      <span class="hljs-comment ngde">// handle node changes</span>\n</span><span class="line ngde">    })\n</span><span class="line ngde">\n</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">vflow</span>.<span class="hljs-property ngde">edgesChange$</span>.<span class="hljs-title function_ ngde">subscribe</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">changes</span>) =></span> {\n</span><span class="line ngde">      <span class="hljs-comment ngde">// handle edges changes</span>\n</span><span class="line ngde">    })\n</span><span class="line ngde">  }\n</span><span class="line ngde">  ...\n</span><span class="line ngde">}\n</span></code></pre>',this.editSourceFileUrl="https://github.com/artem-mangilev/ngx-vflow/edit/main/projects/ngx-vflow-demo/src/app/categories/examples/pages/handling-changes/index.md?message=docs(handling-changes): describe your changes here...",this.page=t,this.demoAssets=k}static#s=this.\u0275fac=function(a){return new(a||e)};static#n=this.\u0275cmp=s.Xpm({type:e,selectors:[["ng-doc-page-examples-handling-changes"]],standalone:!0,features:[s._Bn([{provide:i.a,useExisting:e},x,t.providers??[]]),s.qOj,s.jDz],decls:1,vars:0,template:function(a,l){1&a&&s._UZ(0,"ng-doc-page")},dependencies:[f.z],encapsulation:2,changeDetection:0})}return e})();const D=[{...(0,m.isRoute)(t.route)?t.route:{},path:"",component:j,title:"Handling changes"}]}}]);