import{a as g}from"./chunk-MK22WFRS.js";import"./chunk-SNJXPLY4.js";import{a}from"./chunk-G7W2QYQ6.js";import{Ba as p,R as l,Sa as c,ob as i,pb as d,wc as C}from"./chunk-EEU2KGOS.js";import{a as t,b as o,g as j}from"./chunk-P2VZOJAX.js";var u=j(C());var x={title:"Testing",order:2},r=x;var v={title:"Unit testing component nodes",mdFile:"./index.md",category:r,order:2},n=v;var h=[];var y={},m=y;var _=`<h1 id="unit-testing-component-nodes" class="ngde">Unit testing component nodes<a title="Link to heading" class="ng-doc-header-link ngde" href="/testing/unit-testing-component-nodes#unit-testing-component-nodes"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1><p class="ngde">To simplify writing isolated tests for component nodes, you can use the <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/ngx-vflow/functions/provideCustomNodeMocks" class="ng-doc-code-anchor ngde" data-link-type="Function" class="ngde">provideCustomNodeMocks</a></code> function. This helps prevent dependency injection (DI) errors that occur when a node is used outside the scope of the <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/api/ngx-vflow/classes/VflowComponent" class="ng-doc-code-anchor ngde" data-link-type="Component" class="ngde">VflowComponent</a></code>.</p><pre class="ngde hljs"><code class="hljs language-ts code-lines ngde" lang="ts" name="" icon="" highlightedlines="[]"><span class="line ngde"><span class="hljs-meta ngde">@Component</span>({
</span><span class="line ngde">  <span class="hljs-attr ngde">standalone</span>: <span class="hljs-literal ngde">true</span>,
</span><span class="line ngde">  <span class="hljs-attr ngde">template</span>: <span class="hljs-string ngde">\`&#x3C;div resizable>&#x3C;handle />&#x3C;/div>\`</span>,
</span><span class="line ngde">  <span class="hljs-attr ngde">imports</span>: [<span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/variables/Vflow" class="ng-doc-code-anchor ngde" data-link-type="Variable" class="ngde">Vflow</a></span>],
</span><span class="line ngde">})
</span><span class="line ngde"><span class="hljs-keyword ngde">class</span> <span class="hljs-title class_ ngde">TestCustomNodeComponent</span> <span class="hljs-keyword ngde">extends</span> <span class="hljs-title class_ inherited__ ngde"><a href="/api/ngx-vflow/classes/CustomNodeComponent" class="ng-doc-code-anchor ngde" data-link-type="Directive" class="ngde">CustomNodeComponent</a></span> {}
</span><span class="line ngde">
</span><span class="line ngde"><span class="hljs-title function_ ngde">describe</span>(<span class="hljs-string ngde">'TestCustomNodeComponent'</span>, <span class="hljs-function ngde">() =></span> {
</span><span class="line ngde">  <span class="hljs-keyword ngde">let</span> <span class="hljs-attr ngde">component</span>: <span class="hljs-title class_ ngde">TestCustomNodeComponent</span>;
</span><span class="line ngde">  <span class="hljs-keyword ngde">let</span> <span class="hljs-attr ngde">fixture</span>: <span class="hljs-title class_ ngde">ComponentFixture</span>&#x3C;<span class="hljs-title class_ ngde">TestCustomNodeComponent</span>>;
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-title function_ ngde">beforeEach</span>(<span class="hljs-function ngde">() =></span> {
</span><span class="line ngde">    <span class="hljs-title class_ ngde">TestBed</span>.<span class="hljs-title function_ ngde">configureTestingModule</span>({
</span><span class="line ngde">      <span class="hljs-attr ngde">imports</span>: [<span class="hljs-title class_ ngde">TestCustomNodeComponent</span>],
</span><span class="line ngde">      <span class="hljs-attr ngde">providers</span>: [<span class="hljs-title function_ ngde"><a href="/api/ngx-vflow/functions/provideCustomNodeMocks" class="ng-doc-code-anchor ngde" data-link-type="Function" class="ngde">provideCustomNodeMocks</a></span>()],
</span><span class="line ngde">    });
</span><span class="line ngde">
</span><span class="line ngde">    fixture = <span class="hljs-title class_ ngde">TestBed</span>.<span class="hljs-title function_ ngde">createComponent</span>(<span class="hljs-title class_ ngde">TestCustomNodeComponent</span>);
</span><span class="line ngde">    component = fixture.<span class="hljs-property ngde">componentInstance</span>;
</span><span class="line ngde">  });
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-title function_ ngde">it</span>(<span class="hljs-string ngde">'should create'</span>, <span class="hljs-function ngde">() =></span> {
</span><span class="line ngde">    <span class="hljs-comment ngde">// should create without DI errors</span>
</span><span class="line ngde">    <span class="hljs-title function_ ngde">expect</span>(component).<span class="hljs-title function_ ngde">toBeTruthy</span>();
</span><span class="line ngde">  });
</span><span class="line ngde">});
</span></code></pre>`,N=(()=>{class s extends a{constructor(){super(),this.routePrefix="",this.pageType="guide",this.pageContent=_,this.editSourceFileUrl="https://github.com/artem-mangilev/ngx-vflow/edit/main/projects/ngx-vflow-demo/src/app/categories/testing/pages/unit-testing-component-nodes/index.md?message=docs(unit-testing-component-nodes): describe your changes here...",this.page=n,this.demoAssets=m}static{this.\u0275fac=function(e){return new(e||s)}}static{this.\u0275cmp=l({type:s,selectors:[["ng-doc-page-testing-unit-testing-component-nodes"]],standalone:!0,features:[i([{provide:a,useExisting:s},h,n.providers??[]]),p,d],decls:1,vars:0,template:function(e,T){e&1&&c(0,"ng-doc-page")},dependencies:[g],encapsulation:2,changeDetection:0})}}return s})(),w=[o(t({},(0,u.isRoute)(n.route)?n.route:{}),{path:"",component:N,title:"Unit testing component nodes"})],E=w;export{N as DynamicComponent,E as default};
