import{a as yn}from"./chunk-7PPUGJHC.js";import"./chunk-NGK3AQVU.js";import{k as wn,u as bn,w as C}from"./chunk-P2P2BJKG.js";import{a as fn}from"./chunk-MK22WFRS.js";import"./chunk-SNJXPLY4.js";import{a as H}from"./chunk-G7W2QYQ6.js";import{Ba as tn,Ea as rn,Ga as ln,Ha as pn,Qa as W,R as E,Ra as $,Sa as M,Wa as on,Y as nn,Ya as q,Z as sn,Za as cn,fb as dn,gb as gn,ib as _n,kb as hn,na as en,ob as un,pb as L,wc as Tn,ya as P,za as an}from"./chunk-EEU2KGOS.js";import{a as O,b as T,g as On,i as k}from"./chunk-P2VZOJAX.js";var Vn=On(Tn());var r,w=new Array(128).fill(void 0);w.push(void 0,null,!0,!1);function p(e){return w[e]}var N=w.length;function En(e){e<132||(w[e]=N,N=e)}function h(e){let n=p(e);return En(e),n}function b(e){return e==null}var z=null;function Mn(){return(z===null||z.byteLength===0)&&(z=new Float64Array(r.memory.buffer)),z}var D=null;function l(){return(D===null||D.byteLength===0)&&(D=new Int32Array(r.memory.buffer)),D}var R=0,S=null;function I(){return(S===null||S.byteLength===0)&&(S=new Uint8Array(r.memory.buffer)),S}var U=typeof TextEncoder<"u"?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},Ln=typeof U.encodeInto=="function"?function(e,n){return U.encodeInto(e,n)}:function(e,n){let s=U.encode(e);return n.set(s),{read:e.length,written:s.length}};function G(e,n,s){if(s===void 0){let _=U.encode(e),d=n(_.length,1)>>>0;return I().subarray(d,d+_.length).set(_),R=_.length,d}let a=e.length,t=n(a,1)>>>0,i=I(),c=0;for(;c<a;c++){let _=e.charCodeAt(c);if(_>127)break;i[t+c]=_}if(c!==a){c!==0&&(e=e.slice(c)),t=s(t,a,a=c+e.length*3,1)>>>0;let _=I().subarray(t+c,t+a),d=Ln(e,_);c+=d.written,t=s(t,a,c,1)>>>0}return R=c,t}function o(e){N===w.length&&w.push(w.length+1);let n=N;return N=w[n],w[n]=e,n}var zn=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&zn.decode();function j(e,n){return e=e>>>0,zn.decode(I().subarray(e,e+n))}var A=null;function In(){return(A===null||A.byteLength===0)&&(A=new BigInt64Array(r.memory.buffer)),A}function Q(e){let n=typeof e;if(n=="number"||n=="boolean"||e==null)return`${e}`;if(n=="string")return`"${e}"`;if(n=="symbol"){let t=e.description;return t==null?"Symbol":`Symbol(${t})`}if(n=="function"){let t=e.name;return typeof t=="string"&&t.length>0?`Function(${t})`:"Function"}if(Array.isArray(e)){let t=e.length,i="[";t>0&&(i+=Q(e[0]));for(let c=1;c<t;c++)i+=", "+Q(e[c]);return i+="]",i}let s=/\[object ([^\]]+)\]/.exec(toString.call(e)),a;if(s.length>1)a=s[1];else return toString.call(e);if(a=="Object")try{return"Object("+JSON.stringify(e)+")"}catch{return"Object"}return e instanceof Error?`${e.name}: ${e.message}
${e.stack}`:a}var F=null;function Un(){return(F===null||F.byteLength===0)&&(F=new Uint32Array(r.memory.buffer)),F}function y(e,n){e=e>>>0;let a=Un().subarray(e/4,e/4+n),t=[];for(let i=0;i<a.length;i++)t.push(h(a[i]));return t}function u(e,n){if(!(e instanceof n))throw new Error(`expected instance of ${n.name}`);return e.ptr}var v=128;function X(e){if(v==1)throw new Error("out of js stack");return w[--v]=e,v}function m(e,n){try{return e.apply(this,n)}catch(s){r.__wbindgen_exn_store(o(s))}}var Kn=Object.freeze({Unchanged:0,0:"Unchanged",Modified:1,1:"Modified",Added:2,2:"Added",Removed:3,3:"Removed"}),Xn=Object.freeze({C:0,0:"C",L:1,1:"L",R:2,2:"R"}),ns=Object.freeze({Solid:0,0:"Solid",Dashed:1,1:"Dashed",Dotted:2,2:"Dotted"}),ss=Object.freeze({Monotonic:0,0:"Monotonic",Straight:1,1:"Straight",SimpleQuadratic:2,2:"SimpleQuadratic",AdaptiveBezier:3,3:"AdaptiveBezier"}),es=Object.freeze({Rectangle:0,0:"Rectangle",Square:1,1:"Square",Circle:2,2:"Circle",Ellipse:3,3:"Ellipse",Triangle:4,4:"Triangle",Diamond:5,5:"Diamond",Plaintext:6,6:"Plaintext",Underline:7,7:"Underline"}),as=Object.freeze({Normal:0,0:"Normal",None:1,1:"None"}),ts=Object.freeze({Forward:0,0:"Forward",Back:1,1:"Back",Both:2,2:"Both",None:3,3:"None"}),rs=Object.freeze({Normal:0,0:"Normal",Cluster:1,1:"Cluster"}),ls=Object.freeze({Solid:0,0:"Solid",Dashed:1,1:"Dashed",Dotted:2,2:"Dotted"}),is=Object.freeze({TB:0,0:"TB",BT:1,1:"BT",LR:2,2:"LR",RL:3,3:"RL"}),Bn=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(e=>r.__wbg_directedgraph_free(e>>>0)),B=class{__destroy_into_raw(){let n=this.__wbg_ptr;return this.__wbg_ptr=0,Bn.unregister(this),n}free(){let n=this.__destroy_into_raw();r.__wbg_directedgraph_free(n)}constructor(n){let s=r.directedgraph_new(b(n)?0:o(n));return this.__wbg_ptr=s>>>0,this}attrs(){let n=r.directedgraph_attrs(this.__wbg_ptr);return Y.__wrap(n)}new_vertex(n,s){let a=r.directedgraph_new_vertex(this.__wbg_ptr,b(n)?0:o(n),b(s)?0:o(s));return g.__wrap(a)}vertices(){try{let t=r.__wbindgen_add_to_stack_pointer(-16);r.directedgraph_vertices(t,this.__wbg_ptr);var n=l()[t/4+0],s=l()[t/4+1],a=y(n,s).slice();return r.__wbindgen_free(n,s*4,4),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}vertices_count(){return r.directedgraph_vertices_count(this.__wbg_ptr)>>>0}sources(){try{let t=r.__wbindgen_add_to_stack_pointer(-16);r.directedgraph_sources(t,this.__wbg_ptr);var n=l()[t/4+0],s=l()[t/4+1],a=y(n,s).slice();return r.__wbindgen_free(n,s*4,4),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}sinks(){try{let t=r.__wbindgen_add_to_stack_pointer(-16);r.directedgraph_sinks(t,this.__wbg_ptr);var n=l()[t/4+0],s=l()[t/4+1],a=y(n,s).slice();return r.__wbindgen_free(n,s*4,4),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}neighboring_vertices(n){try{let i=r.__wbindgen_add_to_stack_pointer(-16);u(n,g),r.directedgraph_neighboring_vertices(i,this.__wbg_ptr,n.__wbg_ptr);var s=l()[i/4+0],a=l()[i/4+1],t=y(s,a).slice();return r.__wbindgen_free(s,a*4,4),t}finally{r.__wbindgen_add_to_stack_pointer(16)}}new_edge(n,s,a,t){u(n,g),u(s,g);let i=r.directedgraph_new_edge(this.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr,b(a)?0:o(a),b(t)?0:o(t));return x.__wrap(i)}edges(){try{let t=r.__wbindgen_add_to_stack_pointer(-16);r.directedgraph_edges(t,this.__wbg_ptr);var n=l()[t/4+0],s=l()[t/4+1],a=y(n,s).slice();return r.__wbindgen_free(n,s*4,4),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}edges_count(){return r.directedgraph_edges_count(this.__wbg_ptr)>>>0}has_edge(n,s){return u(n,g),u(s,g),r.directedgraph_has_edge(this.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr)!==0}find_out_edge(n,s){u(n,g),u(s,g);let a=r.directedgraph_find_out_edge(this.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr);return a===0?void 0:x.__wrap(a)}find_out_edge_multi(n,s){try{let c=r.__wbindgen_add_to_stack_pointer(-16);u(n,g),u(s,g),r.directedgraph_find_out_edge_multi(c,this.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr);var a=l()[c/4+0],t=l()[c/4+1],i=y(a,t).slice();return r.__wbindgen_free(a,t*4,4),i}finally{r.__wbindgen_add_to_stack_pointer(16)}}find_in_edge(n,s){u(n,g),u(s,g);let a=r.directedgraph_find_in_edge(this.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr);return a===0?void 0:x.__wrap(a)}find_in_edge_multi(n,s){try{let c=r.__wbindgen_add_to_stack_pointer(-16);u(n,g),u(s,g),r.directedgraph_find_in_edge_multi(c,this.__wbg_ptr,n.__wbg_ptr,s.__wbg_ptr);var a=l()[c/4+0],t=l()[c/4+1],i=y(a,t).slice();return r.__wbindgen_free(a,t*4,4),i}finally{r.__wbindgen_add_to_stack_pointer(16)}}incoming(n){try{let i=r.__wbindgen_add_to_stack_pointer(-16);u(n,g),r.directedgraph_incoming(i,this.__wbg_ptr,n.__wbg_ptr);var s=l()[i/4+0],a=l()[i/4+1],t=y(s,a).slice();return r.__wbindgen_free(s,a*4,4),t}finally{r.__wbindgen_add_to_stack_pointer(16)}}incoming_count(n){return u(n,g),r.directedgraph_incoming_count(this.__wbg_ptr,n.__wbg_ptr)>>>0}outgoing(n){try{let i=r.__wbindgen_add_to_stack_pointer(-16);u(n,g),r.directedgraph_outgoing(i,this.__wbg_ptr,n.__wbg_ptr);var s=l()[i/4+0],a=l()[i/4+1],t=y(s,a).slice();return r.__wbindgen_free(s,a*4,4),t}finally{r.__wbindgen_add_to_stack_pointer(16)}}outgoing_count(n){return u(n,g),r.directedgraph_outgoing_count(this.__wbg_ptr,n.__wbg_ptr)>>>0}layout(){let n=r.directedgraph_layout(this.__wbg_ptr);return J.__wrap(n)}},mn=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(e=>r.__wbg_edgeref_free(e>>>0)),x=class e{static __wrap(n){n=n>>>0;let s=Object.create(e.prototype);return s.__wbg_ptr=n,mn.register(s,s.__wbg_ptr,s),s}__destroy_into_raw(){let n=this.__wbg_ptr;return this.__wbg_ptr=0,mn.unregister(this),n}free(){let n=this.__destroy_into_raw();r.__wbg_edgeref_free(n)}source(){let n=r.edgeref_source(this.__wbg_ptr);return g.__wrap(n)}target(){let n=r.edgeref_target(this.__wbg_ptr);return g.__wrap(n)}set(n){try{let t=r.__wbindgen_add_to_stack_pointer(-16);r.edgeref_set(t,this.__wbg_ptr,X(n));var s=l()[t/4+0],a=l()[t/4+1];if(a)throw h(s)}finally{r.__wbindgen_add_to_stack_pointer(16),w[v++]=void 0}}to_json(){try{let t=r.__wbindgen_add_to_stack_pointer(-16);r.edgeref_to_json(t,this.__wbg_ptr);var n=l()[t/4+0],s=l()[t/4+1],a=l()[t/4+2];if(a)throw h(s);return h(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}}},jn=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(e=>r.__wbg_graphref_free(e>>>0)),Y=class e{static __wrap(n){n=n>>>0;let s=Object.create(e.prototype);return s.__wbg_ptr=n,jn.register(s,s.__wbg_ptr,s),s}__destroy_into_raw(){let n=this.__wbg_ptr;return this.__wbg_ptr=0,jn.unregister(this),n}free(){let n=this.__destroy_into_raw();r.__wbg_graphref_free(n)}set(n){try{let t=r.__wbindgen_add_to_stack_pointer(-16);r.graphref_set(t,this.__wbg_ptr,X(n));var s=l()[t/4+0],a=l()[t/4+1];if(a)throw h(s)}finally{r.__wbindgen_add_to_stack_pointer(16),w[v++]=void 0}}to_json(){try{let t=r.__wbindgen_add_to_stack_pointer(-16);r.graphref_to_json(t,this.__wbg_ptr);var n=l()[t/4+0],s=l()[t/4+1],a=l()[t/4+2];if(a)throw h(s);return h(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}}},vn=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(e=>r.__wbg_json_free(e>>>0)),Z=class e{static __wrap(n){n=n>>>0;let s=Object.create(e.prototype);return s.__wbg_ptr=n,vn.register(s,s.__wbg_ptr,s),s}__destroy_into_raw(){let n=this.__wbg_ptr;return this.__wbg_ptr=0,vn.unregister(this),n}free(){let n=this.__destroy_into_raw();r.__wbg_json_free(n)}to_string(){let n,s;try{let f=r.__wbindgen_add_to_stack_pointer(-16);r.json_to_string(f,this.__wbg_ptr);var a=l()[f/4+0],t=l()[f/4+1],i=l()[f/4+2],c=l()[f/4+3],_=a,d=t;if(c)throw _=0,d=0,h(i);return n=_,s=d,j(_,d)}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(n,s,1)}}to_string_pretty(){let n,s;try{let f=r.__wbindgen_add_to_stack_pointer(-16);r.json_to_string_pretty(f,this.__wbg_ptr);var a=l()[f/4+0],t=l()[f/4+1],i=l()[f/4+2],c=l()[f/4+3],_=a,d=t;if(c)throw _=0,d=0,h(i);return n=_,s=d,j(_,d)}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(n,s,1)}}to_obj(){try{let t=r.__wbindgen_add_to_stack_pointer(-16);r.json_to_obj(t,this.__wbg_ptr);var n=l()[t/4+0],s=l()[t/4+1],a=l()[t/4+2];if(a)throw h(s);return h(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}}},xn=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(e=>r.__wbg_positioneddirectedgraph_free(e>>>0)),J=class e{static __wrap(n){n=n>>>0;let s=Object.create(e.prototype);return s.__wbg_ptr=n,xn.register(s,s.__wbg_ptr,s),s}__destroy_into_raw(){let n=this.__wbg_ptr;return this.__wbg_ptr=0,xn.unregister(this),n}free(){let n=this.__destroy_into_raw();r.__wbg_positioneddirectedgraph_free(n)}to_svg(){let n=r.positioneddirectedgraph_to_svg(this.__wbg_ptr);return K.__wrap(n)}to_json(){let n=r.positioneddirectedgraph_to_json(this.__wbg_ptr);return Z.__wrap(n)}},kn=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(e=>r.__wbg_svg_free(e>>>0)),K=class e{static __wrap(n){n=n>>>0;let s=Object.create(e.prototype);return s.__wbg_ptr=n,kn.register(s,s.__wbg_ptr,s),s}__destroy_into_raw(){let n=this.__wbg_ptr;return this.__wbg_ptr=0,kn.unregister(this),n}free(){let n=this.__destroy_into_raw();r.__wbg_svg_free(n)}to_string(){let n,s;try{let i=r.__wbindgen_add_to_stack_pointer(-16);r.svg_to_string(i,this.__wbg_ptr);var a=l()[i/4+0],t=l()[i/4+1];return n=a,s=t,j(a,t)}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(n,s,1)}}},ps=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(e=>r.__wbg_util_free(e>>>0));var Cn=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(e=>r.__wbg_vertexref_free(e>>>0)),g=class e{static __wrap(n){n=n>>>0;let s=Object.create(e.prototype);return s.__wbg_ptr=n,Cn.register(s,s.__wbg_ptr,s),s}__destroy_into_raw(){let n=this.__wbg_ptr;return this.__wbg_ptr=0,Cn.unregister(this),n}free(){let n=this.__destroy_into_raw();r.__wbg_vertexref_free(n)}set(n){try{let t=r.__wbindgen_add_to_stack_pointer(-16);r.vertexref_set(t,this.__wbg_ptr,X(n));var s=l()[t/4+0],a=l()[t/4+1];if(a)throw h(s)}finally{r.__wbindgen_add_to_stack_pointer(16),w[v++]=void 0}}to_json(){try{let t=r.__wbindgen_add_to_stack_pointer(-16);r.vertexref_to_json(t,this.__wbg_ptr);var n=l()[t/4+0],s=l()[t/4+1],a=l()[t/4+2];if(a)throw h(s);return h(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}}};function Pn(e,n){return k(this,null,function*(){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return yield WebAssembly.instantiateStreaming(e,n)}catch(a){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",a);else throw a}let s=yield e.arrayBuffer();return yield WebAssembly.instantiate(s,n)}else{let s=yield WebAssembly.instantiate(e,n);return s instanceof WebAssembly.Instance?{instance:s,module:e}:s}})}function Wn(){let e={};return e.wbg={},e.wbg.__wbg_vertexref_new=function(n){let s=g.__wrap(n);return o(s)},e.wbg.__wbindgen_object_drop_ref=function(n){h(n)},e.wbg.__wbindgen_boolean_get=function(n){let s=p(n);return typeof s=="boolean"?s?1:0:2},e.wbg.__wbindgen_number_get=function(n,s){let a=p(s),t=typeof a=="number"?a:void 0;Mn()[n/8+1]=b(t)?0:t,l()[n/4+0]=!b(t)},e.wbg.__wbindgen_string_get=function(n,s){let a=p(s),t=typeof a=="string"?a:void 0;var i=b(t)?0:G(t,r.__wbindgen_malloc,r.__wbindgen_realloc),c=R;l()[n/4+1]=c,l()[n/4+0]=i},e.wbg.__wbindgen_is_bigint=function(n){return typeof p(n)=="bigint"},e.wbg.__wbindgen_bigint_from_i64=function(n){return o(n)},e.wbg.__wbindgen_jsval_eq=function(n,s){return p(n)===p(s)},e.wbg.__wbindgen_error_new=function(n,s){let a=new Error(j(n,s));return o(a)},e.wbg.__wbindgen_is_object=function(n){let s=p(n);return typeof s=="object"&&s!==null},e.wbg.__wbindgen_is_undefined=function(n){return p(n)===void 0},e.wbg.__wbindgen_in=function(n,s){return p(n)in p(s)},e.wbg.__wbindgen_as_number=function(n){return+p(n)},e.wbg.__wbindgen_object_clone_ref=function(n){let s=p(n);return o(s)},e.wbg.__wbindgen_string_new=function(n,s){let a=j(n,s);return o(a)},e.wbg.__wbg_edgeref_new=function(n){let s=x.__wrap(n);return o(s)},e.wbg.__wbg_new_abda76e883ba8a5f=function(){let n=new Error;return o(n)},e.wbg.__wbg_stack_658279fe44541cf6=function(n,s){let a=p(s).stack,t=G(a,r.__wbindgen_malloc,r.__wbindgen_realloc),i=R;l()[n/4+1]=i,l()[n/4+0]=t},e.wbg.__wbg_error_f851667af71bcfc6=function(n,s){let a,t;try{a=n,t=s,console.error(j(n,s))}finally{r.__wbindgen_free(a,t,1)}},e.wbg.__wbindgen_number_new=function(n){return o(n)},e.wbg.__wbg_crypto_1d1f22824a6a080c=function(n){let s=p(n).crypto;return o(s)},e.wbg.__wbg_process_4a72847cc503995b=function(n){let s=p(n).process;return o(s)},e.wbg.__wbg_versions_f686565e586dd935=function(n){let s=p(n).versions;return o(s)},e.wbg.__wbg_node_104a2ff8d6ea03a2=function(n){let s=p(n).node;return o(s)},e.wbg.__wbindgen_is_string=function(n){return typeof p(n)=="string"},e.wbg.__wbg_require_cca90b1a94a0255b=function(){return m(function(){let n=module.require;return o(n)},arguments)},e.wbg.__wbindgen_is_function=function(n){return typeof p(n)=="function"},e.wbg.__wbg_msCrypto_eb05e62b530a1508=function(n){let s=p(n).msCrypto;return o(s)},e.wbg.__wbg_randomFillSync_5c9c955aa56b6049=function(){return m(function(n,s){p(n).randomFillSync(h(s))},arguments)},e.wbg.__wbg_getRandomValues_3aa56aa6edec874c=function(){return m(function(n,s){p(n).getRandomValues(p(s))},arguments)},e.wbg.__wbindgen_bigint_from_u64=function(n){let s=BigInt.asUintN(64,n);return o(s)},e.wbg.__wbindgen_jsval_loose_eq=function(n,s){return p(n)==p(s)},e.wbg.__wbg_getwithrefkey_edc2c8960f0f1191=function(n,s){let a=p(n)[p(s)];return o(a)},e.wbg.__wbg_set_f975102236d3c502=function(n,s,a){p(n)[h(s)]=h(a)},e.wbg.__wbg_new_16b304a2cfa7ff4a=function(){let n=new Array;return o(n)},e.wbg.__wbg_newnoargs_e258087cd0daa0ea=function(n,s){let a=new Function(j(n,s));return o(a)},e.wbg.__wbg_call_27c0f87801dedf93=function(){return m(function(n,s){let a=p(n).call(p(s));return o(a)},arguments)},e.wbg.__wbg_new_72fb9a18b5ae2624=function(){let n=new Object;return o(n)},e.wbg.__wbg_self_ce0dbfc45cf2f5be=function(){return m(function(){let n=self.self;return o(n)},arguments)},e.wbg.__wbg_window_c6fb939a7f436783=function(){return m(function(){let n=window.window;return o(n)},arguments)},e.wbg.__wbg_globalThis_d1e6af4856ba331b=function(){return m(function(){let n=globalThis.globalThis;return o(n)},arguments)},e.wbg.__wbg_global_207b558942527489=function(){return m(function(){let n=global.global;return o(n)},arguments)},e.wbg.__wbg_set_d4638f722068f043=function(n,s,a){p(n)[s>>>0]=h(a)},e.wbg.__wbg_instanceof_ArrayBuffer_836825be07d4c9d2=function(n){let s;try{s=p(n)instanceof ArrayBuffer}catch{s=!1}return s},e.wbg.__wbg_call_b3ca7c6051f9bec1=function(){return m(function(n,s,a){let t=p(n).call(p(s),p(a));return o(t)},arguments)},e.wbg.__wbg_isSafeInteger_f7b04ef02296c4d2=function(n){return Number.isSafeInteger(p(n))},e.wbg.__wbg_buffer_12d079cc21e14bdb=function(n){let s=p(n).buffer;return o(s)},e.wbg.__wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb=function(n,s,a){let t=new Uint8Array(p(n),s>>>0,a>>>0);return o(t)},e.wbg.__wbg_new_63b92bc8671ed464=function(n){let s=new Uint8Array(p(n));return o(s)},e.wbg.__wbg_set_a47bac70306a19a7=function(n,s,a){p(n).set(p(s),a>>>0)},e.wbg.__wbg_length_c20a40f15020d68a=function(n){return p(n).length},e.wbg.__wbg_instanceof_Uint8Array_2b3bbecd033d19f6=function(n){let s;try{s=p(n)instanceof Uint8Array}catch{s=!1}return s},e.wbg.__wbg_newwithlength_e9b4878cebadb3d3=function(n){let s=new Uint8Array(n>>>0);return o(s)},e.wbg.__wbg_subarray_a1f73cd4b5b42fe1=function(n,s,a){let t=p(n).subarray(s>>>0,a>>>0);return o(t)},e.wbg.__wbindgen_bigint_get_as_i64=function(n,s){let a=p(s),t=typeof a=="bigint"?a:void 0;In()[n/8+1]=b(t)?BigInt(0):t,l()[n/4+0]=!b(t)},e.wbg.__wbindgen_debug_string=function(n,s){let a=Q(p(s)),t=G(a,r.__wbindgen_malloc,r.__wbindgen_realloc),i=R;l()[n/4+1]=i,l()[n/4+0]=t},e.wbg.__wbindgen_throw=function(n,s){throw new Error(j(n,s))},e.wbg.__wbindgen_memory=function(){let n=r.memory;return o(n)},e}function $n(e,n){return r=e.exports,Dn.__wbindgen_wasm_module=n,A=null,z=null,D=null,F=null,S=null,r.__wbindgen_start(),r}function Dn(e){return k(this,null,function*(){if(r!==void 0)return r;typeof e>"u"&&(e=new URL("vizdom_ts_bg.wasm",import.meta.url));let n=Wn();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));let{instance:s,module:a}=yield Pn(yield e,n);return $n(s,a)})}var Sn=Dn;function Hn(e,n){if(e&1){let s=on();W(0,"div",2),q("click",function(){let t=nn(s).$implicit,i=cn();return sn(i.onNodeClick(t.node))}),_n(1),M(2,"handle",3)(3,"handle",4),$()}if(e&2){let s=n.$implicit;pn("background-color",s.node.data.color),en(),hn(" ",s.node.data.color," ")}}var Fn=(()=>{class e{constructor(){this.vflow=an.required(C),this.nodes=P([]),this.edges=P([])}ngOnInit(){return k(this,null,function*(){try{yield Sn("assets/vizdom/vizdom_ts_bg.wasm")}catch(s){console.error("Failed to initialize WebAssembly:",s)}this.layout([{id:crypto.randomUUID(),point:{x:0,y:0},type:"html-template",data:{color:An()},draggable:!1}])})}onNodeClick(s){let a=crypto.randomUUID(),t=[...this.nodes(),{id:a,point:{x:0,y:0},type:"html-template",draggable:!1,data:{color:An()}}],i=[...this.edges(),{source:s.id,target:a,id:`${s.id} -> ${a}`,curve:"smooth-step"}];this.layout(t,i)}fitView(){this.nodes().length>1&&this.vflow().fitView({duration:750})}layout(s,a=[]){let t=new B({layout:{margin_x:75}}),i=new Map,c=new Map;s.forEach(d=>{let f=t.new_vertex({layout:{shape_w:150,shape_h:100},render:{id:d.id}},{compute_bounding_box:!1});i.set(d.id,f),c.set(d.id,d)}),a.forEach(d=>{t.new_edge(i.get(d.source),i.get(d.target))});let _=t.layout().to_json().to_obj();this.nodes.set(_.nodes.map(d=>T(O({},c.get(d.id)),{id:d.id,point:{x:d.x,y:d.y}}))),this.edges.set(a)}static{this.\u0275fac=function(a){return new(a||e)}}static{this.\u0275cmp=E({type:e,selectors:[["ng-component"]],viewQuery:function(a,t){a&1&&dn(t.vflow,C,5),a&2&&gn()},standalone:!0,features:[L],decls:2,vars:3,consts:[["view","auto",3,"onNodesChange.add","minZoom","nodes","edges"],["nodeHtml",""],[1,"custom-node",3,"click"],["type","source","position","bottom"],["type","target","position","top"]],template:function(a,t){a&1&&(W(0,"vflow",0),q("onNodesChange.add",function(){return t.fitView()}),rn(1,Hn,4,3,"ng-template",1),$()),a&2&&ln("minZoom",.1)("nodes",t.nodes())("edges",t.edges())},dependencies:[C,bn,wn],styles:["[_nghost-%COMP%]{width:100%;height:100%}.custom-node[_ngcontent-%COMP%]{width:100px;height:50px;background:#bbe1fa;border:1px solid gray;border-radius:5px;display:flex;align-items:center;justify-content:center}"],changeDetection:0})}}return e})();function An(){let e=[0,1,2,3,4,5,6,7,8,9,"A","B","C","D","E","F"],n="#";for(let s=0;s<6;s++){let a=Math.floor(Math.random()*e.length);n+=e[a]}return n}var Gn={title:"Vizdom layout",mdFile:"./index.md",category:yn,demos:{VizdomLayoutDemoComponent:Fn},order:2},V=Gn;var Nn=[];var Qn={VizdomLayoutDemoComponent:[{title:"TypeScript",code:`<pre class="ngde hljs"><code lang="typescript" class="hljs language-typescript code-lines ngde"><span class="line ngde"><span class="hljs-keyword ngde">import</span> { <span class="hljs-title class_ ngde">ChangeDetectionStrategy</span>, <span class="hljs-title class_ ngde">Component</span>, <span class="hljs-title class_ ngde">OnInit</span>, signal, viewChild, <span class="hljs-title class_ ngde">WritableSignal</span> } <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">'@angular/core'</span>;
</span><span class="line ngde"><span class="hljs-keyword ngde">import</span> init, { <span class="hljs-title class_ ngde">DirectedGraph</span>, <span class="hljs-title class_ ngde">VertexRef</span> } <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">'@vizdom/vizdom-ts-web'</span>;
</span><span class="line ngde"><span class="hljs-keyword ngde">import</span> { <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/interfaces/Edge" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Edge</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/type-aliases/Node" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">Node</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/classes/VflowComponent" class="ng-doc-code-anchor ngde" data-link-type="Component" class="ngde">VflowComponent</a></span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/variables/Vflow" class="ng-doc-code-anchor ngde" data-link-type="Variable" class="ngde">Vflow</a></span> } <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">'ngx-vflow'</span>;
</span><span class="line ngde">
</span><span class="line ngde"><span class="hljs-meta ngde">@Component</span>({
</span><span class="line ngde">  <span class="hljs-attr ngde">templateUrl</span>: <span class="hljs-string ngde">'./vizdom-layout-demo.component.html'</span>,
</span><span class="line ngde">  <span class="hljs-attr ngde">styleUrls</span>: [<span class="hljs-string ngde">'./vizdom-layout-demo.component.scss'</span>],
</span><span class="line ngde">  <span class="hljs-attr ngde">changeDetection</span>: <span class="hljs-title class_ ngde">ChangeDetectionStrategy</span>.<span class="hljs-property ngde">OnPush</span>,
</span><span class="line ngde">  <span class="hljs-attr ngde">standalone</span>: <span class="hljs-literal ngde">true</span>,
</span><span class="line ngde">  <span class="hljs-attr ngde">imports</span>: [<span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/variables/Vflow" class="ng-doc-code-anchor ngde" data-link-type="Variable" class="ngde">Vflow</a></span>],
</span><span class="line ngde">})
</span><span class="line ngde"><span class="hljs-keyword ngde">export</span> <span class="hljs-keyword ngde">class</span> <span class="hljs-title class_ ngde">VizdomLayoutDemoComponent</span> <span class="hljs-keyword ngde">implements</span> <span class="hljs-title class_ ngde">OnInit</span> {
</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> vflow = viewChild.required(<span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/classes/VflowComponent" class="ng-doc-code-anchor ngde" data-link-type="Component" class="ngde">VflowComponent</a></span>);
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-attr ngde">nodes</span>: <span class="hljs-title class_ ngde">WritableSignal</span>&#x3C;<span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/type-aliases/Node" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">Node</a></span>[]> = <span class="hljs-title function_ ngde">signal</span>([]);
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-keyword ngde">public</span> <span class="hljs-attr ngde">edges</span>: <span class="hljs-title class_ ngde">WritableSignal</span>&#x3C;<span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/interfaces/Edge" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Edge</a></span>[]> = <span class="hljs-title function_ ngde">signal</span>([]);
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-keyword ngde">async</span> <span class="hljs-title function_ ngde">ngOnInit</span>(): <span class="hljs-title class_ ngde">Promise</span>&#x3C;<span class="hljs-built_in ngde">void</span>> {
</span><span class="line ngde">    <span class="hljs-keyword ngde">try</span> {
</span><span class="line ngde">      <span class="hljs-keyword ngde">await</span> <span class="hljs-title function_ ngde">init</span>(<span class="hljs-string ngde">'assets/vizdom/vizdom_ts_bg.wasm'</span>);
</span><span class="line ngde">    } <span class="hljs-keyword ngde">catch</span> (error) {
</span><span class="line ngde">      <span class="hljs-variable language_ ngde">console</span>.<span class="hljs-title function_ ngde">error</span>(<span class="hljs-string ngde">'Failed to initialize WebAssembly:'</span>, error);
</span><span class="line ngde">    }
</span><span class="line ngde">
</span><span class="line ngde">    <span class="hljs-comment ngde">// default layout with one node</span>
</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-title function_ ngde">layout</span>([
</span><span class="line ngde">      {
</span><span class="line ngde">        <span class="hljs-attr ngde">id</span>: crypto.<span class="hljs-title function_ ngde">randomUUID</span>(),
</span><span class="line ngde">        <span class="hljs-attr ngde">point</span>: { <span class="hljs-attr ngde">x</span>: <span class="hljs-number ngde">0</span>, <span class="hljs-attr ngde">y</span>: <span class="hljs-number ngde">0</span> },
</span><span class="line ngde">        <span class="hljs-attr ngde">type</span>: <span class="hljs-string ngde">'html-template'</span>,
</span><span class="line ngde">        <span class="hljs-attr ngde">data</span>: {
</span><span class="line ngde">          <span class="hljs-attr ngde">color</span>: <span class="hljs-title function_ ngde">randomHex</span>(),
</span><span class="line ngde">        },
</span><span class="line ngde">        <span class="hljs-attr ngde">draggable</span>: <span class="hljs-literal ngde">false</span>,
</span><span class="line ngde">      },
</span><span class="line ngde">    ]);
</span><span class="line ngde">  }
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-title function_ ngde">onNodeClick</span>(<span class="hljs-params ngde">node: <a href="/api/ngx-vflow/type-aliases/Node" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">Node</a></span>) {
</span><span class="line ngde">    <span class="hljs-keyword ngde">const</span> newNodeId = crypto.<span class="hljs-title function_ ngde">randomUUID</span>();
</span><span class="line ngde">
</span><span class="line ngde">    <span class="hljs-keyword ngde">const</span> <span class="hljs-attr ngde">nodes</span>: <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/type-aliases/Node" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">Node</a></span>[] = [
</span><span class="line ngde">      ...<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-title function_ ngde">nodes</span>(),
</span><span class="line ngde">      {
</span><span class="line ngde">        <span class="hljs-attr ngde">id</span>: newNodeId,
</span><span class="line ngde">        <span class="hljs-attr ngde">point</span>: { <span class="hljs-attr ngde">x</span>: <span class="hljs-number ngde">0</span>, <span class="hljs-attr ngde">y</span>: <span class="hljs-number ngde">0</span> },
</span><span class="line ngde">        <span class="hljs-attr ngde">type</span>: <span class="hljs-string ngde">'html-template'</span>,
</span><span class="line ngde">        <span class="hljs-attr ngde">draggable</span>: <span class="hljs-literal ngde">false</span>,
</span><span class="line ngde">        <span class="hljs-attr ngde">data</span>: {
</span><span class="line ngde">          <span class="hljs-attr ngde">color</span>: <span class="hljs-title function_ ngde">randomHex</span>(),
</span><span class="line ngde">        },
</span><span class="line ngde">      },
</span><span class="line ngde">    ];
</span><span class="line ngde">
</span><span class="line ngde">    <span class="hljs-keyword ngde">const</span> <span class="hljs-attr ngde">edges</span>: <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/interfaces/Edge" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Edge</a></span>[] = [
</span><span class="line ngde">      ...<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-title function_ ngde">edges</span>(),
</span><span class="line ngde">      {
</span><span class="line ngde">        <span class="hljs-attr ngde">source</span>: node.<span class="hljs-property ngde">id</span>,
</span><span class="line ngde">        <span class="hljs-attr ngde">target</span>: newNodeId,
</span><span class="line ngde">        <span class="hljs-attr ngde">id</span>: <span class="hljs-string ngde">\`<span class="hljs-subst ngde">\${node.id}</span> -> <span class="hljs-subst ngde">\${newNodeId}</span>\`</span>,
</span><span class="line ngde">        <span class="hljs-attr ngde">curve</span>: <span class="hljs-string ngde">'smooth-step'</span>,
</span><span class="line ngde">      },
</span><span class="line ngde">    ];
</span><span class="line ngde">
</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-title function_ ngde">layout</span>(nodes, edges);
</span><span class="line ngde">  }
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-keyword ngde">protected</span> <span class="hljs-title function_ ngde">fitView</span>(<span class="hljs-params ngde"></span>) {
</span><span class="line ngde">    <span class="hljs-comment ngde">// do not fit when there is initial node</span>
</span><span class="line ngde">    <span class="hljs-keyword ngde">if</span> (<span class="hljs-variable language_ ngde">this</span>.<span class="hljs-title function_ ngde">nodes</span>().<span class="hljs-property ngde">length</span> > <span class="hljs-number ngde">1</span>) {
</span><span class="line ngde">      <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-title function_ ngde">vflow</span>().<span class="hljs-title function_ ngde">fitView</span>({ <span class="hljs-attr ngde">duration</span>: <span class="hljs-number ngde">750</span> });
</span><span class="line ngde">    }
</span><span class="line ngde">  }
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-comment ngde">/**</span>
</span><span class="line ngde"><span class="hljs-comment ngde">   * Method that responsible to layout and render passed nodes and edges</span>
</span><span class="line ngde"><span class="hljs-comment ngde">   */</span>
</span><span class="line ngde">  <span class="hljs-keyword ngde">private</span> <span class="hljs-title function_ ngde">layout</span>(<span class="hljs-params ngde">nodesToLayout: <a href="/api/ngx-vflow/type-aliases/Node" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">Node</a>[], edgesToLayout: <a href="/api/ngx-vflow/interfaces/Edge" class="ng-doc-code-anchor ngde" data-link-type="Interface" class="ngde">Edge</a>[] = []</span>) {
</span><span class="line ngde">    <span class="hljs-keyword ngde">const</span> graph = <span class="hljs-keyword ngde">new</span> <span class="hljs-title class_ ngde">DirectedGraph</span>({
</span><span class="line ngde">      <span class="hljs-attr ngde">layout</span>: {
</span><span class="line ngde">        <span class="hljs-attr ngde">margin_x</span>: <span class="hljs-number ngde">75</span>,
</span><span class="line ngde">      },
</span><span class="line ngde">    });
</span><span class="line ngde">
</span><span class="line ngde">    <span class="hljs-comment ngde">// DirectedGraph not provide VErtexRef ids so we need to store it somewhere</span>
</span><span class="line ngde">    <span class="hljs-comment ngde">// for later access</span>
</span><span class="line ngde">    <span class="hljs-keyword ngde">const</span> vertices = <span class="hljs-keyword ngde">new</span> <span class="hljs-title class_ ngde">Map</span>&#x3C;<span class="hljs-built_in ngde">string</span>, <span class="hljs-title class_ ngde">VertexRef</span>>();
</span><span class="line ngde">    <span class="hljs-keyword ngde">const</span> nodes = <span class="hljs-keyword ngde">new</span> <span class="hljs-title class_ ngde">Map</span>&#x3C;<span class="hljs-built_in ngde">string</span>, <span class="hljs-title class_ ngde"><a href="/api/ngx-vflow/type-aliases/Node" class="ng-doc-code-anchor ngde" data-link-type="TypeAlias" class="ngde">Node</a></span>>();
</span><span class="line ngde">
</span><span class="line ngde">    nodesToLayout.<span class="hljs-title function_ ngde">forEach</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">n</span>) =></span> {
</span><span class="line ngde">      <span class="hljs-keyword ngde">const</span> v = graph.<span class="hljs-title function_ ngde">new_vertex</span>(
</span><span class="line ngde">        {
</span><span class="line ngde">          <span class="hljs-comment ngde">// For now we only can use static sized nodes</span>
</span><span class="line ngde">          <span class="hljs-attr ngde">layout</span>: {
</span><span class="line ngde">            <span class="hljs-attr ngde">shape_w</span>: <span class="hljs-number ngde">150</span>,
</span><span class="line ngde">            <span class="hljs-attr ngde">shape_h</span>: <span class="hljs-number ngde">100</span>,
</span><span class="line ngde">          },
</span><span class="line ngde">          <span class="hljs-attr ngde">render</span>: {
</span><span class="line ngde">            <span class="hljs-attr ngde">id</span>: n.<span class="hljs-property ngde">id</span>,
</span><span class="line ngde">          },
</span><span class="line ngde">        },
</span><span class="line ngde">        {
</span><span class="line ngde">          <span class="hljs-attr ngde">compute_bounding_box</span>: <span class="hljs-literal ngde">false</span>,
</span><span class="line ngde">        },
</span><span class="line ngde">      );
</span><span class="line ngde">
</span><span class="line ngde">      vertices.<span class="hljs-title function_ ngde">set</span>(n.<span class="hljs-property ngde">id</span>, v);
</span><span class="line ngde">      nodes.<span class="hljs-title function_ ngde">set</span>(n.<span class="hljs-property ngde">id</span>, n);
</span><span class="line ngde">    });
</span><span class="line ngde">
</span><span class="line ngde">    edgesToLayout.<span class="hljs-title function_ ngde">forEach</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">e</span>) =></span> {
</span><span class="line ngde">      graph.<span class="hljs-title function_ ngde">new_edge</span>(vertices.<span class="hljs-title function_ ngde">get</span>(e.<span class="hljs-property ngde">source</span>)!, vertices.<span class="hljs-title function_ ngde">get</span>(e.<span class="hljs-property ngde">target</span>)!);
</span><span class="line ngde">    });
</span><span class="line ngde">
</span><span class="line ngde">    <span class="hljs-comment ngde">// Compute layout with vizdom internal algorythm</span>
</span><span class="line ngde">    <span class="hljs-keyword ngde">const</span> layout = graph.<span class="hljs-title function_ ngde">layout</span>().<span class="hljs-title function_ ngde">to_json</span>().<span class="hljs-title function_ ngde">to_obj</span>();
</span><span class="line ngde">
</span><span class="line ngde">    <span class="hljs-comment ngde">// Render nodes and edges based on this layout</span>
</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">nodes</span>.<span class="hljs-title function_ ngde">set</span>(
</span><span class="line ngde">      layout.<span class="hljs-property ngde">nodes</span>.<span class="hljs-title function_ ngde">map</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">n</span>) =></span> {
</span><span class="line ngde">        <span class="hljs-keyword ngde">return</span> {
</span><span class="line ngde">          ...nodes.<span class="hljs-title function_ ngde">get</span>(n.<span class="hljs-property ngde">id</span>)!,
</span><span class="line ngde">          <span class="hljs-attr ngde">id</span>: n.<span class="hljs-property ngde">id</span>,
</span><span class="line ngde">          <span class="hljs-attr ngde">point</span>: {
</span><span class="line ngde">            <span class="hljs-attr ngde">x</span>: n.<span class="hljs-property ngde">x</span>,
</span><span class="line ngde">            <span class="hljs-attr ngde">y</span>: n.<span class="hljs-property ngde">y</span>,
</span><span class="line ngde">          },
</span><span class="line ngde">        };
</span><span class="line ngde">      }),
</span><span class="line ngde">    );
</span><span class="line ngde">
</span><span class="line ngde">    <span class="hljs-variable language_ ngde">this</span>.<span class="hljs-property ngde">edges</span>.<span class="hljs-title function_ ngde">set</span>(edgesToLayout);
</span><span class="line ngde">  }
</span><span class="line ngde">}
</span><span class="line ngde">
</span><span class="line ngde"><span class="hljs-keyword ngde">function</span> <span class="hljs-title function_ ngde">randomHex</span>(<span class="hljs-params ngde"></span>) {
</span><span class="line ngde">  <span class="hljs-keyword ngde">const</span> hexValues = [<span class="hljs-number ngde">0</span>, <span class="hljs-number ngde">1</span>, <span class="hljs-number ngde">2</span>, <span class="hljs-number ngde">3</span>, <span class="hljs-number ngde">4</span>, <span class="hljs-number ngde">5</span>, <span class="hljs-number ngde">6</span>, <span class="hljs-number ngde">7</span>, <span class="hljs-number ngde">8</span>, <span class="hljs-number ngde">9</span>, <span class="hljs-string ngde">'A'</span>, <span class="hljs-string ngde">'B'</span>, <span class="hljs-string ngde">'C'</span>, <span class="hljs-string ngde">'D'</span>, <span class="hljs-string ngde">'E'</span>, <span class="hljs-string ngde">'F'</span>];
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-keyword ngde">let</span> hex = <span class="hljs-string ngde">'#'</span>;
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-keyword ngde">for</span> (<span class="hljs-keyword ngde">let</span> i = <span class="hljs-number ngde">0</span>; i &#x3C; <span class="hljs-number ngde">6</span>; i++) {
</span><span class="line ngde">    <span class="hljs-keyword ngde">const</span> index = <span class="hljs-title class_ ngde">Math</span>.<span class="hljs-title function_ ngde">floor</span>(<span class="hljs-title class_ ngde">Math</span>.<span class="hljs-title function_ ngde">random</span>() * hexValues.<span class="hljs-property ngde">length</span>);
</span><span class="line ngde">    hex += hexValues[index];
</span><span class="line ngde">  }
</span><span class="line ngde">
</span><span class="line ngde">  <span class="hljs-keyword ngde">return</span> hex;
</span><span class="line ngde">}
</span></code></pre>`},{title:"HTML",code:`<pre class="ngde hljs"><code lang="html" class="hljs language-html code-lines ngde"><span class="line ngde"><span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">vflow</span> <span class="hljs-attr ngde">view</span>=<span class="hljs-string ngde">"auto"</span> [<span class="hljs-attr ngde">minZoom</span>]=<span class="hljs-string ngde">"0.1"</span> [<span class="hljs-attr ngde">nodes</span>]=<span class="hljs-string ngde">"nodes()"</span> [<span class="hljs-attr ngde">edges</span>]=<span class="hljs-string ngde">"edges()"</span> (<span class="hljs-attr ngde">onNodesChange.add</span>)=<span class="hljs-string ngde">"fitView()"</span>></span>
</span><span class="line ngde">  <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">ng-template</span> <span class="hljs-attr ngde">let-ctx</span> <span class="hljs-attr ngde">nodeHtml</span>></span>
</span><span class="line ngde">    <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">div</span> <span class="hljs-attr ngde">class</span>=<span class="hljs-string ngde">"custom-node"</span> [<span class="hljs-attr ngde">style.background-color</span>]=<span class="hljs-string ngde">"ctx.node.data.color"</span> (<span class="hljs-attr ngde">click</span>)=<span class="hljs-string ngde">"onNodeClick(ctx.node)"</span>></span>
</span><span class="line ngde">      {{ ctx.node.data.color }}
</span><span class="line ngde">
</span><span class="line ngde">      <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">handle</span> <span class="hljs-attr ngde">type</span>=<span class="hljs-string ngde">"source"</span> <span class="hljs-attr ngde">position</span>=<span class="hljs-string ngde">"bottom"</span> /></span>
</span><span class="line ngde">      <span class="hljs-tag ngde">&#x3C;<span class="hljs-name ngde">handle</span> <span class="hljs-attr ngde">type</span>=<span class="hljs-string ngde">"target"</span> <span class="hljs-attr ngde">position</span>=<span class="hljs-string ngde">"top"</span> /></span>
</span><span class="line ngde">    <span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">div</span>></span>
</span><span class="line ngde">  <span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">ng-template</span>></span>
</span><span class="line ngde"><span class="hljs-tag ngde">&#x3C;/<span class="hljs-name ngde">vflow</span>></span>
</span></code></pre>`},{title:"SCSS",code:`<pre class="ngde hljs"><code lang="scss" class="hljs language-scss code-lines ngde"><span class="line ngde"><span class="hljs-selector-pseudo ngde">:host</span> {
</span><span class="line ngde">  <span class="hljs-attribute ngde">width</span>: <span class="hljs-number ngde">100%</span>;
</span><span class="line ngde">  <span class="hljs-attribute ngde">height</span>: <span class="hljs-number ngde">100%</span>;
</span><span class="line ngde">}
</span><span class="line ngde">
</span><span class="line ngde"><span class="hljs-selector-class ngde">.custom-node</span> {
</span><span class="line ngde">  <span class="hljs-attribute ngde">width</span>: <span class="hljs-number ngde">100px</span>;
</span><span class="line ngde">  <span class="hljs-attribute ngde">height</span>: <span class="hljs-number ngde">50px</span>;
</span><span class="line ngde">  <span class="hljs-attribute ngde">background</span>: <span class="hljs-number ngde">#bbe1fa</span>;
</span><span class="line ngde">  <span class="hljs-attribute ngde">border</span>: <span class="hljs-number ngde">1px</span> solid gray;
</span><span class="line ngde">  <span class="hljs-attribute ngde">border-radius</span>: <span class="hljs-number ngde">5px</span>;
</span><span class="line ngde">  <span class="hljs-attribute ngde">display</span>: flex;
</span><span class="line ngde">  <span class="hljs-attribute ngde">align-items</span>: center;
</span><span class="line ngde">  <span class="hljs-attribute ngde">justify-content</span>: center;
</span><span class="line ngde">}
</span></code></pre>`}]},Rn=Qn;var Yn='<h1 id="vizdom-layout" class="ngde">Vizdom layout<a title="Link to heading" class="ng-doc-header-link ngde" href="/workshops/layout/vizdom-layout#vizdom-layout"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1><p class="ngde">This is an example of using the <a href="https://github.com/vizdom-dev/vizdom-ts" class="ngde">vizdom</a> library for computing layout.</p><ng-doc-demo-pane componentname="VizdomLayoutDemoComponent" indexable="false" class="ngde"><div id="options" class="ngde">{}</div></ng-doc-demo-pane>',Zn=(()=>{class e extends H{constructor(){super(),this.routePrefix="",this.pageType="guide",this.pageContent=Yn,this.editSourceFileUrl="https://github.com/artem-mangilev/ngx-vflow/edit/main/projects/ngx-vflow-demo/src/app/categories/workshops/categories/layout/pages/vizdom-layout/index.md?message=docs(vizdom-layout): describe your changes here...",this.page=V,this.demoAssets=Rn}static{this.\u0275fac=function(a){return new(a||e)}}static{this.\u0275cmp=E({type:e,selectors:[["ng-doc-page-workshops-layout-vizdom-layout"]],standalone:!0,features:[un([{provide:H,useExisting:e},Nn,V.providers??[]]),tn,L],decls:1,vars:0,template:function(a,t){a&1&&M(0,"ng-doc-page")},dependencies:[fn],encapsulation:2,changeDetection:0})}}return e})(),Jn=[T(O({},(0,Vn.isRoute)(V.route)?V.route:{}),{path:"",component:Zn,title:"Vizdom layout"})],Fs=Jn;export{Zn as DynamicComponent,Fs as default};
