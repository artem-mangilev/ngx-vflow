[
  {
    "breadcrumbs": [
      "Workshops",
      "Drag and drop nodes"
    ],
    "pageType": "guide",
    "title": "Drag and drop nodes",
    "section": "Drag and drop nodes",
    "route": "/workshops/drag-and-drop-nodes",
    "fragment": "drag-and-drop-nodes",
    "content": "This workshop will show you how to implement dynamic node creation with basic drag and drop implementation. This implementation uses documentPointToFlowPoint() method of VflowComponent that translates document coordinate to vflow coordinate."
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "How node sizing works"
    ],
    "pageType": "guide",
    "title": "How node sizing works",
    "section": "How node sizing works",
    "route": "/getting-started/how-node-sizing-works",
    "fragment": "how-node-sizing-works",
    "content": "This topic needs some clarification due to the design decisions behind the library. The library renders the flow by combining two technologies: SVG, which is responsible for rendering curves, managing zoom, pan, and other tasks that SVG handles well.HTML (with CSS), which is used to create the content for the nodes, allowing front-end engineers to design dynamic and visually appealing UIs more easily than with SVG. The link between these two technologies is the "
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "How node sizing works"
    ],
    "pageType": "guide",
    "title": "How node sizing works",
    "section": "How node sizing works",
    "route": "/getting-started/how-node-sizing-works",
    "fragment": "how-node-sizing-works",
    "content": " element, which enables HTML to be rendered inside SVG. The diagram below illustrates how this element interacts with its content."
  },
  {
    "breadcrumbs": [
      "Workshops",
      "Delete selected"
    ],
    "pageType": "guide",
    "title": "Delete selected",
    "section": "Delete selected",
    "route": "/workshops/delete-selected",
    "fragment": "delete-selected",
    "content": "This workshop will show you how to implement deletion of nodes and edges."
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Dynamic vs Static nodes"
    ],
    "pageType": "guide",
    "title": "Dynamic vs Static nodes",
    "section": "Dynamic vs Static nodes",
    "route": "/getting-started/dynamic-vs-static-nodes",
    "fragment": "dynamic-vs-static-nodes",
    "content": "You can't mix Node and DynamicNode in a single array so you have to choose what you want to use"
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Dynamic vs Static nodes"
    ],
    "pageType": "guide",
    "title": "Dynamic vs Static nodes",
    "section": "Dynamic vs Static nodes",
    "route": "/getting-started/dynamic-vs-static-nodes",
    "fragment": "dynamic-vs-static-nodes",
    "content": "For more complex scenarios, you might need to have a fine-grained control on specific nodes. In such cases, you can use DynamicNode, which is essentially a Node with properties with same names but with a WritableSignal type. This offers the following benefits: Granular updates to specific nodes with efficient rendering (only the affected node is re-rendered).Access to the updated state of a node directly (without listening events). For instance, if a point changes due to drag-and-drop, the node's point() signal will reflect the new position.Additional benefits of signals, such as executing actions within an effect when a dynamic property changes."
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Dynamic vs Static nodes"
    ],
    "pageType": "guide",
    "title": "Dynamic vs Static nodes",
    "section": "Dynamic vs Static nodes",
    "route": "/getting-started/dynamic-vs-static-nodes",
    "fragment": "dynamic-vs-static-nodes",
    "content": "Not all properties of DynamicNode are WritableSignal, for instance an id must be static, so it remains of a regular string type"
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Dynamic vs Static nodes"
    ],
    "pageType": "guide",
    "title": "Dynamic vs Static nodes",
    "section": "Code example",
    "route": "/getting-started/dynamic-vs-static-nodes",
    "fragment": "code-example",
    "content": "If you want to change a node's position programmatically, you would:"
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Dynamic vs Static nodes"
    ],
    "pageType": "guide",
    "title": "Dynamic vs Static nodes",
    "section": "See also",
    "route": "/getting-started/dynamic-vs-static-nodes",
    "fragment": "see-also",
    "content": "D3 Force"
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Migrations"
    ],
    "pageType": "guide",
    "title": "Migrations",
    "section": "Migration to >= v1.0",
    "route": "/getting-started/migration",
    "fragment": "migration-to--v10",
    "content": "remove imports of VflowModule and use Vflow instead (Vflow contains all public standalone components and directives).remove usage of the computeLayersOnInit setting from the Optimization interfaceremove usage of the handlePositions input in the VflowComponentfor classes extending CustomNodeComponent and CustomDynamicNodeComponent:replace this.node to this.node() due to signal input internal migration"
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Principles"
    ],
    "pageType": "guide",
    "title": "Principles",
    "section": "Principles",
    "route": "/getting-started/principles",
    "fragment": "principles",
    "content": "This page contains a list of general principles that impact feature implementation. No hidden mutations of your data. For example, the library does not modify any of the Node or Edge objects you pass in as inputs. Instead, it creates internal models around these entities and operates on them. Any changes to the passed entities can be observed through events.This principle also implies that you are responsible for managing invalid data. For instance, if you delete a node, the edges corresponding to this node will not be deleted automatically. However, the library will notify you about detached edges so that you can easily delete them."
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Roadmap"
    ],
    "pageType": "guide",
    "title": "Roadmap",
    "section": "Roadmap",
    "route": "/getting-started/roadmap",
    "fragment": "roadmap",
    "content": "This is a roadmap for ngx-vflow: improve consistency across browsers (mainly appeals to Safari)custom SVG shapesfloating edgesplugin systemnode rotationUI controls for flowsupport for more layout engines (Dagree, etc.)modal system for context menulazy loading nodes based on current viewport (decrease initial bundle)HTML-based renderer as alternative to current SVG-based rendererExperimental canvas/webgl renderer for insane performance"
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "What is ngx-vflow"
    ],
    "pageType": "guide",
    "title": "What is ngx-vflow",
    "section": "What is ngx-vflow",
    "route": "/getting-started/what-is-ngx-vflow",
    "fragment": "what-is-ngx-vflow",
    "content": "ngx-vflow is an Angular library for creating node-based applications. It aims to assist you in building anything from a static diagram to a visual editor. You can utilize the default design or apply your own by customizing everything using familiar technologies."
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "What is ngx-vflow"
    ],
    "pageType": "guide",
    "title": "What is ngx-vflow",
    "section": "Main features",
    "route": "/getting-started/what-is-ngx-vflow",
    "fragment": "main-features",
    "content": "Easy to use: Just describe your flow with a simple API; all of the heavy lifting, such as dragging, zooming, and curve math, is handled by the library for you. Customizable: There is a default design for basic usage, and you can also customize nodes with good old HTML and CSS. Other entities such as edges, connection lines, and handles are also customizable, but it will require a little SVG knowledge. Great performance: Angular signals are the heart and soul of ngx-vflow, which are performant by default, so you shouldn't worry about performance even with large flows. Zoneless: Does not require zone.js"
  },
  {
    "breadcrumbs": [
      "Testing",
      "Unit testing component nodes"
    ],
    "pageType": "guide",
    "title": "Unit testing component nodes",
    "section": "Unit testing component nodes",
    "route": "/testing/unit-testing-component-nodes",
    "fragment": "unit-testing-component-nodes",
    "content": "To simplify writing isolated tests for component nodes, you can use the provideCustomNodeMocks function. This helps prevent dependency injection (DI) errors that occur when a node is used outside the scope of the VflowComponent."
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection validation"
    ],
    "pageType": "guide",
    "title": "Connection validation",
    "section": "Connection validation",
    "route": "/features/connection-validation",
    "fragment": "connection-validation",
    "content": "ngx-vflow supports real-time synchronous validation of connections. Validation occurs when a user attempts to create a new edge. By default, every connection is valid, but you can provide a ConnectionSettings with a validatior callback where you specify the validation logic. For example, in this case, validation only passes connections from node 1 to node 2. If the validator returns false, the (onConnect) event won't be triggered because there is no valid connection."
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "You can customize your edges. To achieve this, follow these steps:"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "Change the edge type to "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "template"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "Create an "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "ng-template"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": " with the "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "edge"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": " selector inside "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "vflow"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "Create an SVG path which you will customize In the "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "ng-template"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": ", the library provides "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "let-ctx"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": " with important data for you, such as the "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "path"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": " signal with current path. Additionally, the "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "edge"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": " field contains current edge from one the "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "[edges]"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": ", from which you can retrieve custom "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "data"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": ". Furthermore, you can access "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "markerStart"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": " and "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "markerEnd"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": " signals with markers for current "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "edge"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Custom edges",
    "route": "/features/custom-edges",
    "fragment": "custom-edges",
    "content": "."
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom edges"
    ],
    "pageType": "guide",
    "title": "Custom edges",
    "section": "Context",
    "route": "/features/custom-edges",
    "fragment": "context",
    "content": "It's tricky to infer type for let-ctx, so here is an interface with available fields for this context."
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": "Edges are not creating automatically. To create a new edge, follow these steps:"
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": "Create handler to the "
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": "(onConnect)"
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": " event This handler accepts a "
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": "Connection"
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": " argument. "
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": "Connection"
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": " is similar to an "
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": "Edge"
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": ", but it doesn't exists in the flow, you need to \"convert\" it into a new "
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": "Edge"
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": "Update the "
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": "Edge[]"
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": " list with the new edge that was created from the "
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": "Connection"
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Connection",
    "route": "/features/connection",
    "fragment": "connection",
    "content": "."
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Strict connections",
    "route": "/features/connection",
    "fragment": "strict-connections",
    "content": "In the default 'strict' mode of ConnectionSettings, edges are created from connections with strict adherence to the source and target types of the HandleComponent. This means connections can only be established in one direction based on these properties."
  },
  {
    "breadcrumbs": [
      "Features",
      "Connection"
    ],
    "pageType": "guide",
    "title": "Connection",
    "section": "Loose connections",
    "route": "/features/connection",
    "fragment": "loose-connections",
    "content": "This is the 'loose' mode of ConnectionSettings, where the flow ignores the handle type and allows any handle to connect with any other handle. In this mode, an id must be provided for the HandleComponent to function correctly."
  },
  {
    "breadcrumbs": [
      "Features",
      "Curves"
    ],
    "pageType": "guide",
    "title": "Curves",
    "section": "Curves",
    "route": "/features/curves",
    "fragment": "curves",
    "content": "It's possible to set Curve for both the edges and connection."
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom background"
    ],
    "pageType": "guide",
    "title": "Custom background",
    "section": "Custom background",
    "route": "/features/custom-background",
    "fragment": "custom-background",
    "content": "You're able to select background for your flow."
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom background"
    ],
    "pageType": "guide",
    "title": "Custom background",
    "section": "Solid color",
    "route": "/features/custom-background",
    "fragment": "solid-color",
    "content": "To select a color, simply pass a color string it to the [background] input."
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom background"
    ],
    "pageType": "guide",
    "title": "Custom background",
    "section": "Dots pattern",
    "route": "/features/custom-background",
    "fragment": "dots-pattern",
    "content": "To make dots pattern, pass an object to the [background] input according to DotsBackground interface"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom background"
    ],
    "pageType": "guide",
    "title": "Custom background",
    "section": "Image background",
    "route": "/features/custom-background",
    "fragment": "image-background",
    "content": "To make an image background, pass an object to the [background] input according to ImageBackground interface"
  },
  {
    "breadcrumbs": [
      "Features",
      "Default edges"
    ],
    "pageType": "guide",
    "title": "Default edges",
    "section": "Default edges",
    "route": "/features/default-edges",
    "fragment": "default-edges",
    "content": "You can link nodes with edges. All you need to do is to create another Edge[] array and pass it to the vflow component. Each edge contains the id of the source and target nodes, and each edge must have its own id."
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom handles"
    ],
    "pageType": "guide",
    "title": "Custom handles",
    "section": "Custom handles",
    "route": "/features/custom-handles",
    "fragment": "custom-handles",
    "content": "You can pass a [template] to HandleComponent with custom handle."
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom handles"
    ],
    "pageType": "guide",
    "title": "Custom handles",
    "section": "Custom handles",
    "route": "/features/custom-handles",
    "fragment": "custom-handles",
    "content": "I't important to note that template must be made with SVG."
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom handles"
    ],
    "pageType": "guide",
    "title": "Custom handles",
    "section": "Custom handles",
    "route": "/features/custom-handles",
    "fragment": "custom-handles",
    "content": "Custom handles are not positioned automatically, but the library provides a useful template context property to position your handle.Custom handles know if validation of ConnectionSettings.validator() has failed or succeeded, so you can use state() signal in let-ctx to add some behavior based on validation result. Refer to this interface for let-ctx when crafting your handle template:"
  },
  {
    "breadcrumbs": [
      "Features",
      "Draggables"
    ],
    "pageType": "guide",
    "title": "Draggables",
    "section": "Disabling",
    "route": "/features/draggables",
    "fragment": "disabling",
    "content": "You can disable draggable behavior on certain Node or DynamicNode by passing false."
  },
  {
    "breadcrumbs": [
      "Features",
      "Draggables"
    ],
    "pageType": "guide",
    "title": "Draggables",
    "section": "Drag handle",
    "route": "/features/draggables",
    "fragment": "drag-handle",
    "content": "You can restrict dragging to a specific part of node, by adding dragHandle directive to this element. It's important to note that if a node contains at least one dragHandle, it can only be dragged from those specific areas where dragHandle was added. Otherwise, the entire node can be dragged, provided the draggable property is set to true."
  },
  {
    "breadcrumbs": [
      "Features",
      "Keyboard shortcuts"
    ],
    "pageType": "guide",
    "title": "Keyboard shortcuts",
    "section": "Keyboard shortcuts",
    "route": "/features/keyboard-shortcuts",
    "fragment": "keyboard-shortcuts",
    "content": "You can use keyboard shortcuts to perform additional actions."
  },
  {
    "breadcrumbs": [
      "Features",
      "Keyboard shortcuts"
    ],
    "pageType": "guide",
    "title": "Keyboard shortcuts",
    "section": "Defaults",
    "route": "/features/keyboard-shortcuts",
    "fragment": "defaults",
    "content": "Action Default key"
  },
  {
    "breadcrumbs": [
      "Features",
      "Keyboard shortcuts"
    ],
    "pageType": "guide",
    "title": "Keyboard shortcuts",
    "section": "Defaults",
    "route": "/features/keyboard-shortcuts",
    "fragment": "defaults",
    "content": "Node multi selection"
  },
  {
    "breadcrumbs": [
      "Features",
      "Keyboard shortcuts"
    ],
    "pageType": "guide",
    "title": "Keyboard shortcuts",
    "section": "Defaults",
    "route": "/features/keyboard-shortcuts",
    "fragment": "defaults",
    "content": "CMD"
  },
  {
    "breadcrumbs": [
      "Features",
      "Keyboard shortcuts"
    ],
    "pageType": "guide",
    "title": "Keyboard shortcuts",
    "section": "Defaults",
    "route": "/features/keyboard-shortcuts",
    "fragment": "defaults",
    "content": " (Mac) or "
  },
  {
    "breadcrumbs": [
      "Features",
      "Keyboard shortcuts"
    ],
    "pageType": "guide",
    "title": "Keyboard shortcuts",
    "section": "Defaults",
    "route": "/features/keyboard-shortcuts",
    "fragment": "defaults",
    "content": "CTRL"
  },
  {
    "breadcrumbs": [
      "Features",
      "Keyboard shortcuts"
    ],
    "pageType": "guide",
    "title": "Keyboard shortcuts",
    "section": "Defaults",
    "route": "/features/keyboard-shortcuts",
    "fragment": "defaults",
    "content": " (Other systems)"
  },
  {
    "breadcrumbs": [
      "Features",
      "Keyboard shortcuts"
    ],
    "pageType": "guide",
    "title": "Keyboard shortcuts",
    "section": "Customization",
    "route": "/features/keyboard-shortcuts",
    "fragment": "customization",
    "content": "To customize the keyboard shortcuts for specific actions, pass a [keyboardShortcuts] input object to the VflowComponent with the following KeyboardShortcuts interface. Here are some key details: The passed object will be merged with the default key combinations.To disable a specific action, pass null for that action.If you want to trigger an action with multiple keys, pass an array of keys. Note: this is not a key combination. For example, if you pass ['ShiftLeft', 'ControlLeft'], the action will be triggered by either ShiftLeft or ControlLeft, but not by pressing both together (ShiftLeft+ControlLeft).You can find the list of available key codes here. In the following example, the default combination for multiSelection is replaced with ['ShiftLeft', 'ShiftRight']."
  },
  {
    "breadcrumbs": [
      "Features",
      "Markers"
    ],
    "pageType": "guide",
    "title": "Markers",
    "section": "Markers",
    "route": "/features/markers",
    "fragment": "markers",
    "content": "You can create markers for both edges and connections. Edges: Specify start and end markers for corresponding parts of the edge. Currently, markers are limited to two types: arrow and arrow-closed.Connections: You can specify an end marker using the marker property in ConnectionSettings."
  },
  {
    "breadcrumbs": [
      "Features",
      "Handling changes"
    ],
    "pageType": "guide",
    "title": "Handling changes",
    "section": "Handling changes",
    "route": "/features/handling-changes",
    "fragment": "handling-changes",
    "content": "You can observe changes in the toasts."
  },
  {
    "breadcrumbs": [
      "Features",
      "Handling changes"
    ],
    "pageType": "guide",
    "title": "Handling changes",
    "section": "Handling changes",
    "route": "/features/handling-changes",
    "fragment": "handling-changes",
    "content": "You can observe various changes in nodes and edges. Types of NodeChanges: position - new node position after drag and dropsize - new node sizeadd - when node was createdremove - when node was removedselect - when node was selected (also triggers for unselected nodes) Types of EdgeChanges: add - when edge was createdremove - when edge was removedselect - when edge was selected (also triggers for unselected edges)detached - when edge became invisible due to the absence of the source or target node. Use this to delete such edges from the edges list There are a several ways to receive these changes:"
  },
  {
    "breadcrumbs": [
      "Features",
      "Handling changes"
    ],
    "pageType": "guide",
    "title": "Handling changes",
    "section": "From (onNodesChange) and (onEdgesChange) outputs",
    "route": "/features/handling-changes",
    "fragment": "from-onnodeschange-and-onedgeschange-outputs",
    "content": "This is a way to get every possible change. Changes came as non empty arrays: (onNodesChange) emits NodeChange[](onEdgesChange) emits EdgeChange[]"
  },
  {
    "breadcrumbs": [
      "Features",
      "Handling changes"
    ],
    "pageType": "guide",
    "title": "Handling changes",
    "section": "From filtered outputs",
    "route": "/features/handling-changes",
    "fragment": "from-filtered-outputs",
    "content": "For your convenience, here is the filtering scheme for changes based on the (onNodesChange) and (onEdgesChange) events: (onNodesChange.[NodeChangeType]) - a list of node changes of a certain type(onNodesChange.[EdgeChangeType]) - a list of edge changes of a certain type(onNodesChange.[NodeChangeType].[Count]) - a list (many) or single (single) node change of a certain type(onEdgesChange.[EdgeChangeType].[Count]) - a list (many) or single (single) edge change of a certain type Where: List of all possible filter outputs:"
  },
  {
    "breadcrumbs": [
      "Features",
      "Labels"
    ],
    "pageType": "guide",
    "title": "Labels",
    "section": "Labels",
    "route": "/features/labels",
    "fragment": "labels",
    "content": "You can attach labels to edges by providing the edgeLabels property to the needed Edges. There are three slots available for labels on an edge: start, center, end. The label is only of the html-template type, so you have to provide "
  },
  {
    "breadcrumbs": [
      "Features",
      "Labels"
    ],
    "pageType": "guide",
    "title": "Labels",
    "section": "Labels",
    "route": "/features/labels",
    "fragment": "labels",
    "content": " inside vflow."
  },
  {
    "breadcrumbs": [
      "Features",
      "Labels"
    ],
    "pageType": "guide",
    "title": "Labels",
    "section": "Context",
    "route": "/features/labels",
    "fragment": "context",
    "content": "You may access some data for label through let-ctx according to this interface."
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Custom nodes",
    "route": "/features/custom-nodes",
    "fragment": "custom-nodes",
    "content": "Be careful with CSS rules applied to node content. Custom nodes are implemented with SVG's foreignObject element, and Safari has issues with some CSS rules inside foreignObject. Therefore, please check this browser when applying complex styling."
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Custom nodes",
    "route": "/features/custom-nodes",
    "fragment": "custom-nodes",
    "content": "This is where things become a lot more interesting. You can create custom nodes with HTML and CSS."
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Template nodes",
    "route": "/features/custom-nodes",
    "fragment": "template-nodes",
    "content": "You can create custom nodes with ng-template Follow these steps to achieve this:"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Template nodes",
    "route": "/features/custom-nodes",
    "fragment": "template-nodes",
    "content": "Set "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Template nodes",
    "route": "/features/custom-nodes",
    "fragment": "template-nodes",
    "content": "type"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Template nodes",
    "route": "/features/custom-nodes",
    "fragment": "template-nodes",
    "content": " of node to "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Template nodes",
    "route": "/features/custom-nodes",
    "fragment": "template-nodes",
    "content": "html-template"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Template nodes",
    "route": "/features/custom-nodes",
    "fragment": "template-nodes",
    "content": "Provide "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Template nodes",
    "route": "/features/custom-nodes",
    "fragment": "template-nodes",
    "content": "ng-template"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Template nodes",
    "route": "/features/custom-nodes",
    "fragment": "template-nodes",
    "content": " with "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Template nodes",
    "route": "/features/custom-nodes",
    "fragment": "template-nodes",
    "content": "nodeHtml"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Template nodes",
    "route": "/features/custom-nodes",
    "fragment": "template-nodes",
    "content": " selector inside "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Template nodes",
    "route": "/features/custom-nodes",
    "fragment": "template-nodes",
    "content": "vflow"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Template nodes",
    "route": "/features/custom-nodes",
    "fragment": "template-nodes",
    "content": "Write your HTML inside this template You can also pass any data with "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Template nodes",
    "route": "/features/custom-nodes",
    "fragment": "template-nodes",
    "content": "data"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Template nodes",
    "route": "/features/custom-nodes",
    "fragment": "template-nodes",
    "content": " field on node, and then get it inside "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Template nodes",
    "route": "/features/custom-nodes",
    "fragment": "template-nodes",
    "content": "ng-template"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Component nodes",
    "route": "/features/custom-nodes",
    "fragment": "component-nodes",
    "content": "Another approach is to render nodes from components. Its benefits: type-safe node data accessgood for complex flows with many different node types Its limitations it's harder to manage events because such nodes are rendered dynamically How to create component node:"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Component nodes",
    "route": "/features/custom-nodes",
    "fragment": "component-nodes",
    "content": "Create a regular angular standalone component Extend with "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Component nodes",
    "route": "/features/custom-nodes",
    "fragment": "component-nodes",
    "content": "CustomNodeComponent"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Component nodes",
    "route": "/features/custom-nodes",
    "fragment": "component-nodes",
    "content": " (please see the reference of this base component to get an idea of what fields you could use in your custom component node), otherwise it won't work! Pass your data interface to generic of "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Component nodes",
    "route": "/features/custom-nodes",
    "fragment": "component-nodes",
    "content": "CustomNodeComponent"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Component nodes",
    "route": "/features/custom-nodes",
    "fragment": "component-nodes",
    "content": " to use in component. This "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Component nodes",
    "route": "/features/custom-nodes",
    "fragment": "component-nodes",
    "content": "data"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Component nodes",
    "route": "/features/custom-nodes",
    "fragment": "component-nodes",
    "content": " comes from "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Component nodes",
    "route": "/features/custom-nodes",
    "fragment": "component-nodes",
    "content": "Node"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Component nodes",
    "route": "/features/custom-nodes",
    "fragment": "component-nodes",
    "content": " definition Use your new component in "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Component nodes",
    "route": "/features/custom-nodes",
    "fragment": "component-nodes",
    "content": "type"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Component nodes",
    "route": "/features/custom-nodes",
    "fragment": "component-nodes",
    "content": " field of "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Component nodes",
    "route": "/features/custom-nodes",
    "fragment": "component-nodes",
    "content": "Node"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Component nodes",
    "route": "/features/custom-nodes",
    "fragment": "component-nodes",
    "content": ". Library will render your node for you"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Handling events",
    "route": "/features/custom-nodes",
    "fragment": "handling-events",
    "content": "This is an experimental API"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Handling events",
    "route": "/features/custom-nodes",
    "fragment": "handling-events",
    "content": "There is a (onComponentNodeEvent) event on VflowComponent. Here is how it works:"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Handling events",
    "route": "/features/custom-nodes",
    "fragment": "handling-events",
    "content": "It accumulates every "
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Handling events",
    "route": "/features/custom-nodes",
    "fragment": "handling-events",
    "content": "EventEmitter"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Handling events",
    "route": "/features/custom-nodes",
    "fragment": "handling-events",
    "content": " of every component node of your flow It emits on every emit of those emitters"
  },
  {
    "breadcrumbs": [
      "Features",
      "Custom nodes"
    ],
    "pageType": "guide",
    "title": "Custom nodes",
    "section": "Handling events",
    "route": "/features/custom-nodes",
    "fragment": "handling-events",
    "content": "The shape of this accumulator-event contains following useful info: The Library also includes ComponentNodeEvent helper type to get type-safe event, where you just need to pass an array of your custom components in generic, and this type will infer proper types for eventName and eventPayload:"
  },
  {
    "breadcrumbs": [
      "Features",
      "Default nodes"
    ],
    "pageType": "guide",
    "title": "Default nodes",
    "section": "Default nodes",
    "route": "/features/default-nodes",
    "fragment": "default-nodes",
    "content": "To get started, you just need to provide nodes array to vflow component."
  },
  {
    "breadcrumbs": [
      "Features",
      "Multiple connection points"
    ],
    "pageType": "guide",
    "title": "Multiple connection points",
    "section": "Multiple connection points",
    "route": "/features/multiple-connection-points",
    "fragment": "multiple-connection-points",
    "content": "Custom components provide the ability to control handles and their positions. All you need to do is take HandleComponent from library and place it somewhere in your custom node. This component automatically computes its position based on parent element's position."
  },
  {
    "breadcrumbs": [
      "Features",
      "Minimap"
    ],
    "pageType": "guide",
    "title": "Minimap",
    "section": "Minimap",
    "route": "/features/minimap",
    "fragment": "minimap",
    "content": "The library includes a minimap that offers an overview of the entire flow. To enable it, simply add a "
  },
  {
    "breadcrumbs": [
      "Features",
      "Minimap"
    ],
    "pageType": "guide",
    "title": "Minimap",
    "section": "Minimap",
    "route": "/features/minimap",
    "fragment": "minimap",
    "content": " component as a direct child of "
  },
  {
    "breadcrumbs": [
      "Features",
      "Minimap"
    ],
    "pageType": "guide",
    "title": "Minimap",
    "section": "Minimap",
    "route": "/features/minimap",
    "fragment": "minimap",
    "content": ". For customization options, see the available inputs in MiniMapComponent."
  },
  {
    "breadcrumbs": [
      "Features",
      "Minimap"
    ],
    "pageType": "guide",
    "title": "Minimap",
    "section": "Minimap",
    "route": "/features/minimap",
    "fragment": "minimap",
    "content": "Planned enhancements for the minimap: Develop an API to customize mini-node appearance (e.g., color, stroke)Enable panning and zooming within the minimapRender mini-nodes to visually match main nodes, using a simplified DOM structure to optimize performance"
  },
  {
    "breadcrumbs": [
      "Features",
      "Selecting"
    ],
    "pageType": "guide",
    "title": "Selecting",
    "section": "Selecting",
    "route": "/features/selecting",
    "fragment": "selecting",
    "content": "Nodes and edges can be selected!"
  },
  {
    "breadcrumbs": [
      "Features",
      "Selecting"
    ],
    "pageType": "guide",
    "title": "Selecting",
    "section": "Selecting",
    "route": "/features/selecting",
    "fragment": "selecting",
    "content": "Default nodes and edges are selectable by default; just click and see that one is selected. Custom nodes and edges are not selectable by default, you need to mark the element that triggers selection with the "
  },
  {
    "breadcrumbs": [
      "Features",
      "Selecting"
    ],
    "pageType": "guide",
    "title": "Selecting",
    "section": "Selecting",
    "route": "/features/selecting",
    "fragment": "selecting",
    "content": "selectable"
  },
  {
    "breadcrumbs": [
      "Features",
      "Selecting"
    ],
    "pageType": "guide",
    "title": "Selecting",
    "section": "Selecting",
    "route": "/features/selecting",
    "fragment": "selecting",
    "content": " directive."
  },
  {
    "breadcrumbs": [
      "Features",
      "Selecting"
    ],
    "pageType": "guide",
    "title": "Selecting",
    "section": "Selecting",
    "route": "/features/selecting",
    "fragment": "selecting",
    "content": "Both custom nodes and edges have the selected() signal in their template context for applying styles based on this state."
  },
  {
    "breadcrumbs": [
      "Features",
      "Selecting"
    ],
    "pageType": "guide",
    "title": "Selecting",
    "section": "Disable selecting",
    "route": "/features/selecting",
    "fragment": "disable-selecting",
    "content": "You can pass [entitiesSelectable]=\"false\" to "
  },
  {
    "breadcrumbs": [
      "Features",
      "Selecting"
    ],
    "pageType": "guide",
    "title": "Selecting",
    "section": "Disable selecting",
    "route": "/features/selecting",
    "fragment": "disable-selecting",
    "content": " if you want disable selecting for whole flow."
  },
  {
    "breadcrumbs": [
      "Features",
      "Node toolbar"
    ],
    "pageType": "guide",
    "title": "Node toolbar",
    "section": "Node toolbar",
    "route": "/features/node-toolbar",
    "fragment": "node-toolbar",
    "content": "You can add a NodeToolbarComponent to your node. The content of this component is automatically positioned near one side of the node, based on the value of the position input."
  },
  {
    "breadcrumbs": [
      "Features",
      "Subflows"
    ],
    "pageType": "guide",
    "title": "Subflows",
    "section": "Subflows",
    "route": "/features/subflows",
    "fragment": "subflows",
    "content": "A subflow is a node that can contain child nodes. Key things about subflows: To create a subflow, you need to use a default-group or template-group type on Node or DynamicNode.To associate a node with a subflow, set the parentId to the ID of the subflow.Nodes within a subflow have coordinates relative to that subflow.A subflow is itself a node, so it can act as a source or a target (this functionality is available only for template-group subflows).Use the groupNode directive on an ng-template to define your custom subflow. While a custom subflow can theoretically be any SVG structure, it's recommended to use the "
  },
  {
    "breadcrumbs": [
      "Features",
      "Subflows"
    ],
    "pageType": "guide",
    "title": "Subflows",
    "section": "Subflows",
    "route": "/features/subflows",
    "fragment": "subflows",
    "content": " element."
  },
  {
    "breadcrumbs": [
      "Features",
      "Subflows"
    ],
    "pageType": "guide",
    "title": "Subflows",
    "section": "See also",
    "route": "/features/subflows",
    "fragment": "see-also",
    "content": "DefaultGroupNodeTemplateGroupNodeDefaultDynamicGroupNodeTemplateDynamicGroupNode"
  },
  {
    "breadcrumbs": [
      "Features",
      "View size"
    ],
    "pageType": "guide",
    "title": "View size",
    "section": "Auto size",
    "route": "/features/view-size",
    "fragment": "auto-size",
    "content": "vflow automatically fits it container if you pass view=\"auto\" input"
  },
  {
    "breadcrumbs": [
      "Features",
      "View size"
    ],
    "pageType": "guide",
    "title": "View size",
    "section": "Fixed size",
    "route": "/features/view-size",
    "fragment": "fixed-size",
    "content": "vflow can take fixed space if you pass [view]=\"[600, 600]\" input, where first item of array is width (in pixels), and the second is height (in pixels)."
  },
  {
    "breadcrumbs": [
      "Features",
      "Resizer"
    ],
    "pageType": "guide",
    "title": "Resizer",
    "section": "Resizer",
    "route": "/features/resizer",
    "fragment": "resizer",
    "content": "You might want to resize your node. This functionality works with nearly all types of nodes."
  },
  {
    "breadcrumbs": [
      "Features",
      "Resizer"
    ],
    "pageType": "guide",
    "title": "Resizer",
    "section": "Resize default group",
    "route": "/features/resizer",
    "fragment": "resize-default-group",
    "content": "To resize a default group, simply pass the resizable flag to a Node (or DynamicNode) of type default-group."
  },
  {
    "breadcrumbs": [
      "Features",
      "Resizer"
    ],
    "pageType": "guide",
    "title": "Resizer",
    "section": "Resize template group",
    "route": "/features/resizer",
    "fragment": "resize-template-group",
    "content": "This provides a way to have more control over the resizer: Create a template-group node.If you want the resizer to appear consistently, add the resizable directive to the SVG element (likely a "
  },
  {
    "breadcrumbs": [
      "Features",
      "Resizer"
    ],
    "pageType": "guide",
    "title": "Resizer",
    "section": "Resize template group",
    "route": "/features/resizer",
    "fragment": "resize-template-group",
    "content": ") representing your group.If you want the resizer to appear conditionally, apply the directive as [resizable]=\"yourCondition\". You can bind the visibility of the resizer to the node’s selection state (see the code below for an example).Important: Use the ctx.width() and ctx.height() signals from the context, not ctx.node.width and ctx.node.height. The latter properties are not reactive, so the node won’t update its size based on the resizer.The resizer respects the min-width and min-height CSS properties of the resizable node.Optionally, you can customize the [resizerColor] and the [gap] between the node and the resizer, with more customization options coming in the future.\""
  },
  {
    "breadcrumbs": [
      "Features",
      "Resizer"
    ],
    "pageType": "guide",
    "title": "Resizer",
    "section": "Resize a template/component regular node",
    "route": "/features/resizer",
    "fragment": "resize-a-templatecomponent-regular-node",
    "content": "The algorithm is almost the same as for template-group nodes: Create a node of type html-template or CustomNodeComponent (CustomDynamicNodeComponent).If you want the resizer to always appear, add the resizable directive to the top-level element of your custom node (ideally, a wrapper for the entire node content).If you want the resizer to appear conditionally, apply the directive as [resizable]=\"yourCondition\". Binding the visibility of the resizer to the node’s selection state can be useful.The resizer respects the min-width and min-height CSS properties of the element where the directive is applied.It's up to you to adjust the CSS of your custom node to ensure it renders correctly during resizing. The library only modifies the container size.Optionally, you can customize the [resizerColor] and the [gap] between the node and the resizer, with more customization options coming in the future."
  },
  {
    "breadcrumbs": [
      "Features",
      "Resizer"
    ],
    "pageType": "guide",
    "title": "Resizer",
    "section": "Resize event",
    "route": "/features/resizer",
    "fragment": "resize-event",
    "content": "You may want to perform some actions on resize. To do this, simply add handler to the (onNodesChange.size) output of the "
  },
  {
    "breadcrumbs": [
      "Features",
      "Resizer"
    ],
    "pageType": "guide",
    "title": "Resizer",
    "section": "Resize event",
    "route": "/features/resizer",
    "fragment": "resize-event",
    "content": " component."
  },
  {
    "breadcrumbs": [
      "Features",
      "Resizer"
    ],
    "pageType": "guide",
    "title": "Resizer",
    "section": "See also",
    "route": "/features/resizer",
    "fragment": "see-also",
    "content": "SubflowsCustom nodesHandling changes"
  },
  {
    "breadcrumbs": [
      "Workshops",
      "Layout",
      "Vizdom layout"
    ],
    "pageType": "guide",
    "title": "Vizdom layout",
    "section": "Vizdom layout",
    "route": "/workshops/layout/vizdom-layout",
    "fragment": "vizdom-layout",
    "content": "This is an example of using the vizdom library for computing layout."
  },
  {
    "breadcrumbs": [
      "Workshops",
      "Layout",
      "D3 Force"
    ],
    "pageType": "guide",
    "title": "D3 Force",
    "section": "D3 Force",
    "route": "/workshops/layout/force",
    "fragment": "d3-force",
    "content": "This is a simple example of using the d3-force layout package."
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ViewportState"
    ],
    "pageType": "api",
    "title": "ViewportState",
    "section": "ViewportState",
    "route": "/api/ngx-vflow/interfaces/ViewportState",
    "fragment": "viewportstate"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "Vflow"
    ],
    "pageType": "api",
    "title": "Vflow",
    "section": "Vflow",
    "route": "/api/ngx-vflow/variables/Vflow",
    "fragment": "vflow"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "isStaticNode"
    ],
    "pageType": "api",
    "title": "isStaticNode",
    "section": "isStaticNode",
    "route": "/api/ngx-vflow/functions/isStaticNode",
    "fragment": "isstaticnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "isDynamicNode"
    ],
    "pageType": "api",
    "title": "isDynamicNode",
    "section": "isDynamicNode",
    "route": "/api/ngx-vflow/functions/isDynamicNode",
    "fragment": "isdynamicnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "isComponentStaticNode"
    ],
    "pageType": "api",
    "title": "isComponentStaticNode",
    "section": "isComponentStaticNode",
    "route": "/api/ngx-vflow/functions/isComponentStaticNode",
    "fragment": "iscomponentstaticnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "isComponentDynamicNode"
    ],
    "pageType": "api",
    "title": "isComponentDynamicNode",
    "section": "isComponentDynamicNode",
    "route": "/api/ngx-vflow/functions/isComponentDynamicNode",
    "fragment": "iscomponentdynamicnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "isTemplateStaticNode"
    ],
    "pageType": "api",
    "title": "isTemplateStaticNode",
    "section": "isTemplateStaticNode",
    "route": "/api/ngx-vflow/functions/isTemplateStaticNode",
    "fragment": "istemplatestaticnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "isTemplateDynamicNode"
    ],
    "pageType": "api",
    "title": "isTemplateDynamicNode",
    "section": "isTemplateDynamicNode",
    "route": "/api/ngx-vflow/functions/isTemplateDynamicNode",
    "fragment": "istemplatedynamicnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "isDefaultStaticNode"
    ],
    "pageType": "api",
    "title": "isDefaultStaticNode",
    "section": "isDefaultStaticNode",
    "route": "/api/ngx-vflow/functions/isDefaultStaticNode",
    "fragment": "isdefaultstaticnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "isDefaultDynamicNode"
    ],
    "pageType": "api",
    "title": "isDefaultDynamicNode",
    "section": "isDefaultDynamicNode",
    "route": "/api/ngx-vflow/functions/isDefaultDynamicNode",
    "fragment": "isdefaultdynamicnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "isDefaultStaticGroupNode"
    ],
    "pageType": "api",
    "title": "isDefaultStaticGroupNode",
    "section": "isDefaultStaticGroupNode",
    "route": "/api/ngx-vflow/functions/isDefaultStaticGroupNode",
    "fragment": "isdefaultstaticgroupnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "isDefaultDynamicGroupNode"
    ],
    "pageType": "api",
    "title": "isDefaultDynamicGroupNode",
    "section": "isDefaultDynamicGroupNode",
    "route": "/api/ngx-vflow/functions/isDefaultDynamicGroupNode",
    "fragment": "isdefaultdynamicgroupnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "isTemplateStaticGroupNode"
    ],
    "pageType": "api",
    "title": "isTemplateStaticGroupNode",
    "section": "isTemplateStaticGroupNode",
    "route": "/api/ngx-vflow/functions/isTemplateStaticGroupNode",
    "fragment": "istemplatestaticgroupnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "isTemplateDynamicGroupNode"
    ],
    "pageType": "api",
    "title": "isTemplateDynamicGroupNode",
    "section": "isTemplateDynamicGroupNode",
    "route": "/api/ngx-vflow/functions/isTemplateDynamicGroupNode",
    "fragment": "istemplatedynamicgroupnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "Node"
    ],
    "pageType": "api",
    "title": "Node",
    "section": "Node",
    "route": "/api/ngx-vflow/type-aliases/Node",
    "fragment": "node"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "DynamicNode"
    ],
    "pageType": "api",
    "title": "DynamicNode",
    "section": "DynamicNode",
    "route": "/api/ngx-vflow/type-aliases/DynamicNode",
    "fragment": "dynamicnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "SharedNode"
    ],
    "pageType": "api",
    "title": "SharedNode",
    "section": "SharedNode",
    "route": "/api/ngx-vflow/interfaces/SharedNode",
    "fragment": "sharednode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "SharedDynamicNode"
    ],
    "pageType": "api",
    "title": "SharedDynamicNode",
    "section": "SharedDynamicNode",
    "route": "/api/ngx-vflow/interfaces/SharedDynamicNode",
    "fragment": "shareddynamicnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "DefaultNode"
    ],
    "pageType": "api",
    "title": "DefaultNode",
    "section": "DefaultNode",
    "route": "/api/ngx-vflow/interfaces/DefaultNode",
    "fragment": "defaultnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "DefaultDynamicNode"
    ],
    "pageType": "api",
    "title": "DefaultDynamicNode",
    "section": "DefaultDynamicNode",
    "route": "/api/ngx-vflow/interfaces/DefaultDynamicNode",
    "fragment": "defaultdynamicnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "HtmlTemplateNode"
    ],
    "pageType": "api",
    "title": "HtmlTemplateNode",
    "section": "HtmlTemplateNode",
    "route": "/api/ngx-vflow/interfaces/HtmlTemplateNode",
    "fragment": "htmltemplatenode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "HtmlTemplateDynamicNode"
    ],
    "pageType": "api",
    "title": "HtmlTemplateDynamicNode",
    "section": "HtmlTemplateDynamicNode",
    "route": "/api/ngx-vflow/interfaces/HtmlTemplateDynamicNode",
    "fragment": "htmltemplatedynamicnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "DefaultGroupNode"
    ],
    "pageType": "api",
    "title": "DefaultGroupNode",
    "section": "DefaultGroupNode",
    "route": "/api/ngx-vflow/interfaces/DefaultGroupNode",
    "fragment": "defaultgroupnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "DefaultDynamicGroupNode"
    ],
    "pageType": "api",
    "title": "DefaultDynamicGroupNode",
    "section": "DefaultDynamicGroupNode",
    "route": "/api/ngx-vflow/interfaces/DefaultDynamicGroupNode",
    "fragment": "defaultdynamicgroupnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "TemplateGroupNode"
    ],
    "pageType": "api",
    "title": "TemplateGroupNode",
    "section": "TemplateGroupNode",
    "route": "/api/ngx-vflow/interfaces/TemplateGroupNode",
    "fragment": "templategroupnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "TemplateDynamicGroupNode"
    ],
    "pageType": "api",
    "title": "TemplateDynamicGroupNode",
    "section": "TemplateDynamicGroupNode",
    "route": "/api/ngx-vflow/interfaces/TemplateDynamicGroupNode",
    "fragment": "templatedynamicgroupnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ComponentNode"
    ],
    "pageType": "api",
    "title": "ComponentNode",
    "section": "ComponentNode",
    "route": "/api/ngx-vflow/interfaces/ComponentNode",
    "fragment": "componentnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ComponentDynamicNode"
    ],
    "pageType": "api",
    "title": "ComponentDynamicNode",
    "section": "ComponentDynamicNode",
    "route": "/api/ngx-vflow/interfaces/ComponentDynamicNode",
    "fragment": "componentdynamicnode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "Point"
    ],
    "pageType": "api",
    "title": "Point",
    "section": "Point",
    "route": "/api/ngx-vflow/interfaces/Point",
    "fragment": "point"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "EdgeType"
    ],
    "pageType": "api",
    "title": "EdgeType",
    "section": "EdgeType",
    "route": "/api/ngx-vflow/type-aliases/EdgeType",
    "fragment": "edgetype"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "Curve"
    ],
    "pageType": "api",
    "title": "Curve",
    "section": "Curve",
    "route": "/api/ngx-vflow/type-aliases/Curve",
    "fragment": "curve"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "Edge"
    ],
    "pageType": "api",
    "title": "Edge",
    "section": "Edge",
    "route": "/api/ngx-vflow/interfaces/Edge",
    "fragment": "edge"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "EdgeLabelType"
    ],
    "pageType": "api",
    "title": "EdgeLabelType",
    "section": "EdgeLabelType",
    "route": "/api/ngx-vflow/type-aliases/EdgeLabelType",
    "fragment": "edgelabeltype"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "EdgeLabelPosition"
    ],
    "pageType": "api",
    "title": "EdgeLabelPosition",
    "section": "EdgeLabelPosition",
    "route": "/api/ngx-vflow/type-aliases/EdgeLabelPosition",
    "fragment": "edgelabelposition"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "EdgeLabel"
    ],
    "pageType": "api",
    "title": "EdgeLabel",
    "section": "EdgeLabel",
    "route": "/api/ngx-vflow/interfaces/EdgeLabel",
    "fragment": "edgelabel"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "Connection"
    ],
    "pageType": "api",
    "title": "Connection",
    "section": "Connection",
    "route": "/api/ngx-vflow/interfaces/Connection",
    "fragment": "connection"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ConnectionValidatorFn"
    ],
    "pageType": "api",
    "title": "ConnectionValidatorFn",
    "section": "ConnectionValidatorFn",
    "route": "/api/ngx-vflow/type-aliases/ConnectionValidatorFn",
    "fragment": "connectionvalidatorfn"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ConnectionSettings"
    ],
    "pageType": "api",
    "title": "ConnectionSettings",
    "section": "ConnectionSettings",
    "route": "/api/ngx-vflow/interfaces/ConnectionSettings",
    "fragment": "connectionsettings"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "Marker"
    ],
    "pageType": "api",
    "title": "Marker",
    "section": "Marker",
    "route": "/api/ngx-vflow/interfaces/Marker",
    "fragment": "marker"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ComponentNodeEvent"
    ],
    "pageType": "api",
    "title": "ComponentNodeEvent",
    "section": "ComponentNodeEvent",
    "route": "/api/ngx-vflow/type-aliases/ComponentNodeEvent",
    "fragment": "componentnodeevent",
    "content": "Event of custom component node Generic accepts array of custom components and merge their event emitters for type-safe event handling"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "AnyComponentNodeEvent"
    ],
    "pageType": "api",
    "title": "AnyComponentNodeEvent",
    "section": "AnyComponentNodeEvent",
    "route": "/api/ngx-vflow/type-aliases/AnyComponentNodeEvent",
    "fragment": "anycomponentnodeevent"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "FitViewOptions"
    ],
    "pageType": "api",
    "title": "FitViewOptions",
    "section": "FitViewOptions",
    "route": "/api/ngx-vflow/interfaces/FitViewOptions",
    "fragment": "fitviewoptions"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "FitViewOptions"
    ],
    "pageType": "api",
    "title": "FitViewOptions",
    "section": "Properties",
    "route": "/api/ngx-vflow/interfaces/FitViewOptions",
    "fragment": "properties",
    "content": "Duration of animated transition to new viewport"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "FitViewOptions"
    ],
    "pageType": "api",
    "title": "FitViewOptions",
    "section": "Properties",
    "route": "/api/ngx-vflow/interfaces/FitViewOptions",
    "fragment": "properties",
    "content": "Nodes that should be visible after fitView. The whole flow will be visible if not passed or passed an empty array"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "FitViewOptions"
    ],
    "pageType": "api",
    "title": "FitViewOptions",
    "section": "Properties",
    "route": "/api/ngx-vflow/interfaces/FitViewOptions",
    "fragment": "properties",
    "content": "Padding for viewport"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "Optimization"
    ],
    "pageType": "api",
    "title": "Optimization",
    "section": "Optimization",
    "route": "/api/ngx-vflow/interfaces/Optimization",
    "fragment": "optimization"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "Optimization"
    ],
    "pageType": "api",
    "title": "Optimization",
    "section": "Properties",
    "route": "/api/ngx-vflow/interfaces/Optimization",
    "fragment": "properties",
    "content": "If true, the layer with groups will be placed behind the edges layer. This approach fixes the issue when you can't select an edge inside group. false"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "NodeChange"
    ],
    "pageType": "api",
    "title": "NodeChange",
    "section": "NodeChange",
    "route": "/api/ngx-vflow/type-aliases/NodeChange",
    "fragment": "nodechange"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "NodePositionChange"
    ],
    "pageType": "api",
    "title": "NodePositionChange",
    "section": "NodePositionChange",
    "route": "/api/ngx-vflow/interfaces/NodePositionChange",
    "fragment": "nodepositionchange"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "NodeSizeChange"
    ],
    "pageType": "api",
    "title": "NodeSizeChange",
    "section": "NodeSizeChange",
    "route": "/api/ngx-vflow/interfaces/NodeSizeChange",
    "fragment": "nodesizechange"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "NodeAddChange"
    ],
    "pageType": "api",
    "title": "NodeAddChange",
    "section": "NodeAddChange",
    "route": "/api/ngx-vflow/interfaces/NodeAddChange",
    "fragment": "nodeaddchange"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "NodeRemoveChange"
    ],
    "pageType": "api",
    "title": "NodeRemoveChange",
    "section": "NodeRemoveChange",
    "route": "/api/ngx-vflow/interfaces/NodeRemoveChange",
    "fragment": "noderemovechange"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "NodeSelectedChange"
    ],
    "pageType": "api",
    "title": "NodeSelectedChange",
    "section": "NodeSelectedChange",
    "route": "/api/ngx-vflow/interfaces/NodeSelectedChange",
    "fragment": "nodeselectedchange"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "EdgeChange"
    ],
    "pageType": "api",
    "title": "EdgeChange",
    "section": "EdgeChange",
    "route": "/api/ngx-vflow/type-aliases/EdgeChange",
    "fragment": "edgechange"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "EdgeDetachedChange"
    ],
    "pageType": "api",
    "title": "EdgeDetachedChange",
    "section": "EdgeDetachedChange",
    "route": "/api/ngx-vflow/interfaces/EdgeDetachedChange",
    "fragment": "edgedetachedchange"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "EdgeAddChange"
    ],
    "pageType": "api",
    "title": "EdgeAddChange",
    "section": "EdgeAddChange",
    "route": "/api/ngx-vflow/interfaces/EdgeAddChange",
    "fragment": "edgeaddchange"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "EdgeRemoveChange"
    ],
    "pageType": "api",
    "title": "EdgeRemoveChange",
    "section": "EdgeRemoveChange",
    "route": "/api/ngx-vflow/interfaces/EdgeRemoveChange",
    "fragment": "edgeremovechange"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "EdgeSelectChange"
    ],
    "pageType": "api",
    "title": "EdgeSelectChange",
    "section": "EdgeSelectChange",
    "route": "/api/ngx-vflow/interfaces/EdgeSelectChange",
    "fragment": "edgeselectchange"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "Position"
    ],
    "pageType": "api",
    "title": "Position",
    "section": "Position",
    "route": "/api/ngx-vflow/type-aliases/Position",
    "fragment": "position"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "Background"
    ],
    "pageType": "api",
    "title": "Background",
    "section": "Background",
    "route": "/api/ngx-vflow/type-aliases/Background",
    "fragment": "background"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ColorBackground"
    ],
    "pageType": "api",
    "title": "ColorBackground",
    "section": "ColorBackground",
    "route": "/api/ngx-vflow/interfaces/ColorBackground",
    "fragment": "colorbackground"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "DotsBackground"
    ],
    "pageType": "api",
    "title": "DotsBackground",
    "section": "DotsBackground",
    "route": "/api/ngx-vflow/interfaces/DotsBackground",
    "fragment": "dotsbackground"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "DotsBackground"
    ],
    "pageType": "api",
    "title": "DotsBackground",
    "section": "Properties",
    "route": "/api/ngx-vflow/interfaces/DotsBackground",
    "fragment": "properties",
    "content": "Color behind tha dot pattern"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "DotsBackground"
    ],
    "pageType": "api",
    "title": "DotsBackground",
    "section": "Properties",
    "route": "/api/ngx-vflow/interfaces/DotsBackground",
    "fragment": "properties",
    "content": "Color of the dot"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "DotsBackground"
    ],
    "pageType": "api",
    "title": "DotsBackground",
    "section": "Properties",
    "route": "/api/ngx-vflow/interfaces/DotsBackground",
    "fragment": "properties",
    "content": "Gap between dots"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "DotsBackground"
    ],
    "pageType": "api",
    "title": "DotsBackground",
    "section": "Properties",
    "route": "/api/ngx-vflow/interfaces/DotsBackground",
    "fragment": "properties",
    "content": "Diameter of the dot"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ImageBackground"
    ],
    "pageType": "api",
    "title": "ImageBackground",
    "section": "ImageBackground",
    "route": "/api/ngx-vflow/interfaces/ImageBackground",
    "fragment": "imagebackground"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ImageBackground"
    ],
    "pageType": "api",
    "title": "ImageBackground",
    "section": "Properties",
    "route": "/api/ngx-vflow/interfaces/ImageBackground",
    "fragment": "properties",
    "content": "If true, image will be fixed on the background (not moving with the flow, zoom also doesn't affect it)"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ImageBackground"
    ],
    "pageType": "api",
    "title": "ImageBackground",
    "section": "Properties",
    "route": "/api/ngx-vflow/interfaces/ImageBackground",
    "fragment": "properties",
    "content": "If true, image will be repeated"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ImageBackground"
    ],
    "pageType": "api",
    "title": "ImageBackground",
    "section": "Properties",
    "route": "/api/ngx-vflow/interfaces/ImageBackground",
    "fragment": "properties",
    "content": "Scale relative to natural image size. For example, if image is 100x100 and scale is 0.5, it will be rendered as 50x50"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ImageBackground"
    ],
    "pageType": "api",
    "title": "ImageBackground",
    "section": "Properties",
    "route": "/api/ngx-vflow/interfaces/ImageBackground",
    "fragment": "properties",
    "content": "Path to image. Passes as a href to this element: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/image"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ConnectionMode"
    ],
    "pageType": "api",
    "title": "ConnectionMode",
    "section": "ConnectionMode",
    "route": "/api/ngx-vflow/type-aliases/ConnectionMode",
    "fragment": "connectionmode"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "KeyboardAction"
    ],
    "pageType": "api",
    "title": "KeyboardAction",
    "section": "KeyboardAction",
    "route": "/api/ngx-vflow/type-aliases/KeyboardAction",
    "fragment": "keyboardaction"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "KeyboardShortcuts"
    ],
    "pageType": "api",
    "title": "KeyboardShortcuts",
    "section": "KeyboardShortcuts",
    "route": "/api/ngx-vflow/type-aliases/KeyboardShortcuts",
    "fragment": "keyboardshortcuts"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "VflowComponent",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "vflowcomponent"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "properties",
    "content": "Signal to reading edges change"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "properties",
    "content": "Observable with edges change"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "properties",
    "content": "Signal for reading nodes change"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "properties",
    "content": "Observable with nodes change"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "properties",
    "content": "Event that accumulates all custom node events"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "properties",
    "content": "Signal for reading viewport change"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "properties",
    "content": "Observable with viewport change"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Accessors",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "accessors",
    "content": "Background for flow"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Accessors",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "accessors",
    "content": "Settings for connection (it renders when user tries to create edge between nodes) You need to pass ConnectionSettings in this input."
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Accessors",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "accessors",
    "content": "Edges to render"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Accessors",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "accessors",
    "content": "Global rule if you can or can't select entities"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Accessors",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "accessors",
    "content": "Maximum zoom value"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Accessors",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "accessors",
    "content": "Minimum zoom value"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Accessors",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "accessors",
    "content": "Nodes to render"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Accessors",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "accessors",
    "content": "Size for flow view accepts absolute size in format [width, height] or'auto' to compute size based on parent element size"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Methods",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "methods",
    "content": "Convert point received from document to point on the flow"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Methods",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "methods",
    "content": "Sync method to get detached edges"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Methods",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "methods",
    "content": "Get node by id"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Methods",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "methods",
    "content": "node id"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Methods",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "methods",
    "content": "Move to specified coordinate"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Methods",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "methods",
    "content": "point where to move"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Methods",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "methods",
    "content": "Change viewport to specified state"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Methods",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "methods",
    "content": "viewport state"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Methods",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "methods",
    "content": "Change zoom"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "VflowComponent"
    ],
    "pageType": "api",
    "title": "VflowComponent",
    "section": "Methods",
    "route": "/api/ngx-vflow/classes/VflowComponent",
    "fragment": "methods",
    "content": "zoom value"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "HandleComponent"
    ],
    "pageType": "api",
    "title": "HandleComponent",
    "section": "HandleComponent",
    "route": "/api/ngx-vflow/classes/HandleComponent",
    "fragment": "handlecomponent"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "HandleComponent"
    ],
    "pageType": "api",
    "title": "HandleComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/HandleComponent",
    "fragment": "properties",
    "content": "Should be used if node has more than one source/target"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "HandleComponent"
    ],
    "pageType": "api",
    "title": "HandleComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/HandleComponent",
    "fragment": "properties",
    "content": "At what side of node this component should be placed"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "HandleComponent"
    ],
    "pageType": "api",
    "title": "HandleComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/HandleComponent",
    "fragment": "properties",
    "content": "Source or target"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "CustomNodeComponent"
    ],
    "pageType": "api",
    "title": "CustomNodeComponent",
    "section": "CustomNodeComponent",
    "route": "/api/ngx-vflow/classes/CustomNodeComponent",
    "fragment": "customnodecomponent"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "CustomNodeComponent"
    ],
    "pageType": "api",
    "title": "CustomNodeComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/CustomNodeComponent",
    "fragment": "properties",
    "content": "Reference to node bound to this component"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "CustomNodeComponent"
    ],
    "pageType": "api",
    "title": "CustomNodeComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/CustomNodeComponent",
    "fragment": "properties",
    "content": "Signal with selected state of node"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "CustomDynamicNodeComponent"
    ],
    "pageType": "api",
    "title": "CustomDynamicNodeComponent",
    "section": "CustomDynamicNodeComponent",
    "route": "/api/ngx-vflow/classes/CustomDynamicNodeComponent",
    "fragment": "customdynamicnodecomponent"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "CustomDynamicNodeComponent"
    ],
    "pageType": "api",
    "title": "CustomDynamicNodeComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/CustomDynamicNodeComponent",
    "fragment": "properties",
    "content": "Reference to node bound to this component"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "CustomDynamicNodeComponent"
    ],
    "pageType": "api",
    "title": "CustomDynamicNodeComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/CustomDynamicNodeComponent",
    "fragment": "properties",
    "content": "Signal with selected state of node"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ResizableComponent"
    ],
    "pageType": "api",
    "title": "ResizableComponent",
    "section": "ResizableComponent",
    "route": "/api/ngx-vflow/classes/ResizableComponent",
    "fragment": "resizablecomponent"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "MiniMapPosition"
    ],
    "pageType": "api",
    "title": "MiniMapPosition",
    "section": "MiniMapPosition",
    "route": "/api/ngx-vflow/type-aliases/MiniMapPosition",
    "fragment": "minimapposition"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "MiniMapComponent"
    ],
    "pageType": "api",
    "title": "MiniMapComponent",
    "section": "MiniMapComponent",
    "route": "/api/ngx-vflow/classes/MiniMapComponent",
    "fragment": "minimapcomponent"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "MiniMapComponent"
    ],
    "pageType": "api",
    "title": "MiniMapComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/MiniMapComponent",
    "fragment": "properties",
    "content": "The color outside the viewport (invisible area)"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "MiniMapComponent"
    ],
    "pageType": "api",
    "title": "MiniMapComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/MiniMapComponent",
    "fragment": "properties",
    "content": "The corner of the flow where to render a mini-map"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "MiniMapComponent"
    ],
    "pageType": "api",
    "title": "MiniMapComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/MiniMapComponent",
    "fragment": "properties",
    "content": "Make a minimap bigger on hover"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "MiniMapComponent"
    ],
    "pageType": "api",
    "title": "MiniMapComponent",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/MiniMapComponent",
    "fragment": "properties",
    "content": "The minimap stroke color"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "NodeToolbarComponent"
    ],
    "pageType": "api",
    "title": "NodeToolbarComponent",
    "section": "NodeToolbarComponent",
    "route": "/api/ngx-vflow/classes/NodeToolbarComponent",
    "fragment": "nodetoolbarcomponent"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "NodeToolbarWrapperDirective"
    ],
    "pageType": "api",
    "title": "NodeToolbarWrapperDirective",
    "section": "NodeToolbarWrapperDirective",
    "route": "/api/ngx-vflow/classes/NodeToolbarWrapperDirective",
    "fragment": "nodetoolbarwrapperdirective"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "EdgeTemplateDirective"
    ],
    "pageType": "api",
    "title": "EdgeTemplateDirective",
    "section": "EdgeTemplateDirective",
    "route": "/api/ngx-vflow/classes/EdgeTemplateDirective",
    "fragment": "edgetemplatedirective"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ConnectionTemplateDirective"
    ],
    "pageType": "api",
    "title": "ConnectionTemplateDirective",
    "section": "ConnectionTemplateDirective",
    "route": "/api/ngx-vflow/classes/ConnectionTemplateDirective",
    "fragment": "connectiontemplatedirective"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "EdgeLabelHtmlTemplateDirective"
    ],
    "pageType": "api",
    "title": "EdgeLabelHtmlTemplateDirective",
    "section": "EdgeLabelHtmlTemplateDirective",
    "route": "/api/ngx-vflow/classes/EdgeLabelHtmlTemplateDirective",
    "fragment": "edgelabelhtmltemplatedirective"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "NodeHtmlTemplateDirective"
    ],
    "pageType": "api",
    "title": "NodeHtmlTemplateDirective",
    "section": "NodeHtmlTemplateDirective",
    "route": "/api/ngx-vflow/classes/NodeHtmlTemplateDirective",
    "fragment": "nodehtmltemplatedirective"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "GroupNodeTemplateDirective"
    ],
    "pageType": "api",
    "title": "GroupNodeTemplateDirective",
    "section": "GroupNodeTemplateDirective",
    "route": "/api/ngx-vflow/classes/GroupNodeTemplateDirective",
    "fragment": "groupnodetemplatedirective"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "HandleTemplateDirective"
    ],
    "pageType": "api",
    "title": "HandleTemplateDirective",
    "section": "HandleTemplateDirective",
    "route": "/api/ngx-vflow/classes/HandleTemplateDirective",
    "fragment": "handletemplatedirective"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ConnectionControllerDirective"
    ],
    "pageType": "api",
    "title": "ConnectionControllerDirective",
    "section": "ConnectionControllerDirective",
    "route": "/api/ngx-vflow/classes/ConnectionControllerDirective",
    "fragment": "connectioncontrollerdirective"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ConnectionControllerDirective"
    ],
    "pageType": "api",
    "title": "ConnectionControllerDirective",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/ConnectionControllerDirective",
    "fragment": "properties",
    "content": "This event fires when user tries to create new Edge. Connection is an entity that contains data about source and target nodes. Also it's important to note, that this event only fires when connection is valid by validator function in ConnectionSettings, by default without passing the validator every connection concidered valid."
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ChangesControllerDirective"
    ],
    "pageType": "api",
    "title": "ChangesControllerDirective",
    "section": "ChangesControllerDirective",
    "route": "/api/ngx-vflow/classes/ChangesControllerDirective",
    "fragment": "changescontrollerdirective"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ChangesControllerDirective"
    ],
    "pageType": "api",
    "title": "ChangesControllerDirective",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/ChangesControllerDirective",
    "fragment": "properties",
    "content": "Watch edges change"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "ChangesControllerDirective"
    ],
    "pageType": "api",
    "title": "ChangesControllerDirective",
    "section": "Properties",
    "route": "/api/ngx-vflow/classes/ChangesControllerDirective",
    "fragment": "properties",
    "content": "Watch nodes change"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "SelectableDirective"
    ],
    "pageType": "api",
    "title": "SelectableDirective",
    "section": "SelectableDirective",
    "route": "/api/ngx-vflow/classes/SelectableDirective",
    "fragment": "selectabledirective"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "DragHandleDirective"
    ],
    "pageType": "api",
    "title": "DragHandleDirective",
    "section": "DragHandleDirective",
    "route": "/api/ngx-vflow/classes/DragHandleDirective",
    "fragment": "draghandledirective"
  },
  {
    "breadcrumbs": [
      "API",
      "ngx-vflow",
      "provideCustomNodeMocks"
    ],
    "pageType": "api",
    "title": "provideCustomNodeMocks",
    "section": "provideCustomNodeMocks",
    "route": "/api/ngx-vflow/functions/provideCustomNodeMocks",
    "fragment": "providecustomnodemocks"
  }
]